//
// File generated by /usr/local/fairsoft/fairsoft_jul14p3-install/bin/rootcint at Mon Mar  9 18:21:55 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIdaqdIfair_install_2015dIATTPCROOT_09032015dIbuilddIrecodIG__ATTPCRecoDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__ATTPCRecoDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GETFrame_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GETFrame(void *p = 0);
   static void *newArray_GETFrame(Long_t size, void *p);
   static void delete_GETFrame(void *p);
   static void deleteArray_GETFrame(void *p);
   static void destruct_GETFrame(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GETFrame*)
   {
      ::GETFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GETFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GETFrame", ::GETFrame::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_09032015/reco/GETDecoder/GETFrame.hh", 23,
                  typeid(::GETFrame), DefineBehavior(ptr, ptr),
                  &::GETFrame::Dictionary, isa_proxy, 4,
                  sizeof(::GETFrame) );
      instance.SetNew(&new_GETFrame);
      instance.SetNewArray(&newArray_GETFrame);
      instance.SetDelete(&delete_GETFrame);
      instance.SetDeleteArray(&deleteArray_GETFrame);
      instance.SetDestructor(&destruct_GETFrame);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GETFrame*)
   {
      return GenerateInitInstanceLocal((::GETFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GETFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void GETPlot_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GETPlot(void *p = 0);
   static void *newArray_GETPlot(Long_t size, void *p);
   static void delete_GETPlot(void *p);
   static void deleteArray_GETPlot(void *p);
   static void destruct_GETPlot(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GETPlot*)
   {
      ::GETPlot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GETPlot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GETPlot", ::GETPlot::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_09032015/reco/GETDecoder/GETPlot.hh", 29,
                  typeid(::GETPlot), DefineBehavior(ptr, ptr),
                  &::GETPlot::Dictionary, isa_proxy, 4,
                  sizeof(::GETPlot) );
      instance.SetNew(&new_GETPlot);
      instance.SetNewArray(&newArray_GETPlot);
      instance.SetDelete(&delete_GETPlot);
      instance.SetDeleteArray(&deleteArray_GETPlot);
      instance.SetDestructor(&destruct_GETPlot);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GETPlot*)
   {
      return GenerateInitInstanceLocal((::GETPlot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GETPlot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void GETMath_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GETMath(void *p = 0);
   static void *newArray_GETMath(Long_t size, void *p);
   static void delete_GETMath(void *p);
   static void deleteArray_GETMath(void *p);
   static void destruct_GETMath(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GETMath*)
   {
      ::GETMath *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GETMath >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GETMath", ::GETMath::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_09032015/reco/GETDecoder/GETMath.hh", 28,
                  typeid(::GETMath), DefineBehavior(ptr, ptr),
                  &::GETMath::Dictionary, isa_proxy, 4,
                  sizeof(::GETMath) );
      instance.SetNew(&new_GETMath);
      instance.SetNewArray(&newArray_GETMath);
      instance.SetDelete(&delete_GETMath);
      instance.SetDeleteArray(&deleteArray_GETMath);
      instance.SetDestructor(&destruct_GETMath);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GETMath*)
   {
      return GenerateInitInstanceLocal((::GETMath*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GETMath*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void GETDecoder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GETDecoder(void *p = 0);
   static void *newArray_GETDecoder(Long_t size, void *p);
   static void delete_GETDecoder(void *p);
   static void deleteArray_GETDecoder(void *p);
   static void destruct_GETDecoder(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GETDecoder*)
   {
      ::GETDecoder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GETDecoder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GETDecoder", ::GETDecoder::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_09032015/reco/GETDecoder/GETDecoder.hh", 29,
                  typeid(::GETDecoder), DefineBehavior(ptr, ptr),
                  &::GETDecoder::Dictionary, isa_proxy, 4,
                  sizeof(::GETDecoder) );
      instance.SetNew(&new_GETDecoder);
      instance.SetNewArray(&newArray_GETDecoder);
      instance.SetDelete(&delete_GETDecoder);
      instance.SetDeleteArray(&deleteArray_GETDecoder);
      instance.SetDestructor(&destruct_GETDecoder);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GETDecoder*)
   {
      return GenerateInitInstanceLocal((::GETDecoder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GETDecoder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ATPad_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ATPad(void *p = 0);
   static void *newArray_ATPad(Long_t size, void *p);
   static void delete_ATPad(void *p);
   static void deleteArray_ATPad(void *p);
   static void destruct_ATPad(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ATPad*)
   {
      ::ATPad *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ATPad >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ATPad", ::ATPad::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_09032015/reco/ATDecoder/ATPad.hh", 15,
                  typeid(::ATPad), DefineBehavior(ptr, ptr),
                  &::ATPad::Dictionary, isa_proxy, 4,
                  sizeof(::ATPad) );
      instance.SetNew(&new_ATPad);
      instance.SetNewArray(&newArray_ATPad);
      instance.SetDelete(&delete_ATPad);
      instance.SetDeleteArray(&deleteArray_ATPad);
      instance.SetDestructor(&destruct_ATPad);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ATPad*)
   {
      return GenerateInitInstanceLocal((::ATPad*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ATPad*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ATRawEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ATRawEvent(void *p = 0);
   static void *newArray_ATRawEvent(Long_t size, void *p);
   static void delete_ATRawEvent(void *p);
   static void deleteArray_ATRawEvent(void *p);
   static void destruct_ATRawEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ATRawEvent*)
   {
      ::ATRawEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ATRawEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ATRawEvent", ::ATRawEvent::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_09032015/reco/ATDecoder/ATRawEvent.hh", 19,
                  typeid(::ATRawEvent), DefineBehavior(ptr, ptr),
                  &::ATRawEvent::Dictionary, isa_proxy, 4,
                  sizeof(::ATRawEvent) );
      instance.SetNew(&new_ATRawEvent);
      instance.SetNewArray(&newArray_ATRawEvent);
      instance.SetDelete(&delete_ATRawEvent);
      instance.SetDeleteArray(&deleteArray_ATRawEvent);
      instance.SetDestructor(&destruct_ATRawEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ATRawEvent*)
   {
      return GenerateInitInstanceLocal((::ATRawEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ATRawEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ATCore_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ATCore(void *p = 0);
   static void *newArray_ATCore(Long_t size, void *p);
   static void delete_ATCore(void *p);
   static void deleteArray_ATCore(void *p);
   static void destruct_ATCore(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ATCore*)
   {
      ::ATCore *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ATCore >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ATCore", ::ATCore::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_09032015/reco/ATDecoder/ATCore.hh", 21,
                  typeid(::ATCore), DefineBehavior(ptr, ptr),
                  &::ATCore::Dictionary, isa_proxy, 4,
                  sizeof(::ATCore) );
      instance.SetNew(&new_ATCore);
      instance.SetNewArray(&newArray_ATCore);
      instance.SetDelete(&delete_ATCore);
      instance.SetDeleteArray(&deleteArray_ATCore);
      instance.SetDestructor(&destruct_ATCore);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ATCore*)
   {
      return GenerateInitInstanceLocal((::ATCore*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ATCore*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ATDecoderTask_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ATDecoderTask(void *p = 0);
   static void *newArray_ATDecoderTask(Long_t size, void *p);
   static void delete_ATDecoderTask(void *p);
   static void deleteArray_ATDecoderTask(void *p);
   static void destruct_ATDecoderTask(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ATDecoderTask*)
   {
      ::ATDecoderTask *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ATDecoderTask >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ATDecoderTask", ::ATDecoderTask::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_09032015/reco/ATDecoderTask.hh", 25,
                  typeid(::ATDecoderTask), DefineBehavior(ptr, ptr),
                  &::ATDecoderTask::Dictionary, isa_proxy, 4,
                  sizeof(::ATDecoderTask) );
      instance.SetNew(&new_ATDecoderTask);
      instance.SetNewArray(&newArray_ATDecoderTask);
      instance.SetDelete(&delete_ATDecoderTask);
      instance.SetDeleteArray(&deleteArray_ATDecoderTask);
      instance.SetDestructor(&destruct_ATDecoderTask);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ATDecoderTask*)
   {
      return GenerateInitInstanceLocal((::ATDecoderTask*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ATDecoderTask*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *GETFrame::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GETFrame::Class_Name()
{
   return "GETFrame";
}

//______________________________________________________________________________
const char *GETFrame::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GETFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GETFrame::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GETFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GETFrame::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GETFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GETFrame::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GETFrame*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *GETPlot::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GETPlot::Class_Name()
{
   return "GETPlot";
}

//______________________________________________________________________________
const char *GETPlot::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GETPlot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GETPlot::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GETPlot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GETPlot::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GETPlot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GETPlot::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GETPlot*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *GETMath::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GETMath::Class_Name()
{
   return "GETMath";
}

//______________________________________________________________________________
const char *GETMath::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GETMath*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GETMath::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GETMath*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GETMath::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GETMath*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GETMath::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GETMath*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *GETDecoder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GETDecoder::Class_Name()
{
   return "GETDecoder";
}

//______________________________________________________________________________
const char *GETDecoder::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GETDecoder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GETDecoder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GETDecoder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GETDecoder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GETDecoder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GETDecoder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GETDecoder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ATPad::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ATPad::Class_Name()
{
   return "ATPad";
}

//______________________________________________________________________________
const char *ATPad::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ATPad*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ATPad::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ATPad*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ATPad::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ATPad*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ATPad::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ATPad*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ATRawEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ATRawEvent::Class_Name()
{
   return "ATRawEvent";
}

//______________________________________________________________________________
const char *ATRawEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ATRawEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ATRawEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ATRawEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ATRawEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ATRawEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ATRawEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ATRawEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ATCore::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ATCore::Class_Name()
{
   return "ATCore";
}

//______________________________________________________________________________
const char *ATCore::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ATCore*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ATCore::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ATCore*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ATCore::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ATCore*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ATCore::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ATCore*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ATDecoderTask::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ATDecoderTask::Class_Name()
{
   return "ATDecoderTask";
}

//______________________________________________________________________________
const char *ATDecoderTask::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ATDecoderTask*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ATDecoderTask::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ATDecoderTask*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ATDecoderTask::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ATDecoderTask*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ATDecoderTask::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ATDecoderTask*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void GETDecoder::Streamer(TBuffer &R__b)
{
   // Stream an object of class GETDecoder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GETDecoder::Class(),this);
   } else {
      R__b.WriteClassBuffer(GETDecoder::Class(),this);
   }
}

//______________________________________________________________________________
void GETDecoder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GETDecoder.
      TClass *R__cl = ::GETDecoder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumTbs", &fNumTbs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndianness", &fEndianness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMergedUnitBlock", &fMergedUnitBlock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFrameType", &fFrameType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMergedHeaderSize", &fMergedHeaderSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumMergedFrames", &fNumMergedFrames);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUnitBlock", &fUnitBlock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMergedFrameStartPoint", &fMergedFrameStartPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentMergedFrameSize", &fCurrentMergedFrameSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentInnerFrameSize", &fCurrentInnerFrameSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDebugMode", &fDebugMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsAutoReload", &fIsAutoReload);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPositivePolarity", &fIsPositivePolarity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fData", (void*)&fData);
      R__insp.InspectMember("ifstream", (void*)&fData, "fData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileSize", &fFileSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataList", (void*)&fDataList);
      R__insp.InspectMember("vector<TString>", (void*)&fDataList, "fDataList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentDataID", &fCurrentDataID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFrame", &fFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentFrameID", &fCurrentFrameID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentInnerFrameID", &fCurrentInnerFrameID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEOF", &fEOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGETPlot", &fGETPlot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGETMath", &fGETMath);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GETDecoder(void *p) {
      return  p ? new(p) ::GETDecoder : new ::GETDecoder;
   }
   static void *newArray_GETDecoder(Long_t nElements, void *p) {
      return p ? new(p) ::GETDecoder[nElements] : new ::GETDecoder[nElements];
   }
   // Wrapper around operator delete
   static void delete_GETDecoder(void *p) {
      delete ((::GETDecoder*)p);
   }
   static void deleteArray_GETDecoder(void *p) {
      delete [] ((::GETDecoder*)p);
   }
   static void destruct_GETDecoder(void *p) {
      typedef ::GETDecoder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GETDecoder

//______________________________________________________________________________
void GETFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class GETFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GETFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(GETFrame::Class(),this);
   }
}

//______________________________________________________________________________
void GETFrame::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GETFrame.
      TClass *R__cl = ::GETFrame::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumTbs", &fNumTbs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMath", &fMath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventIdx", &fEventIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoboIdx", &fCoboIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAsadIdx", &fAsadIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFrameIdx", &fFrameIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPolarity", &fPolarity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawAdc[139264]", fRawAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxAdcIdx[272]", fMaxAdcIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAdc[139264]", fAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPedestalSubtracted[272]", fIsPedestalSubtracted);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsCalcPedestalUsed[272]", fIsCalcPedestalUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInternalPedestal[272]", fInternalPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsSetPedestalUsed[272]", fIsSetPedestalUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestalDataMean[272]", fPedestalDataMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestalData[139264]", fPedestalData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPedestalSigmaData[139264]", fPedestalSigmaData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsFPNPedestalUsed", &fIsFPNPedestalUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFPNSigmaThreshold", &fFPNSigmaThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFPNPedestalMean[16]", fFPNPedestalMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFPNStartTb", &fFPNStartTb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFPNAverageTbs", &fFPNAverageTbs);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GETFrame(void *p) {
      return  p ? new(p) ::GETFrame : new ::GETFrame;
   }
   static void *newArray_GETFrame(Long_t nElements, void *p) {
      return p ? new(p) ::GETFrame[nElements] : new ::GETFrame[nElements];
   }
   // Wrapper around operator delete
   static void delete_GETFrame(void *p) {
      delete ((::GETFrame*)p);
   }
   static void deleteArray_GETFrame(void *p) {
      delete [] ((::GETFrame*)p);
   }
   static void destruct_GETFrame(void *p) {
      typedef ::GETFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GETFrame

//______________________________________________________________________________
void GETMath::Streamer(TBuffer &R__b)
{
   // Stream an object of class GETMath.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GETMath::Class(),this);
   } else {
      R__b.WriteClassBuffer(GETMath::Class(),this);
   }
}

//______________________________________________________________________________
void GETMath::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GETMath.
      TClass *R__cl = ::GETMath::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDecoder", &fDecoder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFrame", &fFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumValues", &fNumValues);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMean", &fMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRms", &fRms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAdc[4]", &fAdc);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GETMath(void *p) {
      return  p ? new(p) ::GETMath : new ::GETMath;
   }
   static void *newArray_GETMath(Long_t nElements, void *p) {
      return p ? new(p) ::GETMath[nElements] : new ::GETMath[nElements];
   }
   // Wrapper around operator delete
   static void delete_GETMath(void *p) {
      delete ((::GETMath*)p);
   }
   static void deleteArray_GETMath(void *p) {
      delete [] ((::GETMath*)p);
   }
   static void destruct_GETMath(void *p) {
      typedef ::GETMath current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GETMath

//______________________________________________________________________________
void GETPlot::Streamer(TBuffer &R__b)
{
   // Stream an object of class GETPlot.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GETPlot::Class(),this);
   } else {
      R__b.WriteClassBuffer(GETPlot::Class(),this);
   }
}

//______________________________________________________________________________
void GETPlot::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GETPlot.
      TClass *R__cl = ::GETPlot::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinTb", &fMinTb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxTb", &fMaxTb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFPNThreshold", &fFPNThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDecoder", &fDecoder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFrame", &fFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAsad", &fAsad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGraph", &fGraph);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAget[4]", &fAget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAgetMinX[4][4]", fAgetMinX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAgetMaxX[4][4]", fAgetMaxX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAgetMinY[4][4]", fAgetMinY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAgetMaxY[4][4]", fAgetMaxY);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GETPlot(void *p) {
      return  p ? new(p) ::GETPlot : new ::GETPlot;
   }
   static void *newArray_GETPlot(Long_t nElements, void *p) {
      return p ? new(p) ::GETPlot[nElements] : new ::GETPlot[nElements];
   }
   // Wrapper around operator delete
   static void delete_GETPlot(void *p) {
      delete ((::GETPlot*)p);
   }
   static void deleteArray_GETPlot(void *p) {
      delete [] ((::GETPlot*)p);
   }
   static void destruct_GETPlot(void *p) {
      typedef ::GETPlot current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GETPlot

//______________________________________________________________________________
void ATCore::Streamer(TBuffer &R__b)
{
   // Stream an object of class ATCore.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ATCore::Class(),this);
   } else {
      R__b.WriteClassBuffer(ATCore::Class(),this);
   }
}

//______________________________________________________________________________
void ATCore::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ATCore.
      TClass *R__cl = ::ATCore::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAtMapPtr", &fAtMapPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kDebug", &kDebug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGETDecoderPtr", &fGETDecoderPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsData", &fIsData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumTbs", &fNumTbs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawEventPtr", &fRawEventPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrevEventNo", &fPrevEventNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrEventNo", &fCurrEventNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrFrameNo", &fCurrFrameNo);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ATCore(void *p) {
      return  p ? new(p) ::ATCore : new ::ATCore;
   }
   static void *newArray_ATCore(Long_t nElements, void *p) {
      return p ? new(p) ::ATCore[nElements] : new ::ATCore[nElements];
   }
   // Wrapper around operator delete
   static void delete_ATCore(void *p) {
      delete ((::ATCore*)p);
   }
   static void deleteArray_ATCore(void *p) {
      delete [] ((::ATCore*)p);
   }
   static void destruct_ATCore(void *p) {
      typedef ::ATCore current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ATCore

//______________________________________________________________________________
void ATPad::Streamer(TBuffer &R__b)
{
   // Stream an object of class ATPad.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ATPad::Class(),this);
   } else {
      R__b.WriteClassBuffer(ATPad::Class(),this);
   }
}

//______________________________________________________________________________
void ATPad::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ATPad.
      TClass *R__cl = ::ATPad::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPadNum", &fPadNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kIsValid", &kIsValid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawAdc[512]", fRawAdc);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ATPad(void *p) {
      return  p ? new(p) ::ATPad : new ::ATPad;
   }
   static void *newArray_ATPad(Long_t nElements, void *p) {
      return p ? new(p) ::ATPad[nElements] : new ::ATPad[nElements];
   }
   // Wrapper around operator delete
   static void delete_ATPad(void *p) {
      delete ((::ATPad*)p);
   }
   static void deleteArray_ATPad(void *p) {
      delete [] ((::ATPad*)p);
   }
   static void destruct_ATPad(void *p) {
      typedef ::ATPad current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ATPad

//______________________________________________________________________________
void ATRawEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class ATRawEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ATRawEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(ATRawEvent::Class(),this);
   }
}

//______________________________________________________________________________
void ATRawEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ATRawEvent.
      TClass *R__cl = ::ATRawEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventID", &fEventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPadArray", (void*)&fPadArray);
      R__insp.InspectMember("vector<ATPad>", (void*)&fPadArray, "fPadArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsGood", &fIsGood);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ATRawEvent(void *p) {
      return  p ? new(p) ::ATRawEvent : new ::ATRawEvent;
   }
   static void *newArray_ATRawEvent(Long_t nElements, void *p) {
      return p ? new(p) ::ATRawEvent[nElements] : new ::ATRawEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_ATRawEvent(void *p) {
      delete ((::ATRawEvent*)p);
   }
   static void deleteArray_ATRawEvent(void *p) {
      delete [] ((::ATRawEvent*)p);
   }
   static void destruct_ATRawEvent(void *p) {
      typedef ::ATRawEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ATRawEvent

//______________________________________________________________________________
void ATDecoderTask::Streamer(TBuffer &R__b)
{
   // Stream an object of class ATDecoderTask.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ATDecoderTask::Class(),this);
   } else {
      R__b.WriteClassBuffer(ATDecoderTask::Class(),this);
   }
}

//______________________________________________________________________________
void ATDecoderTask::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ATDecoderTask.
      TClass *R__cl = ::ATDecoderTask::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogger", &fLogger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDecoder", &fDecoder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataList", (void*)&fDataList);
      R__insp.InspectMember("vector<TString>", (void*)&fDataList, "fDataList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataNum", &fDataNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStartTb", &fStartTb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumTbs", &fNumTbs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMap", &fMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPersistence", &fIsPersistence);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawEventArray", &fRawEventArray);
      FairTask::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ATDecoderTask(void *p) {
      return  p ? new(p) ::ATDecoderTask : new ::ATDecoderTask;
   }
   static void *newArray_ATDecoderTask(Long_t nElements, void *p) {
      return p ? new(p) ::ATDecoderTask[nElements] : new ::ATDecoderTask[nElements];
   }
   // Wrapper around operator delete
   static void delete_ATDecoderTask(void *p) {
      delete ((::ATDecoderTask*)p);
   }
   static void deleteArray_ATDecoderTask(void *p) {
      delete [] ((::ATDecoderTask*)p);
   }
   static void destruct_ATDecoderTask(void *p) {
      typedef ::ATDecoderTask current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ATDecoderTask

namespace ROOT {
   void vectorlEATPadgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEATPadgR_Dictionary();
   static void *new_vectorlEATPadgR(void *p = 0);
   static void *newArray_vectorlEATPadgR(Long_t size, void *p);
   static void delete_vectorlEATPadgR(void *p);
   static void deleteArray_vectorlEATPadgR(void *p);
   static void destruct_vectorlEATPadgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<ATPad>*)
   {
      vector<ATPad> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ATPad>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ATPad>", -2, "prec_stl/vector", 49,
                  typeid(vector<ATPad>), DefineBehavior(ptr, ptr),
                  0, &vectorlEATPadgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<ATPad>) );
      instance.SetNew(&new_vectorlEATPadgR);
      instance.SetNewArray(&newArray_vectorlEATPadgR);
      instance.SetDelete(&delete_vectorlEATPadgR);
      instance.SetDeleteArray(&deleteArray_vectorlEATPadgR);
      instance.SetDestructor(&destruct_vectorlEATPadgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<ATPad> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ATPad>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEATPadgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<ATPad>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEATPadgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ATPad> : new vector<ATPad>;
   }
   static void *newArray_vectorlEATPadgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ATPad>[nElements] : new vector<ATPad>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEATPadgR(void *p) {
      delete ((vector<ATPad>*)p);
   }
   static void deleteArray_vectorlEATPadgR(void *p) {
      delete [] ((vector<ATPad>*)p);
   }
   static void destruct_vectorlEATPadgR(void *p) {
      typedef vector<ATPad> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<ATPad>

namespace ROOT {
   void vectorlETStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETStringgR_Dictionary();
   static void *new_vectorlETStringgR(void *p = 0);
   static void *newArray_vectorlETStringgR(Long_t size, void *p);
   static void delete_vectorlETStringgR(void *p);
   static void deleteArray_vectorlETStringgR(void *p);
   static void destruct_vectorlETStringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TString>*)
   {
      vector<TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TString>", -2, "prec_stl/vector", 49,
                  typeid(vector<TString>), DefineBehavior(ptr, ptr),
                  0, &vectorlETStringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TString>) );
      instance.SetNew(&new_vectorlETStringgR);
      instance.SetNewArray(&newArray_vectorlETStringgR);
      instance.SetDelete(&delete_vectorlETStringgR);
      instance.SetDeleteArray(&deleteArray_vectorlETStringgR);
      instance.SetDestructor(&destruct_vectorlETStringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETStringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TString>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString> : new vector<TString>;
   }
   static void *newArray_vectorlETStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString>[nElements] : new vector<TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETStringgR(void *p) {
      delete ((vector<TString>*)p);
   }
   static void deleteArray_vectorlETStringgR(void *p) {
      delete [] ((vector<TString>*)p);
   }
   static void destruct_vectorlETStringgR(void *p) {
      typedef vector<TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TString>

/********************************************************
* /home/daq/fair_install_2015/ATTPCROOT_09032015/build/reco/G__ATTPCRecoDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__ATTPCRecoDict();

extern "C" void G__set_cpp_environmentG__ATTPCRecoDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("GETDecoder/GETDecoder.hh");
  G__add_compiledheader("GETDecoder/GETFrame.hh");
  G__add_compiledheader("GETDecoder/GETMath.hh");
  G__add_compiledheader("GETDecoder/GETPlot.hh");
  G__add_compiledheader("ATDecoder/ATCore.hh");
  G__add_compiledheader("ATDecoder/ATPad.hh");
  G__add_compiledheader("ATDecoder/ATRawEvent.hh");
  G__add_compiledheader("ATDecoderTask.hh");
  G__cpp_reset_tagtableG__ATTPCRecoDict();
}
#include <new>
extern "C" int G__cpp_dllrevG__ATTPCRecoDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GETFrame */
static int G__G__ATTPCRecoDict_215_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GETFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GETFrame[n];
     } else {
       p = new((void*) gvp) GETFrame[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GETFrame;
     } else {
       p = new((void*) gvp) GETFrame;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETFrame*) G__getstructoffset())->SetNumTbs((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETFrame*) G__getstructoffset())->SetEventID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETFrame*) G__getstructoffset())->SetCoboID((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETFrame*) G__getstructoffset())->SetAsadID((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETFrame*) G__getstructoffset())->SetFrameID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETFrame*) G__getstructoffset())->SetPolarity((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETFrame*) G__getstructoffset())->SetRawADC((UShort_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GETFrame*) G__getstructoffset())->GetNumTbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((GETFrame*) G__getstructoffset())->GetEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GETFrame*) G__getstructoffset())->GetCoboID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GETFrame*) G__getstructoffset())->GetAsadID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GETFrame*) G__getstructoffset())->GetFrameID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GETFrame*) G__getstructoffset())->GetPolarity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((GETFrame*) G__getstructoffset())->GetRawADC((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GETFrame*) G__getstructoffset())->GetRawADC((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((GETFrame*) G__getstructoffset())->CalcPedestal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((GETFrame*) G__getstructoffset())->CalcPedestal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((GETFrame*) G__getstructoffset())->CalcPedestal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETFrame*) G__getstructoffset())->SetPedestal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((GETFrame*) G__getstructoffset())->SetFPNPedestal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GETFrame*) G__getstructoffset())->SetFPNPedestal();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((GETFrame*) G__getstructoffset())->SubtractPedestal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((GETFrame*) G__getstructoffset())->SubtractPedestal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GETFrame*) G__getstructoffset())->GetMaxADCIdx((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((GETFrame*) G__getstructoffset())->GetADC((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GETFrame*) G__getstructoffset())->GetADC((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((GETFrame*) G__getstructoffset())->GetPedestal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((GETFrame*) G__getstructoffset())->GetPedestal((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GETFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GETFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GETFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GETFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GETFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GETFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GETFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_215_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GETFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ATTPCRecoDict_215_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GETFrame* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GETFrame(*(GETFrame*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GETFrame G__TGETFrame;
static int G__G__ATTPCRecoDict_215_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GETFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GETFrame*) (soff+(sizeof(GETFrame)*i)))->~G__TGETFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GETFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GETFrame*) (soff))->~G__TGETFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ATTPCRecoDict_215_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GETFrame* dest = (GETFrame*) G__getstructoffset();
   *dest = *(GETFrame*) libp->para[0].ref;
   const GETFrame& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GETPlot */
static int G__G__ATTPCRecoDict_216_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GETPlot* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GETPlot[n];
     } else {
       p = new((void*) gvp) GETPlot[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GETPlot;
     } else {
       p = new((void*) gvp) GETPlot;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETPlot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GETPlot* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GETPlot((GETDecoder*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) GETPlot((GETDecoder*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETPlot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETPlot*) G__getstructoffset())->SetDecoder((GETDecoder*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETPlot*) G__getstructoffset())->SetAgetRange((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETPlot*) G__getstructoffset())->SetFPNThreshold((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowSummarySpectra((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowSummarySpectra((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowSummarySpectra((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowSummarySpectra((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowSummarySpectra());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowRawFrame((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowRawFrame((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowRawFrame((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowRawFrame((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowRawFrame());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowFrame((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowFrame((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowFrame((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowFrame((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowFrame((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowFrame((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowFrame());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowAverage((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowAverage((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->ShowAverage((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GETPlot*) G__getstructoffset())->PrintMax((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GETPlot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GETPlot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GETPlot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GETPlot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETPlot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GETPlot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GETPlot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GETPlot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_216_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GETPlot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ATTPCRecoDict_216_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GETPlot* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GETPlot(*(GETPlot*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETPlot));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GETPlot G__TGETPlot;
static int G__G__ATTPCRecoDict_216_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GETPlot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GETPlot*) (soff+(sizeof(GETPlot)*i)))->~G__TGETPlot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GETPlot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GETPlot*) (soff))->~G__TGETPlot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ATTPCRecoDict_216_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GETPlot* dest = (GETPlot*) G__getstructoffset();
   *dest = *(GETPlot*) libp->para[0].ref;
   const GETPlot& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GETMath */
static int G__G__ATTPCRecoDict_217_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GETMath* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GETMath[n];
     } else {
       p = new((void*) gvp) GETMath[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GETMath;
     } else {
       p = new((void*) gvp) GETMath;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GETMath* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GETMath((GETDecoder*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) GETMath((GETDecoder*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETMath*) G__getstructoffset())->Add((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GETMath*) G__getstructoffset())->GetMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GETMath*) G__getstructoffset())->GetRMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GETMath*) G__getstructoffset())->GetRMS2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETMath*) G__getstructoffset())->Set((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 68, (long) ((GETMath*) G__getstructoffset())->GetAverage((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 68, (long) ((GETMath*) G__getstructoffset())->GetAverage((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETMath*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GETMath::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GETMath::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GETMath::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GETMath::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETMath*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GETMath::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GETMath::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GETMath::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_217_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GETMath::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ATTPCRecoDict_217_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GETMath* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GETMath(*(GETMath*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GETMath G__TGETMath;
static int G__G__ATTPCRecoDict_217_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GETMath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GETMath*) (soff+(sizeof(GETMath)*i)))->~G__TGETMath();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GETMath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GETMath*) (soff))->~G__TGETMath();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ATTPCRecoDict_217_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GETMath* dest = (GETMath*) G__getstructoffset();
   *dest = *(GETMath*) libp->para[0].ref;
   const GETMath& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GETDecoder */
static int G__G__ATTPCRecoDict_218_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GETDecoder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GETDecoder[n];
     } else {
       p = new((void*) gvp) GETDecoder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GETDecoder;
     } else {
       p = new((void*) gvp) GETDecoder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecoder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GETDecoder* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GETDecoder(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) GETDecoder(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecoder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((GETDecoder*) G__getstructoffset())->SetDebugMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GETDecoder*) G__getstructoffset())->SetDebugMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((GETDecoder*) G__getstructoffset())->SetNumTbs((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GETDecoder*) G__getstructoffset())->SetNumTbs();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GETDecoder*) G__getstructoffset())->AddData(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GETDecoder*) G__getstructoffset())->SetData((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GETDecoder*) G__getstructoffset())->SetNextFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((GETDecoder*) G__getstructoffset())->SetNoAutoReload((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GETDecoder*) G__getstructoffset())->SetNoAutoReload();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((GETDecoder*) G__getstructoffset())->SetPositivePolarity((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GETDecoder*) G__getstructoffset())->SetPositivePolarity();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETDecoder*) G__getstructoffset())->ShowList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GETDecoder*) G__getstructoffset())->GetNumData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((GETDecoder*) G__getstructoffset())->GetDataName((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GETDecoder*) G__getstructoffset())->GetNumTbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GETDecoder*) G__getstructoffset())->GetGETPlot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GETDecoder*) G__getstructoffset())->GetGETMath());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GETDecoder*) G__getstructoffset())->GetFrameType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GETDecoder*) G__getstructoffset())->GetCurrentFrameID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GETDecoder*) G__getstructoffset())->GetCurrentInnerFrameID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((GETDecoder*) G__getstructoffset())->GetFrame((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((GETDecoder*) G__getstructoffset())->GetFrame());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((GETDecoder*) G__getstructoffset())->GetFrame((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GETDecoder*) G__getstructoffset())->GetNumMergedFrames());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GETDecoder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GETDecoder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GETDecoder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GETDecoder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GETDecoder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GETDecoder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GETDecoder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GETDecoder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_218_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GETDecoder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GETDecoder G__TGETDecoder;
static int G__G__ATTPCRecoDict_218_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GETDecoder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GETDecoder*) (soff+(sizeof(GETDecoder)*i)))->~G__TGETDecoder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GETDecoder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GETDecoder*) (soff))->~G__TGETDecoder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ATPad */
static int G__G__ATTPCRecoDict_584_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ATPad* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ATPad[n];
     } else {
       p = new((void*) gvp) ATPad[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ATPad;
     } else {
       p = new((void*) gvp) ATPad;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATPad));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ATPad* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ATPad((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ATPad((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATPad));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATPad*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ATPad*) G__getstructoffset())->SetValidPad((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ATPad*) G__getstructoffset())->SetValidPad();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATPad*) G__getstructoffset())->SetPad((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATPad*) G__getstructoffset())->SetRawADC((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATPad*) G__getstructoffset())->SetRawADC((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ATPad::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ATPad::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ATPad::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ATPad::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATPad*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ATPad::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ATPad::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ATPad::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_584_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ATPad::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ATTPCRecoDict_584_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ATPad* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ATPad(*(ATPad*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATPad));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ATPad G__TATPad;
static int G__G__ATTPCRecoDict_584_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ATPad*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ATPad*) (soff+(sizeof(ATPad)*i)))->~G__TATPad();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ATPad*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ATPad*) (soff))->~G__TATPad();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ATTPCRecoDict_584_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ATPad* dest = (ATPad*) G__getstructoffset();
   *dest = *(ATPad*) libp->para[0].ref;
   const ATPad& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ATRawEvent */
static int G__G__ATTPCRecoDict_585_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ATRawEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ATRawEvent[n];
     } else {
       p = new((void*) gvp) ATRawEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ATRawEvent;
     } else {
       p = new((void*) gvp) ATRawEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ATRawEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ATRawEvent((ATRawEvent*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ATRawEvent((ATRawEvent*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATRawEvent*) G__getstructoffset())->SetEventID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATRawEvent*) G__getstructoffset())->SetPad((ATPad*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATRawEvent*) G__getstructoffset())->SetIsGood((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATRawEvent*) G__getstructoffset())->RemovePad((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ATRawEvent*) G__getstructoffset())->GetEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ATRawEvent*) G__getstructoffset())->GetNumPads());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ATRawEvent*) G__getstructoffset())->IsGood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ATRawEvent*) G__getstructoffset())->GetPads());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ATRawEvent*) G__getstructoffset())->GetPad((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ATRawEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ATRawEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ATRawEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ATRawEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATRawEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ATRawEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ATRawEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ATRawEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_585_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ATRawEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ATTPCRecoDict_585_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ATRawEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ATRawEvent(*(ATRawEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ATRawEvent G__TATRawEvent;
static int G__G__ATTPCRecoDict_585_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ATRawEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ATRawEvent*) (soff+(sizeof(ATRawEvent)*i)))->~G__TATRawEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ATRawEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ATRawEvent*) (soff))->~G__TATRawEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ATTPCRecoDict_585_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ATRawEvent* dest = (ATRawEvent*) G__getstructoffset();
   *dest = *(ATRawEvent*) libp->para[0].ref;
   const ATRawEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ATCore */
static int G__G__ATTPCRecoDict_590_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ATCore* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ATCore[n];
     } else {
       p = new((void*) gvp) ATCore[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ATCore;
     } else {
       p = new((void*) gvp) ATCore;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATCore));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ATCore* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ATCore(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ATCore(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATCore));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATCore*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ATCore*) G__getstructoffset())->AddData(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ATCore*) G__getstructoffset())->SetData((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ATCore*) G__getstructoffset())->SetATTPCMap((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ATCore*) G__getstructoffset())->SetPositivePolarity((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ATCore*) G__getstructoffset())->SetPositivePolarity();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((ATCore*) G__getstructoffset())->GetRawEvent((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((ATCore*) G__getstructoffset())->GetRawEvent());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATCore*) G__getstructoffset())->SetNumTbs((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATCore*) G__getstructoffset())->SetDebugMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ATCore::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ATCore::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ATCore::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ATCore::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATCore*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ATCore::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ATCore::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ATCore::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_590_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ATCore::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ATTPCRecoDict_590_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ATCore* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ATCore(*(ATCore*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATCore));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ATCore G__TATCore;
static int G__G__ATTPCRecoDict_590_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ATCore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ATCore*) (soff+(sizeof(ATCore)*i)))->~G__TATCore();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ATCore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ATCore*) (soff))->~G__TATCore();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ATTPCRecoDict_590_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ATCore* dest = (ATCore*) G__getstructoffset();
   *dest = *(ATCore*) libp->para[0].ref;
   const ATCore& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ATDecoderTask */
static int G__G__ATTPCRecoDict_850_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ATDecoderTask* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ATDecoderTask[n];
     } else {
       p = new((void*) gvp) ATDecoderTask[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ATDecoderTask;
     } else {
       p = new((void*) gvp) ATDecoderTask;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATDecoderTask));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATDecoderTask*) G__getstructoffset())->SetNumTbs((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATDecoderTask*) G__getstructoffset())->AddData(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATDecoderTask*) G__getstructoffset())->SetData((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ATDecoderTask*) G__getstructoffset())->SetMap((Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ATDecoderTask*) G__getstructoffset())->SetPersistence((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ATDecoderTask*) G__getstructoffset())->SetPersistence();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ATDecoderTask::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ATDecoderTask::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ATDecoderTask::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ATDecoderTask::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ATDecoderTask*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ATDecoderTask::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ATDecoderTask::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ATDecoderTask::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ATTPCRecoDict_850_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ATDecoderTask::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ATDecoderTask G__TATDecoderTask;
static int G__G__ATTPCRecoDict_850_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ATDecoderTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ATDecoderTask*) (soff+(sizeof(ATDecoderTask)*i)))->~G__TATDecoderTask();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ATDecoderTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ATDecoderTask*) (soff))->~G__TATDecoderTask();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GETFrame */

/* GETPlot */

/* GETMath */

/* GETDecoder */

/* ATPad */

/* ATRawEvent */

/* ATCore */

/* ATDecoderTask */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__ATTPCRecoDict {
 public:
  G__Sizep2memfuncG__ATTPCRecoDict(): p(&G__Sizep2memfuncG__ATTPCRecoDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__ATTPCRecoDict::*p)();
};

size_t G__get_sizep2memfuncG__ATTPCRecoDict()
{
  G__Sizep2memfuncG__ATTPCRecoDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__ATTPCRecoDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame))) {
     GETFrame *G__Lderived;
     G__Lderived=(GETFrame*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame),G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETPlot))) {
     GETPlot *G__Lderived;
     G__Lderived=(GETPlot*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETPlot),G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath))) {
     GETMath *G__Lderived;
     G__Lderived=(GETMath*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath),G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecoder))) {
     GETDecoder *G__Lderived;
     G__Lderived=(GETDecoder*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecoder),G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATPad))) {
     ATPad *G__Lderived;
     G__Lderived=(ATPad*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATPad),G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent))) {
     ATRawEvent *G__Lderived;
     G__Lderived=(ATRawEvent*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent),G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent),G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATCore))) {
     ATCore *G__Lderived;
     G__Lderived=(ATCore*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATCore),G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATDecoderTask))) {
     ATDecoderTask *G__Lderived;
     G__Lderived=(ATDecoderTask*)0x1000;
     {
       FairTask *G__Lpbase=(FairTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATDecoderTask),G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_FairTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATDecoderTask),G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATDecoderTask),G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATDecoderTask),G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__ATTPCRecoDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::vector<int>,int>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOintcOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<vector<int>,int>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOintcOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<vector<int,allocator<int> >,int>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOintcOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<vector<int,allocator<int> >,int,less<vector<int,allocator<int> > > >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOintcOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ATPad>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEATPadcOallocatorlEATPadgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEATPadcOallocatorlEATPadgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEATPadcOallocatorlEATPadgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEATPadcOallocatorlEATPadgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEATPadcOallocatorlEATPadgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TObject*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TObject*,less<TString> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<TClonesArray*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("queue<TClonesArray*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::queue<TClonesArray*> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > > >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > >,less<TString> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TClonesArray*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TClonesArray*,less<TString> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairTSBufferFunctional*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairTSBufferFunctional*,less<TString> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairWriteoutBuffer*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,FairWriteoutBuffer*,less<TString> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TBranch*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TBranch*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TBranch*,less<int> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,Int_t>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int,less<TString> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TString>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_listlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TChain*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TChain*,less<TString> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::list<TString>*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,list<TString,allocator<TString> >*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,list<TString,allocator<TString> >*,less<TString> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<TString,TArrayI>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<TString,TArrayI,less<TString> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::multimap<TString,TArrayI> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > > >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > >,less<TString> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,TChain*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,TChain*>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,TChain*,less<unsigned int> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,Double_t>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,double>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,double,less<unsigned int> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,UInt_t>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,unsigned int>",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,unsigned int,less<unsigned int> >",117,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GETFrame */
static void G__setup_memvarGETFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame));
   { GETFrame *p; p=(GETFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumTbs=",0,"/ The number of time buckets");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath),-1,-1,4,"fMath=",0,"/ GETMath object");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fEventIdx=",0,"/ event number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCoboIdx=",0,"/ CoBo index");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fAsadIdx=",0,"/ AsAd index");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFrameIdx=",0,"/ frame index");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPolarity=",0,"/ signal polarity");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRawAdc[139264]=",0,"/ An array containing raw ADC values");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxAdcIdx[272]=",0,"/ An array containing indices of maximum ADC value in each channel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAdc[139264]=",0,"/ An array containing pedestal-subtracted ADC values");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsPedestalSubtracted[272]=",0,"/ Flag for checking if pedestal is subtracted");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsCalcPedestalUsed[272]=",0,"/ Flag for checking if CalcPedestal() is used or not");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fInternalPedestal[272]=",0,"/ An array containing pedestal value of corresponding channel");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsSetPedestalUsed[272]=",0,"/ Flag for checking if SetPedestal() is used or not");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPedestalDataMean[272]=",0,"/ An array containing mean value of externally set pedestal data");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPedestalData[139264]=",0,"/ An array containing external pedestal values");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPedestalSigmaData[139264]=",0,"/ An array containing external pedestal sigma values");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsFPNPedestalUsed=",0,"/ Flag for checking if FPNPedestal() is used or not");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFPNSigmaThreshold=",0,"/ Sigma threshold when calculating baseline value");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFPNPedestalMean[16]=",0,"/ An array containing pedestal mean value calculated with FPN channels");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFPNStartTb=",0,"/ First time bucket used to calculate FPN mean");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFPNAverageTbs=",0,"/ The number of time buckets used to calculate FPN mean");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GETPlot */
static void G__setup_memvarGETPlot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETPlot));
   { GETPlot *p; p=(GETPlot*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMinTb=",0,"/ minimum time bucket index for drawing");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMaxTb=",0,"/ maximum time bucket index for drawing");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFPNThreshold=",0,"/ FPN sigma threshold");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecoder),-1,-1,4,"fDecoder=",0,"/ decoder pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame),-1,-1,4,"fFrame=",0,"/ frame container pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TH2D),-1,-1,4,"fAsad=",0,"/ histogram for summary spectra of an AsAd");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TGraph),-1,-1,4,"fGraph=",0,"/ graph for various purpose for drawing data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TGraph),-1,-1,4,"fAget[4]=",0,"/ graph for each AGET");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAgetMinX[4][4]=",0,"/ minimum x value for drawing");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAgetMaxX[4][4]=",0,"/ maximum x value for drawing");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAgetMinY[4][4]=",0,"/ minimum y value for drawing");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAgetMaxY[4][4]=",0,"/ maximum y value for drawing");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GETMath */
static void G__setup_memvarGETMath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath));
   { GETMath *p; p=(GETMath*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecoder),-1,-1,4,"fDecoder=",0,"/ GETDecoder class pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame),-1,-1,4,"fFrame=",0,"/ GETFrame class pointer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumValues=",0,"/ Number of values added");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMean=",0,"/ mean value");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRms=",0,"/ RMS value");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAdc[4]=",0,"/ Average value storage for GetAverage() method");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GETDecoder */
static void G__setup_memvarGETDecoder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecoder));
   { GETDecoder *p; p=(GETDecoder*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecodercLcLEFrameType),-1,-2,1,G__FastAllocString(2048).Format("kNormal=%lldLL",(long long)GETDecoder::kNormal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecodercLcLEFrameType),-1,-2,1,G__FastAllocString(2048).Format("kMergedID=%lldLL",(long long)GETDecoder::kMergedID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecodercLcLEFrameType),-1,-2,1,G__FastAllocString(2048).Format("kMergedTime=%lldLL",(long long)GETDecoder::kMergedTime).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecodercLcLEEndianness),-1,-2,1,G__FastAllocString(2048).Format("kBig=%lldLL",(long long)GETDecoder::kBig).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecodercLcLEEndianness),-1,-2,1,G__FastAllocString(2048).Format("kLittle=%lldLL",(long long)GETDecoder::kLittle).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumTbs=",0,"/ the number of time buckets. It's determined when taking data and should be changed manually by user. (Default: 512)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fEndianness=",0,"/ Endianness of the data. 0: Big-endian, 1: Little-endian");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMergedUnitBlock=",0,"/ Unit block size used in merged frame header");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fFrameType=",0,"/ frame type. 0: normal frame, 1: event number merged, 2: event time merged");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMergedHeaderSize=",0,"/ header size of merged frame. For additional skip bytes when finding frame by frame number.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumMergedFrames=",0,"/ the number of merged frames. For additional skip bytes when finding frame by frame number.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fUnitBlock=",0,"/ Unit block size used in frame header");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fMergedFrameStartPoint=",0,"/ byte number of the merged frame start point. For navigational feature in a merged frame.");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fCurrentMergedFrameSize=",0,"/ size of a merged frame of the frame ID **fCurrentFrameID**. For additional skip bytes when finding frame by frame number.");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fCurrentInnerFrameSize=",0,"/ size of an inner frame.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDebugMode=",0,"/ flag for debug mode");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsAutoReload=",0,"/ Flag for auto reloading continuing data file in the list.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsPositivePolarity=",0,"/ Flag for the signal polarity");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"fData=",0,"/ rawdata filestream");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fFileSize=",0,"/ file size");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"fDataList=",0,"/ rawdata file list");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrentDataID=",0,"/ current file index in list");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame),-1,-1,4,"fFrame=",0,"/ frame container");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrentFrameID=",0,"/ current frame index");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrentInnerFrameID=",0,"/ current inner frame index");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fEOF=",0,"/ check if end of file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETPlot),-1,-1,4,"fGETPlot=",0,"/ GETPlot pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath),-1,-1,4,"fGETMath=",0,"/ GETMath pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ATPad */
static void G__setup_memvarATPad(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATPad));
   { ATPad *p; p=(ATPad*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPadNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"kIsValid=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRawAdc[512]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ATRawEvent */
static void G__setup_memvarATRawEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent));
   { ATRawEvent *p; p=(ATRawEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEATPadcOallocatorlEATPadgRsPgR),G__defined_typename("vector<ATPad>"),-1,4,"fPadArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsGood=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ATCore */
static void G__setup_memvarATCore(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATCore));
   { ATCore *p; p=(ATCore*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fAtMapPtr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_AtTpcMap),-1,-1,1,"fAtMapPtr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->kDebug)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"kDebug=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecoder),-1,-1,4,"fGETDecoderPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsData=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumTbs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent),-1,-1,4,"fRawEventPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fPrevEventNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fCurrEventNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrFrameNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ATDecoderTask */
static void G__setup_memvarATDecoderTask(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATDecoderTask));
   { ATDecoderTask *p; p=(ATDecoderTask*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_FairLogger),-1,-1,4,"fLogger=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATCore),-1,-1,4,"fDecoder=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"fDataList=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDataNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStartTb=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumTbs=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,0,-1,G__defined_typename("Char_t"),-1,4,"fMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsPersistence=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClonesArray),-1,-1,4,"fRawEventArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__ATTPCRecoDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGETFrame(void) {
   /* GETFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame));
   G__memfunc_setup("GETFrame",715,G__G__ATTPCRecoDict_215_0_1, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumTbs",901,G__G__ATTPCRecoDict_215_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventID",955,G__G__ATTPCRecoDict_215_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoboID",828,G__G__ATTPCRecoDict_215_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAsadID",818,G__G__ATTPCRecoDict_215_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFrameID",932,G__G__ATTPCRecoDict_215_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPolarity",1152,G__G__ATTPCRecoDict_215_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawADC",798,G__G__ATTPCRecoDict_215_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"r - 'UShort_t' 0 - agetIdx r - 'UShort_t' 0 - chIdx "
"r - 'UShort_t' 0 - buckIdx r - 'UShort_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumTbs",889,G__G__ATTPCRecoDict_215_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventID",943,G__G__ATTPCRecoDict_215_0_10, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoboID",816,G__G__ATTPCRecoDict_215_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAsadID",806,G__G__ATTPCRecoDict_215_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFrameID",920,G__G__ATTPCRecoDict_215_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPolarity",1140,G__G__ATTPCRecoDict_215_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawADC",786,G__G__ATTPCRecoDict_215_0_15, 73, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - agetIdx i - 'Int_t' 0 - chIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawADC",786,G__G__ATTPCRecoDict_215_0_16, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - agetIdx i - 'Int_t' 0 - chIdx "
"i - 'Int_t' 0 - buckIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcPedestal",1189,G__G__ATTPCRecoDict_215_0_17, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - agetIdx i - 'Int_t' 0 - chIdx "
"i - 'Int_t' 0 '10' startTb i - 'Int_t' 0 '20' numTbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestal",1118,G__G__ATTPCRecoDict_215_0_18, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - agetIdx i - 'Int_t' 0 - chIdx "
"D - 'Double_t' 0 - pedestal D - 'Double_t' 0 - pedestalSigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFPNPedestal",1346,G__G__ATTPCRecoDict_215_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '5' sigmaThreshold", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SubtractPedestal",1658,G__G__ATTPCRecoDict_215_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - agetIdx i - 'Int_t' 0 - chIdx "
"d - 'Double_t' 0 '0' rmsFactor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxADCIdx",1075,G__G__ATTPCRecoDict_215_0_21, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - agetIdx i - 'Int_t' 0 - chIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADC",488,G__G__ATTPCRecoDict_215_0_22, 68, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - agetIdx i - 'Int_t' 0 - chIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADC",488,G__G__ATTPCRecoDict_215_0_23, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - agetIdx i - 'Int_t' 0 - chIdx "
"i - 'Int_t' 0 - buckIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestal",1106,G__G__ATTPCRecoDict_215_0_24, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - agetIdx i - 'Int_t' 0 - chIdx "
"i - 'Int_t' 0 - buckIdx d - 'Double_t' 0 '0' rmsFactor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - agetIdx i - 'Int_t' 0 - chIdx "
"i - 'Int_t' 0 - buckIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFPNChannel",1213,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - agetIdx i - 'Int_t' 0 - chIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFPNArrayIndex",1531,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - agetIdx i - 'Int_t' 0 - chIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindMaxIdx",972,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - agetIdx i - 'Int_t' 0 - chIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ATTPCRecoDict_215_0_29, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GETFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ATTPCRecoDict_215_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GETFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ATTPCRecoDict_215_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GETFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ATTPCRecoDict_215_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GETFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ATTPCRecoDict_215_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ATTPCRecoDict_215_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GETFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ATTPCRecoDict_215_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GETFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ATTPCRecoDict_215_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GETFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ATTPCRecoDict_215_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GETFrame::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GETFrame", 715, G__G__ATTPCRecoDict_215_0_41, (int) ('i'), G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame), -1, 0, 1, 1, 1, 0, "u 'GETFrame' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GETFrame", 841, G__G__ATTPCRecoDict_215_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ATTPCRecoDict_215_0_43, (int) ('u'), G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame), -1, 1, 1, 1, 1, 0, "u 'GETFrame' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGETPlot(void) {
   /* GETPlot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETPlot));
   G__memfunc_setup("GETPlot",639,G__G__ATTPCRecoDict_216_0_1, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETPlot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GETPlot",639,G__G__ATTPCRecoDict_216_0_2, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETPlot), -1, 0, 1, 1, 1, 0, "U 'GETDecoder' - 0 - decoder", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDecoder",994,G__G__ATTPCRecoDict_216_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'GETDecoder' - 0 - decoder", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAgetRange",1178,G__G__ATTPCRecoDict_216_0_4, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - type i - 'Int_t' 0 - agetIdx "
"d - 'Double_t' 0 - minx d - 'Double_t' 0 - maxx "
"d - 'Double_t' 0 - miny d - 'Double_t' 0 - maxy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFPNThreshold",1469,G__G__ATTPCRecoDict_216_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowSummarySpectra",1889,G__G__ATTPCRecoDict_216_0_6, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TCanvas), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 '10' startTb i - 'Int_t' 0 '20' numTbs "
"i - 'Int_t' 0 '35' notConnected i - 'Int_t' 0 '0' innerFrame", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowRawFrame",1206,G__G__ATTPCRecoDict_216_0_7, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TCanvas), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 '-1' frameNo i - 'Int_t' 0 '-1' innerFrameNo "
"i - 'Int_t' 0 '0' numChannels I - 'Int_t' 0 'NULL' chList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowFrame",908,G__G__ATTPCRecoDict_216_0_8, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TCanvas), -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 '-1' frameNo i - 'Int_t' 0 '-1' innerFrameNo "
"i - 'Int_t' 0 '10' startTb i - 'Int_t' 0 '20' numTbs "
"i - 'Int_t' 0 '0' numChannels I - 'Int_t' 0 'NULL' chList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowAverage",1116,G__G__ATTPCRecoDict_216_0_9, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TCanvas), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - numChannels I - 'Int_t' 0 - chList "
"i - 'Int_t' 0 '-1' frameNo i - 'Int_t' 0 '0' innerFrameNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMax",819,G__G__ATTPCRecoDict_216_0_10, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TCanvas), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - eventNo i - 'Int_t' 0 - innerFrameNo "
"i - 'Int_t' 0 - startTb i - 'Int_t' 0 - numTbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrepareCanvas",1323,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TCanvas), -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetGraph",1013,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - type g - 'Bool_t' 0 '0' first", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintInfo",921,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"i - 'Int_t' 0 - type U 'TPad' - 0 - namePad "
"i - 'Int_t' 0 - coboIdx i - 'Int_t' 0 - asadIdx "
"i - 'Int_t' 0 - frameNo i - 'Int_t' 0 - eventNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ATTPCRecoDict_216_0_15, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GETPlot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ATTPCRecoDict_216_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GETPlot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ATTPCRecoDict_216_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GETPlot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ATTPCRecoDict_216_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GETPlot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ATTPCRecoDict_216_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ATTPCRecoDict_216_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GETPlot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ATTPCRecoDict_216_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GETPlot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ATTPCRecoDict_216_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GETPlot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ATTPCRecoDict_216_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GETPlot::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GETPlot", 639, G__G__ATTPCRecoDict_216_0_27, (int) ('i'), G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETPlot), -1, 0, 1, 1, 1, 0, "u 'GETPlot' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GETPlot", 765, G__G__ATTPCRecoDict_216_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ATTPCRecoDict_216_0_29, (int) ('u'), G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETPlot), -1, 1, 1, 1, 1, 0, "u 'GETPlot' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGETMath(void) {
   /* GETMath */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath));
   G__memfunc_setup("GETMath",618,G__G__ATTPCRecoDict_217_0_1, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GETMath",618,G__G__ATTPCRecoDict_217_0_2, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath), -1, 0, 1, 1, 1, 0, "U 'GETDecoder' - 0 - decoder", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__G__ATTPCRecoDict_217_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMean",673,G__G__ATTPCRecoDict_217_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRMS",530,G__G__ATTPCRecoDict_217_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRMS2",580,G__G__ATTPCRecoDict_217_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__G__ATTPCRecoDict_217_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - numValues d - 'Double_t' 0 - mean "
"d - 'Double_t' 0 - rms2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAverage",987,G__G__ATTPCRecoDict_217_0_8, 68, -1, G__defined_typename("Double_t"), 2, 3, 1, 1, 0, 
"i - 'Int_t' 0 - numChannels I - 'Int_t' 0 - chList "
"i - 'Int_t' 0 '-1' frameNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__G__ATTPCRecoDict_217_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ATTPCRecoDict_217_0_10, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GETMath::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ATTPCRecoDict_217_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GETMath::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ATTPCRecoDict_217_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GETMath::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ATTPCRecoDict_217_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GETMath::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ATTPCRecoDict_217_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ATTPCRecoDict_217_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GETMath::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ATTPCRecoDict_217_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GETMath::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ATTPCRecoDict_217_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GETMath::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ATTPCRecoDict_217_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GETMath::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GETMath", 618, G__G__ATTPCRecoDict_217_0_22, (int) ('i'), G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath), -1, 0, 1, 1, 1, 0, "u 'GETMath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GETMath", 744, G__G__ATTPCRecoDict_217_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ATTPCRecoDict_217_0_24, (int) ('u'), G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath), -1, 1, 1, 1, 1, 0, "u 'GETMath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGETDecoder(void) {
   /* GETDecoder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecoder));
   G__memfunc_setup("GETDecoder",918,G__G__ATTPCRecoDict_218_0_1, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecoder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GETDecoder",918,G__G__ATTPCRecoDict_218_0_2, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETDecoder), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDebugMode",1176,G__G__ATTPCRecoDict_218_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumTbs",901,G__G__ATTPCRecoDict_218_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '512' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddData",643,G__G__ATTPCRecoDict_218_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetData",678,G__G__ATTPCRecoDict_218_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNextFile",1099,G__G__ATTPCRecoDict_218_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNoAutoReload",1497,G__G__ATTPCRecoDict_218_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositivePolarity",2003,G__G__ATTPCRecoDict_218_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowList",829,G__G__ATTPCRecoDict_218_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumData",970,G__G__ATTPCRecoDict_218_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataName",1051,G__G__ATTPCRecoDict_218_0_12, 117, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TString), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumTbs",889,G__G__ATTPCRecoDict_218_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGETPlot",927,G__G__ATTPCRecoDict_218_0_14, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETPlot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGETMath",906,G__G__ATTPCRecoDict_218_0_15, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETMath), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFrameType",1197,G__G__ATTPCRecoDict_218_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentFrameID",1659,G__G__ATTPCRecoDict_218_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentInnerFrameID",2167,G__G__ATTPCRecoDict_218_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFrame",779,G__G__ATTPCRecoDict_218_0_19, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' frameIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFrame",779,G__G__ATTPCRecoDict_218_0_20, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_GETFrame), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - frameIdx i - 'Int_t' 0 - innerFrameIdx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumMergedFrames",1794,G__G__ATTPCRecoDict_218_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintFrameInfo",1412,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - 'Int_t' 0 - frameID i - 'Int_t' 0 - eventID "
"i - 'Int_t' 0 - coboID i - 'Int_t' 0 - asadID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SkipInnerFrame",1406,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SkipMergedFrame",1494,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadMergedFrameInfo",1863,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadInnerFrameInfo",1775,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEOF",696,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ATTPCRecoDict_218_0_29, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GETDecoder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ATTPCRecoDict_218_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GETDecoder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ATTPCRecoDict_218_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GETDecoder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ATTPCRecoDict_218_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GETDecoder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ATTPCRecoDict_218_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ATTPCRecoDict_218_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GETDecoder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ATTPCRecoDict_218_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GETDecoder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ATTPCRecoDict_218_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GETDecoder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ATTPCRecoDict_218_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GETDecoder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~GETDecoder", 1044, G__G__ATTPCRecoDict_218_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncATPad(void) {
   /* ATPad */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATPad));
   G__memfunc_setup("ATPad",426,G__G__ATTPCRecoDict_584_0_1, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATPad), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ATPad",426,G__G__ATTPCRecoDict_584_0_2, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATPad), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - PadNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__G__ATTPCRecoDict_584_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValidPad",1073,G__G__ATTPCRecoDict_584_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPad",577,G__G__ATTPCRecoDict_584_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawADC",798,G__G__ATTPCRecoDict_584_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawADC",798,G__G__ATTPCRecoDict_584_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - idx i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ATTPCRecoDict_584_0_8, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ATPad::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ATTPCRecoDict_584_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ATPad::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ATTPCRecoDict_584_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ATPad::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ATTPCRecoDict_584_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ATPad::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ATTPCRecoDict_584_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ATTPCRecoDict_584_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ATPad::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ATTPCRecoDict_584_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ATPad::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ATTPCRecoDict_584_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ATPad::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ATTPCRecoDict_584_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ATPad::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ATPad", 426, G__G__ATTPCRecoDict_584_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATPad), -1, 0, 1, 1, 1, 0, "u 'ATPad' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ATPad", 552, G__G__ATTPCRecoDict_584_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ATTPCRecoDict_584_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATPad), -1, 1, 1, 1, 1, 0, "u 'ATPad' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncATRawEvent(void) {
   /* ATRawEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent));
   G__memfunc_setup("ATRawEvent",961,G__G__ATTPCRecoDict_585_0_1, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ATRawEvent",961,G__G__ATTPCRecoDict_585_0_2, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent), -1, 0, 1, 1, 1, 0, "U 'ATRawEvent' - 0 - object", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventID",955,G__G__ATTPCRecoDict_585_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - evtid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPad",577,G__G__ATTPCRecoDict_585_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ATPad' - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsGood",881,G__G__ATTPCRecoDict_585_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemovePad",899,G__G__ATTPCRecoDict_585_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - padNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventID",943,G__G__ATTPCRecoDict_585_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumPads",984,G__G__ATTPCRecoDict_585_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsGood",581,G__G__ATTPCRecoDict_585_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPads",680,G__G__ATTPCRecoDict_585_0_10, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_vectorlEATPadcOallocatorlEATPadgRsPgR), G__defined_typename("vector<ATPad>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPad",565,G__G__ATTPCRecoDict_585_0_11, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATPad), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - padNo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ATTPCRecoDict_585_0_12, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ATRawEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ATTPCRecoDict_585_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ATRawEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ATTPCRecoDict_585_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ATRawEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ATTPCRecoDict_585_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ATRawEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ATTPCRecoDict_585_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ATTPCRecoDict_585_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ATRawEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ATTPCRecoDict_585_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ATRawEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ATTPCRecoDict_585_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ATRawEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ATTPCRecoDict_585_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ATRawEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ATRawEvent", 961, G__G__ATTPCRecoDict_585_0_24, (int) ('i'), G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent), -1, 0, 1, 1, 1, 0, "u 'ATRawEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ATRawEvent", 1087, G__G__ATTPCRecoDict_585_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ATTPCRecoDict_585_0_26, (int) ('u'), G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent), -1, 1, 1, 1, 1, 0, "u 'ATRawEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncATCore(void) {
   /* ATCore */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATCore));
   G__memfunc_setup("ATCore",542,G__G__ATTPCRecoDict_590_0_1, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATCore), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ATCore",542,G__G__ATTPCRecoDict_590_0_2, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATCore), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - filename i - 'Int_t' 0 - numTbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__G__ATTPCRecoDict_590_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddData",643,G__G__ATTPCRecoDict_590_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetData",678,G__G__ATTPCRecoDict_590_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetATTPCMap",966,G__G__ATTPCRecoDict_590_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 0 - lookup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositivePolarity",2003,G__G__ATTPCRecoDict_590_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawEvent",1100,G__G__ATTPCRecoDict_590_0_8, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATRawEvent), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' eventID", "TO DO It returns a pointer to ATRawEvent", (void*) NULL, 0);
   G__memfunc_setup("SetNumTbs",901,G__G__ATTPCRecoDict_590_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDebugMode",1176,G__G__ATTPCRecoDict_590_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - Debug", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ATTPCRecoDict_590_0_11, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ATCore::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ATTPCRecoDict_590_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ATCore::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ATTPCRecoDict_590_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ATCore::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ATTPCRecoDict_590_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ATCore::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ATTPCRecoDict_590_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ATTPCRecoDict_590_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ATCore::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ATTPCRecoDict_590_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ATCore::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ATTPCRecoDict_590_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ATCore::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ATTPCRecoDict_590_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ATCore::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ATCore", 542, G__G__ATTPCRecoDict_590_0_23, (int) ('i'), G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATCore), -1, 0, 1, 1, 1, 0, "u 'ATCore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ATCore", 668, G__G__ATTPCRecoDict_590_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ATTPCRecoDict_590_0_25, (int) ('u'), G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATCore), -1, 1, 1, 1, 1, 0, "u 'ATCore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncATDecoderTask(void) {
   /* ATDecoderTask */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATDecoderTask));
   G__memfunc_setup("ATDecoderTask",1246,G__G__ATTPCRecoDict_850_0_1, 105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_ATDecoderTask), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumTbs",901,G__G__ATTPCRecoDict_850_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - numTbs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddData",643,G__G__ATTPCRecoDict_850_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetData",678,G__G__ATTPCRecoDict_850_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMap",586,G__G__ATTPCRecoDict_850_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 0 - map", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPersistence",1457,G__G__ATTPCRecoDict_850_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_InitStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParContainers",1637,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ATTPCRecoDict_850_0_10, 85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ATDecoderTask::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ATTPCRecoDict_850_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ATDecoderTask::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ATTPCRecoDict_850_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ATDecoderTask::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ATTPCRecoDict_850_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ATDecoderTask::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ATTPCRecoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ATTPCRecoDict_850_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ATTPCRecoDict_850_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ATDecoderTask::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ATTPCRecoDict_850_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ATDecoderTask::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ATTPCRecoDict_850_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ATDecoderTask::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ATTPCRecoDict_850_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ATDecoderTask::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ATDecoderTask", 1372, G__G__ATTPCRecoDict_850_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__ATTPCRecoDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__ATTPCRecoDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__ATTPCRecoDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__ATTPCRecoDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_GETFrame = { "GETFrame" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_GETPlot = { "GETPlot" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_GETMath = { "GETMath" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_GETDecoder = { "GETDecoder" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_GETDecodercLcLEFrameType = { "GETDecoder::EFrameType" , 101 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_GETDecodercLcLEEndianness = { "GETDecoder::EEndianness" , 101 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_AtTpcMap = { "AtTpcMap" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOintcOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOintgRsPgRsPgR = { "map<vector<int,allocator<int> >,int,less<vector<int,allocator<int> > >,allocator<pair<const vector<int,allocator<int> >,int> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_ATPad = { "ATPad" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_ATRawEvent = { "ATRawEvent" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_vectorlEATPadcOallocatorlEATPadgRsPgR = { "vector<ATPad,allocator<ATPad> >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEATPadcOallocatorlEATPadgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ATPad,allocator<ATPad> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_ATCore = { "ATCore" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_TTask = { "TTask" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_FairLogger = { "FairLogger" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR = { "map<TString,TObject*,less<TString>,allocator<pair<const TString,TObject*> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR = { "deque<TClonesArray*,allocator<TClonesArray*> >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR = { "queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR = { "map<TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > >,less<TString>,allocator<pair<const TString,queue<TClonesArray*,deque<TClonesArray*,allocator<TClonesArray*> > > > > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR = { "map<TString,TClonesArray*,less<TString>,allocator<pair<const TString,TClonesArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR = { "map<TString,FairTSBufferFunctional*,less<TString>,allocator<pair<const TString,FairTSBufferFunctional*> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR = { "map<TString,FairWriteoutBuffer*,less<TString>,allocator<pair<const TString,FairWriteoutBuffer*> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR = { "map<int,TBranch*,less<int>,allocator<pair<const int,TBranch*> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR = { "map<TString,int,less<TString>,allocator<pair<const TString,int> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_listlETStringcOallocatorlETStringgRsPgR = { "list<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR = { "map<TString,TChain*,less<TString>,allocator<pair<const TString,TChain*> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR = { "map<TString,list<TString,allocator<TString> >*,less<TString>,allocator<pair<const TString,list<TString,allocator<TString> >*> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR = { "multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR = { "map<TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > >,less<TString>,allocator<pair<const TString,multimap<TString,TArrayI,less<TString>,allocator<pair<const TString,TArrayI> > > > > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR = { "map<unsigned int,TChain*,less<unsigned int>,allocator<pair<const unsigned int,TChain*> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR = { "map<unsigned int,double,less<unsigned int>,allocator<pair<const unsigned int,double> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR = { "map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_InitStatus = { "InitStatus" , 101 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_FairTask = { "FairTask" , 99 , -1 };
G__linked_taginfo G__G__ATTPCRecoDictLN_ATDecoderTask = { "ATDecoderTask" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__ATTPCRecoDict() {
  G__G__ATTPCRecoDictLN_TClass.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TBuffer.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TMemberInspector.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TObject.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TNamed.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TString.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TClonesArray.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TCanvas.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_GETFrame.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_GETPlot.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_GETMath.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_GETDecoder.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_GETDecodercLcLEFrameType.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_GETDecodercLcLEEndianness.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TGraph.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TH2D.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TPad.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_AtTpcMap.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOintcOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_ATPad.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_ATRawEvent.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_vectorlEATPadcOallocatorlEATPadgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEATPadcOallocatorlEATPadgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_ATCore.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_TTask.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_FairLogger.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_listlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_InitStatus.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_FairTask.tagnum = -1 ;
  G__G__ATTPCRecoDictLN_ATDecoderTask.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__ATTPCRecoDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TString);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TCanvas);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_GETFrame),sizeof(GETFrame),-1,292096,(char*)NULL,G__setup_memvarGETFrame,G__setup_memfuncGETFrame);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_GETPlot),sizeof(GETPlot),-1,324864,"/ added for making dictionary by ROOT",G__setup_memvarGETPlot,G__setup_memfuncGETPlot);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_GETMath),sizeof(GETMath),-1,324864,(char*)NULL,G__setup_memvarGETMath,G__setup_memfuncGETMath);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_GETDecoder),sizeof(GETDecoder),-1,324864,"/ added for making dictionary by ROOT",G__setup_memvarGETDecoder,G__setup_memfuncGETDecoder);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_GETDecodercLcLEFrameType);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_GETDecodercLcLEEndianness);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TGraph);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TPad);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_AtTpcMap);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplEvectorlEintcOallocatorlEintgRsPgRcOintcOlesslEvectorlEintcOallocatorlEintgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEintcOallocatorlEintgRsPgRcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_ATPad),sizeof(ATPad),-1,324864,(char*)NULL,G__setup_memvarATPad,G__setup_memfuncATPad);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_ATRawEvent),sizeof(ATRawEvent),-1,324864,(char*)NULL,G__setup_memvarATRawEvent,G__setup_memfuncATRawEvent);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_vectorlEATPadcOallocatorlEATPadgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_reverse_iteratorlEvectorlEATPadcOallocatorlEATPadgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_ATCore),sizeof(ATCore),-1,324864,(char*)NULL,G__setup_memvarATCore,G__setup_memfuncATCore);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_TTask);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_FairLogger);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplETStringcOTObjectmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTObjectmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_dequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_queuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplETStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOqueuelETClonesArraymUcOdequelETClonesArraymUcOallocatorlETClonesArraymUgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplETStringcOTClonesArraymUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTClonesArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplETStringcOFairTSBufferFunctionalmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairTSBufferFunctionalmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplETStringcOFairWriteoutBuffermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOFairWriteoutBuffermUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplEintcOTBranchmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTBranchmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_listlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplETStringcOTChainmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTChainmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplETStringcOlistlETStringcOallocatorlETStringgRsPgRmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOlistlETStringcOallocatorlETStringgRsPgRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_multimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplETStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOmultimaplETStringcOTArrayIcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTArrayIgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplEunsignedsPintcOTChainmUcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOTChainmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_InitStatus);
   G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_FairTask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ATTPCRecoDictLN_ATDecoderTask),sizeof(ATDecoderTask),-1,324864,(char*)NULL,G__setup_memvarATDecoderTask,G__setup_memfuncATDecoderTask);
}
extern "C" void G__cpp_setupG__ATTPCRecoDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__ATTPCRecoDict()");
  G__set_cpp_environmentG__ATTPCRecoDict();
  G__cpp_setup_tagtableG__ATTPCRecoDict();

  G__cpp_setup_inheritanceG__ATTPCRecoDict();

  G__cpp_setup_typetableG__ATTPCRecoDict();

  G__cpp_setup_memvarG__ATTPCRecoDict();

  G__cpp_setup_memfuncG__ATTPCRecoDict();
  G__cpp_setup_globalG__ATTPCRecoDict();
  G__cpp_setup_funcG__ATTPCRecoDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__ATTPCRecoDict();
  return;
}
class G__cpp_setup_initG__ATTPCRecoDict {
  public:
    G__cpp_setup_initG__ATTPCRecoDict() { G__add_setup_func("G__ATTPCRecoDict",(G__incsetup)(&G__cpp_setupG__ATTPCRecoDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__ATTPCRecoDict() { G__remove_setup_func("G__ATTPCRecoDict"); }
};
G__cpp_setup_initG__ATTPCRecoDict G__cpp_setup_initializerG__ATTPCRecoDict;

