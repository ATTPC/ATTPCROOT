//
// File generated by /Users/yassidayyad/fair_install/FairSoftInst/bin/rootcint at Sat Mar  7 15:05:18 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIUsersdIyassidayyaddIfair_installdIATTPCROOT_Mar_devdIbuilddIfielddIG__FieldDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__FieldDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void AtFieldPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AtFieldPar(void *p = 0);
   static void *newArray_AtFieldPar(Long_t size, void *p);
   static void delete_AtFieldPar(void *p);
   static void deleteArray_AtFieldPar(void *p);
   static void destruct_AtFieldPar(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AtFieldPar*)
   {
      ::AtFieldPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AtFieldPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AtFieldPar", ::AtFieldPar::Class_Version(), "/Users/yassidayyad/fair_install/ATTPCROOT_Mar_dev/field/AtFieldPar.h", 27,
                  typeid(::AtFieldPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AtFieldPar::Dictionary, isa_proxy, 4,
                  sizeof(::AtFieldPar) );
      instance.SetNew(&new_AtFieldPar);
      instance.SetNewArray(&newArray_AtFieldPar);
      instance.SetDelete(&delete_AtFieldPar);
      instance.SetDeleteArray(&deleteArray_AtFieldPar);
      instance.SetDestructor(&destruct_AtFieldPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AtFieldPar*)
   {
      return GenerateInitInstanceLocal((::AtFieldPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AtFieldPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AtConstField_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AtConstField(void *p = 0);
   static void *newArray_AtConstField(Long_t size, void *p);
   static void delete_AtConstField(void *p);
   static void deleteArray_AtConstField(void *p);
   static void destruct_AtConstField(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AtConstField*)
   {
      ::AtConstField *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AtConstField >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AtConstField", ::AtConstField::Class_Version(), "/Users/yassidayyad/fair_install/ATTPCROOT_Mar_dev/field/AtConstField.h", 35,
                  typeid(::AtConstField), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AtConstField::Dictionary, isa_proxy, 4,
                  sizeof(::AtConstField) );
      instance.SetNew(&new_AtConstField);
      instance.SetNewArray(&newArray_AtConstField);
      instance.SetDelete(&delete_AtConstField);
      instance.SetDeleteArray(&deleteArray_AtConstField);
      instance.SetDestructor(&destruct_AtConstField);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AtConstField*)
   {
      return GenerateInitInstanceLocal((::AtConstField*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AtConstField*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AtFieldCreator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AtFieldCreator(void *p = 0);
   static void *newArray_AtFieldCreator(Long_t size, void *p);
   static void delete_AtFieldCreator(void *p);
   static void deleteArray_AtFieldCreator(void *p);
   static void destruct_AtFieldCreator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AtFieldCreator*)
   {
      ::AtFieldCreator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AtFieldCreator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AtFieldCreator", ::AtFieldCreator::Class_Version(), "/Users/yassidayyad/fair_install/ATTPCROOT_Mar_dev/field/AtFieldCreator.h", 25,
                  typeid(::AtFieldCreator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AtFieldCreator::Dictionary, isa_proxy, 4,
                  sizeof(::AtFieldCreator) );
      instance.SetNew(&new_AtFieldCreator);
      instance.SetNewArray(&newArray_AtFieldCreator);
      instance.SetDelete(&delete_AtFieldCreator);
      instance.SetDeleteArray(&deleteArray_AtFieldCreator);
      instance.SetDestructor(&destruct_AtFieldCreator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AtFieldCreator*)
   {
      return GenerateInitInstanceLocal((::AtFieldCreator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AtFieldCreator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr AtFieldPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AtFieldPar::Class_Name()
{
   return "AtFieldPar";
}

//______________________________________________________________________________
const char *AtFieldPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AtFieldPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AtFieldPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AtFieldPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AtFieldPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AtFieldPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AtFieldPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AtFieldPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AtConstField::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AtConstField::Class_Name()
{
   return "AtConstField";
}

//______________________________________________________________________________
const char *AtConstField::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AtConstField*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AtConstField::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AtConstField*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AtConstField::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AtConstField*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AtConstField::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AtConstField*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AtFieldCreator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AtFieldCreator::Class_Name()
{
   return "AtFieldCreator";
}

//______________________________________________________________________________
const char *AtFieldCreator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AtFieldCreator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AtFieldCreator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AtFieldCreator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AtFieldCreator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AtFieldCreator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AtFieldCreator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AtFieldCreator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void AtConstField::Streamer(TBuffer &R__b)
{
   // Stream an object of class AtConstField.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AtConstField::Class(),this);
   } else {
      R__b.WriteClassBuffer(AtConstField::Class(),this);
   }
}

//______________________________________________________________________________
void AtConstField::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AtConstField.
      TClass *R__cl = ::AtConstField::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmin", &fXmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmax", &fXmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmin", &fYmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmax", &fYmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmin", &fZmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmax", &fZmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBx", &fBx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBy", &fBy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBz", &fBz);
      FairField::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AtConstField(void *p) {
      return  p ? new(p) ::AtConstField : new ::AtConstField;
   }
   static void *newArray_AtConstField(Long_t nElements, void *p) {
      return p ? new(p) ::AtConstField[nElements] : new ::AtConstField[nElements];
   }
   // Wrapper around operator delete
   static void delete_AtConstField(void *p) {
      delete ((::AtConstField*)p);
   }
   static void deleteArray_AtConstField(void *p) {
      delete [] ((::AtConstField*)p);
   }
   static void destruct_AtConstField(void *p) {
      typedef ::AtConstField current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AtConstField

//______________________________________________________________________________
void AtFieldCreator::Streamer(TBuffer &R__b)
{
   // Stream an object of class AtFieldCreator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AtFieldCreator::Class(),this);
   } else {
      R__b.WriteClassBuffer(AtFieldCreator::Class(),this);
   }
}

//______________________________________________________________________________
void AtFieldCreator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AtFieldCreator.
      TClass *R__cl = ::AtFieldCreator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFieldPar", &fFieldPar);
      FairFieldFactory::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AtFieldCreator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AtFieldCreator : new ::AtFieldCreator;
   }
   static void *newArray_AtFieldCreator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AtFieldCreator[nElements] : new ::AtFieldCreator[nElements];
   }
   // Wrapper around operator delete
   static void delete_AtFieldCreator(void *p) {
      delete ((::AtFieldCreator*)p);
   }
   static void deleteArray_AtFieldCreator(void *p) {
      delete [] ((::AtFieldCreator*)p);
   }
   static void destruct_AtFieldCreator(void *p) {
      typedef ::AtFieldCreator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AtFieldCreator

//______________________________________________________________________________
void AtFieldPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class AtFieldPar.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AtFieldPar::Class(),this);
   } else {
      R__b.WriteClassBuffer(AtFieldPar::Class(),this);
   }
}

//______________________________________________________________________________
void AtFieldPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AtFieldPar.
      TClass *R__cl = ::AtFieldPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmin", &fXmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmax", &fXmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmin", &fYmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmax", &fYmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmin", &fZmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmax", &fZmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBx", &fBx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBy", &fBy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBz", &fBz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMapName", &fMapName);
      R__insp.InspectMember(fMapName, "fMapName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosX", &fPosX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosY", &fPosY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosZ", &fPosZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScale", &fScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPeak", &fPeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMiddle", &fMiddle);
      FairParGenericSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AtFieldPar(void *p) {
      return  p ? new(p) ::AtFieldPar : new ::AtFieldPar;
   }
   static void *newArray_AtFieldPar(Long_t nElements, void *p) {
      return p ? new(p) ::AtFieldPar[nElements] : new ::AtFieldPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_AtFieldPar(void *p) {
      delete ((::AtFieldPar*)p);
   }
   static void deleteArray_AtFieldPar(void *p) {
      delete [] ((::AtFieldPar*)p);
   }
   static void destruct_AtFieldPar(void *p) {
      typedef ::AtFieldPar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AtFieldPar

/********************************************************
* /Users/yassidayyad/fair_install/ATTPCROOT_Mar_dev/build/field/G__FieldDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__FieldDict();

extern "C" void G__set_cpp_environmentG__FieldDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("AtConstField.h");
  G__add_compiledheader("AtFieldCreator.h");
  G__add_compiledheader("AtFieldPar.h");
  G__cpp_reset_tagtableG__FieldDict();
}
#include <new>
extern "C" int G__cpp_dllrevG__FieldDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* AtFieldPar */
static int G__G__FieldDict_190_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtFieldPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AtFieldPar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) AtFieldPar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtFieldPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtFieldPar[n];
     } else {
       p = new((void*) gvp) AtFieldPar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtFieldPar;
     } else {
       p = new((void*) gvp) AtFieldPar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AtFieldPar*) G__getstructoffset())->SetParameters((FairField*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const AtFieldPar*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetXmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetXmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetYmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetYmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetZmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetZmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetBx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetBy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetBz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AtFieldPar*) G__getstructoffset())->MapName(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetPositionX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetPositionY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetPositionZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetPeak());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtFieldPar*) G__getstructoffset())->GetMiddle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AtFieldPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtFieldPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AtFieldPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AtFieldPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AtFieldPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtFieldPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtFieldPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtFieldPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_190_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtFieldPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AtFieldPar G__TAtFieldPar;
static int G__G__FieldDict_190_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AtFieldPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AtFieldPar*) (soff+(sizeof(AtFieldPar)*i)))->~G__TAtFieldPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AtFieldPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AtFieldPar*) (soff))->~G__TAtFieldPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AtConstField */
static int G__G__FieldDict_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtConstField* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtConstField[n];
     } else {
       p = new((void*) gvp) AtConstField[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtConstField;
     } else {
       p = new((void*) gvp) AtConstField;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtConstField* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AtConstField(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
   } else {
     p = new((void*) gvp) AtConstField(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtConstField* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AtConstField((AtFieldPar*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) AtConstField((AtFieldPar*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AtConstField*) G__getstructoffset())->SetFieldRegion((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AtConstField*) G__getstructoffset())->SetField((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtConstField*) G__getstructoffset())->GetXmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtConstField*) G__getstructoffset())->GetXmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtConstField*) G__getstructoffset())->GetYmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtConstField*) G__getstructoffset())->GetYmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtConstField*) G__getstructoffset())->GetZmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtConstField*) G__getstructoffset())->GetZmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtConstField*) G__getstructoffset())->GetBx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtConstField*) G__getstructoffset())->GetBy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AtConstField*) G__getstructoffset())->GetBz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AtConstField*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AtConstField::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtConstField::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AtConstField::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AtConstField::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AtConstField*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtConstField::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtConstField::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtConstField::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_191_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtConstField::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AtConstField G__TAtConstField;
static int G__G__FieldDict_191_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AtConstField*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AtConstField*) (soff+(sizeof(AtConstField)*i)))->~G__TAtConstField();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AtConstField*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AtConstField*) (soff))->~G__TAtConstField();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__FieldDict_191_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtConstField* dest = (AtConstField*) G__getstructoffset();
   *dest = *(AtConstField*) libp->para[0].ref;
   const AtConstField& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AtFieldCreator */
static int G__G__FieldDict_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtFieldCreator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtFieldCreator[n];
     } else {
       p = new((void*) gvp) AtFieldCreator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtFieldCreator;
     } else {
       p = new((void*) gvp) AtFieldCreator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldCreator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AtFieldCreator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtFieldCreator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AtFieldCreator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AtFieldCreator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AtFieldCreator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtFieldCreator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtFieldCreator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtFieldCreator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__FieldDict_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtFieldCreator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AtFieldCreator G__TAtFieldCreator;
static int G__G__FieldDict_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AtFieldCreator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AtFieldCreator*) (soff+(sizeof(AtFieldCreator)*i)))->~G__TAtFieldCreator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AtFieldCreator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AtFieldCreator*) (soff))->~G__TAtFieldCreator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* AtFieldPar */

/* AtConstField */

/* AtFieldCreator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__FieldDict {
 public:
  G__Sizep2memfuncG__FieldDict(): p(&G__Sizep2memfuncG__FieldDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__FieldDict::*p)();
};

size_t G__get_sizep2memfuncG__FieldDict()
{
  G__Sizep2memfuncG__FieldDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__FieldDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar))) {
     AtFieldPar *G__Lderived;
     G__Lderived=(AtFieldPar*)0x1000;
     {
       FairParGenericSet *G__Lpbase=(FairParGenericSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar),G__get_linked_tagnum(&G__G__FieldDictLN_FairParGenericSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       FairParSet *G__Lpbase=(FairParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar),G__get_linked_tagnum(&G__G__FieldDictLN_FairParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       FairDbObjTableMap *G__Lpbase=(FairDbObjTableMap*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar),G__get_linked_tagnum(&G__G__FieldDictLN_FairDbObjTableMap),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar),G__get_linked_tagnum(&G__G__FieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField))) {
     AtConstField *G__Lderived;
     G__Lderived=(AtConstField*)0x1000;
     {
       FairField *G__Lpbase=(FairField*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField),G__get_linked_tagnum(&G__G__FieldDictLN_FairField),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualMagField *G__Lpbase=(TVirtualMagField*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField),G__get_linked_tagnum(&G__G__FieldDictLN_TVirtualMagField),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField),G__get_linked_tagnum(&G__G__FieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField),G__get_linked_tagnum(&G__G__FieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldCreator))) {
     AtFieldCreator *G__Lderived;
     G__Lderived=(AtFieldCreator*)0x1000;
     {
       FairFieldFactory *G__Lpbase=(FairFieldFactory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldCreator),G__get_linked_tagnum(&G__G__FieldDictLN_FairFieldFactory),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FieldDictLN_FairDbObjTableMap))) {
     FairDbObjTableMap *G__Lderived;
     G__Lderived=(FairDbObjTableMap*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_FairDbObjTableMap),G__get_linked_tagnum(&G__G__FieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FieldDictLN_FairParSet))) {
     FairParSet *G__Lderived;
     G__Lderived=(FairParSet*)0x1000;
     {
       FairDbObjTableMap *G__Lpbase=(FairDbObjTableMap*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_FairParSet),G__get_linked_tagnum(&G__G__FieldDictLN_FairDbObjTableMap),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_FairParSet),G__get_linked_tagnum(&G__G__FieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__FieldDictLN_FairParGenericSet))) {
     FairParGenericSet *G__Lderived;
     G__Lderived=(FairParGenericSet*)0x1000;
     {
       FairParSet *G__Lpbase=(FairParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_FairParGenericSet),G__get_linked_tagnum(&G__G__FieldDictLN_FairParSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       FairDbObjTableMap *G__Lpbase=(FairDbObjTableMap*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_FairParGenericSet),G__get_linked_tagnum(&G__G__FieldDictLN_FairDbObjTableMap),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__FieldDictLN_FairParGenericSet),G__get_linked_tagnum(&G__G__FieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__FieldDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__FieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__FieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__FieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__FieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__FieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* AtFieldPar */
static void G__setup_memvarAtFieldPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar));
   { AtFieldPar *p; p=(AtFieldPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBz=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__FieldDictLN_TString),-1,-1,4,"fMapName=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPosX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPosY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPeak=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMiddle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FieldDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AtConstField */
static void G__setup_memvarAtConstField(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField));
   { AtConstField *p; p=(AtConstField*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FieldDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AtFieldCreator */
static void G__setup_memvarAtFieldCreator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldCreator));
   { AtFieldCreator *p; p=(AtFieldCreator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FieldDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar),-1,-1,2,"fFieldPar=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__FieldDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncAtFieldPar(void) {
   /* AtFieldPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar));
   G__memfunc_setup("AtFieldPar",956,G__G__FieldDict_190_0_1, 105, G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"C - - 10 - context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AtFieldPar",956,G__G__FieldDict_190_0_2, 105, G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'FairParamList' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParamList' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameters",1344,G__G__FieldDict_190_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FairField' - 0 - field", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__G__FieldDict_190_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmin",700,G__G__FieldDict_190_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmax",702,G__G__FieldDict_190_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmin",701,G__G__FieldDict_190_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmax",703,G__G__FieldDict_190_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmin",702,G__G__FieldDict_190_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmax",704,G__G__FieldDict_190_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBx",474,G__G__FieldDict_190_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBy",475,G__G__FieldDict_190_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBz",476,G__G__FieldDict_190_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MapName",671,G__G__FieldDict_190_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionX",1229,G__G__FieldDict_190_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionY",1230,G__G__FieldDict_190_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionZ",1231,G__G__FieldDict_190_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScale",776,G__G__FieldDict_190_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeak",673,G__G__FieldDict_190_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiddle",879,G__G__FieldDict_190_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AtFieldPar",956,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar), -1, 0, 1, 1, 4, 0, "u 'AtFieldPar' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldPar), -1, 1, 1, 1, 4, 0, "u 'AtFieldPar' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__FieldDict_190_0_25, 85, G__get_linked_tagnum(&G__G__FieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AtFieldPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FieldDict_190_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtFieldPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FieldDict_190_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AtFieldPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FieldDict_190_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AtFieldPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FieldDict_190_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FieldDict_190_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtFieldPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FieldDict_190_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtFieldPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FieldDict_190_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtFieldPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FieldDict_190_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtFieldPar::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AtFieldPar", 1082, G__G__FieldDict_190_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAtConstField(void) {
   /* AtConstField */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField));
   G__memfunc_setup("AtConstField",1184,G__G__FieldDict_191_0_1, 105, G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AtConstField",1184,G__G__FieldDict_191_0_2, 105, G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField), -1, 0, 10, 1, 1, 0, 
"C - - 10 - name d - 'Double_t' 0 - xMin "
"d - 'Double_t' 0 - xMax d - 'Double_t' 0 - yMin "
"d - 'Double_t' 0 - yMax d - 'Double_t' 0 - zMin "
"d - 'Double_t' 0 - zMax d - 'Double_t' 0 - bX "
"d - 'Double_t' 0 - bY d - 'Double_t' 0 - bZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AtConstField",1184,G__G__FieldDict_191_0_3, 105, G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField), -1, 0, 1, 1, 1, 0, "U 'AtFieldPar' - 0 - fieldPar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFieldRegion",1396,G__G__FieldDict_191_0_4, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - xMin d - 'Double_t' 0 - xMax "
"d - 'Double_t' 0 - yMin d - 'Double_t' 0 - yMax "
"d - 'Double_t' 0 - zMin d - 'Double_t' 0 - zMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetField",784,G__G__FieldDict_191_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - bX d - 'Double_t' 0 - bY "
"d - 'Double_t' 0 - bZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBx",474,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBy",475,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBz",476,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXmin",700,G__G__FieldDict_191_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXmax",702,G__G__FieldDict_191_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmin",701,G__G__FieldDict_191_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYmax",703,G__G__FieldDict_191_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmin",702,G__G__FieldDict_191_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZmax",704,G__G__FieldDict_191_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBx",474,G__G__FieldDict_191_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBy",475,G__G__FieldDict_191_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBz",476,G__G__FieldDict_191_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__G__FieldDict_191_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__FieldDict_191_0_19, 85, G__get_linked_tagnum(&G__G__FieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AtConstField::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FieldDict_191_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtConstField::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FieldDict_191_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AtConstField::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FieldDict_191_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AtConstField::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FieldDict_191_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FieldDict_191_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtConstField::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FieldDict_191_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtConstField::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FieldDict_191_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtConstField::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FieldDict_191_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtConstField::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AtConstField", 1310, G__G__FieldDict_191_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__FieldDict_191_0_32, (int) ('u'), G__get_linked_tagnum(&G__G__FieldDictLN_AtConstField), -1, 1, 1, 1, 1, 0, "u 'AtConstField' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAtFieldCreator(void) {
   /* AtFieldCreator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldCreator));
   G__memfunc_setup("AtFieldCreator",1385,G__G__FieldDict_193_0_1, 105, G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldCreator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createFairField",1498,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FieldDictLN_FairField), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParm",700,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__FieldDict_193_0_4, 85, G__get_linked_tagnum(&G__G__FieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AtFieldCreator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__FieldDict_193_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtFieldCreator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__FieldDict_193_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AtFieldCreator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__FieldDict_193_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AtFieldCreator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__FieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__FieldDict_193_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__FieldDict_193_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtFieldCreator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__FieldDict_193_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtFieldCreator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__FieldDict_193_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtFieldCreator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__FieldDict_193_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtFieldCreator::DeclFileLine) ), 0);
   G__memfunc_setup("AtFieldCreator",1385,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldCreator), -1, 0, 1, 1, 4, 0, "u 'AtFieldCreator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__FieldDictLN_AtFieldCreator), -1, 1, 1, 1, 4, 0, "u 'AtFieldCreator' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AtFieldCreator", 1511, G__G__FieldDict_193_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__FieldDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__FieldDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__FieldDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__FieldDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_TVirtualMagField = { "TVirtualMagField" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_FairField = { "FairField" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_AtFieldPar = { "AtFieldPar" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_AtConstField = { "AtConstField" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_FairFieldFactory = { "FairFieldFactory" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_AtFieldCreator = { "AtFieldCreator" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_FairDbObjTableMap = { "FairDbObjTableMap" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_FairParSet = { "FairParSet" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_FairParamList = { "FairParamList" , 99 , -1 };
G__linked_taginfo G__G__FieldDictLN_FairParGenericSet = { "FairParGenericSet" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__FieldDict() {
  G__G__FieldDictLN_TClass.tagnum = -1 ;
  G__G__FieldDictLN_TBuffer.tagnum = -1 ;
  G__G__FieldDictLN_TMemberInspector.tagnum = -1 ;
  G__G__FieldDictLN_TObject.tagnum = -1 ;
  G__G__FieldDictLN_TNamed.tagnum = -1 ;
  G__G__FieldDictLN_TString.tagnum = -1 ;
  G__G__FieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__FieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__FieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__FieldDictLN_TVirtualMagField.tagnum = -1 ;
  G__G__FieldDictLN_FairField.tagnum = -1 ;
  G__G__FieldDictLN_AtFieldPar.tagnum = -1 ;
  G__G__FieldDictLN_AtConstField.tagnum = -1 ;
  G__G__FieldDictLN_FairFieldFactory.tagnum = -1 ;
  G__G__FieldDictLN_AtFieldCreator.tagnum = -1 ;
  G__G__FieldDictLN_FairDbObjTableMap.tagnum = -1 ;
  G__G__FieldDictLN_FairParSet.tagnum = -1 ;
  G__G__FieldDictLN_FairParamList.tagnum = -1 ;
  G__G__FieldDictLN_FairParGenericSet.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__FieldDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_TString);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_TVirtualMagField);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_FairField);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FieldDictLN_AtFieldPar),sizeof(AtFieldPar),-1,327424,(char*)NULL,G__setup_memvarAtFieldPar,G__setup_memfuncAtFieldPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FieldDictLN_AtConstField),sizeof(AtConstField),-1,324864,(char*)NULL,G__setup_memvarAtConstField,G__setup_memfuncAtConstField);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_FairFieldFactory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__FieldDictLN_AtFieldCreator),sizeof(AtFieldCreator),-1,265984,(char*)NULL,G__setup_memvarAtFieldCreator,G__setup_memfuncAtFieldCreator);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_FairDbObjTableMap);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_FairParSet);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_FairParamList);
   G__get_linked_tagnum_fwd(&G__G__FieldDictLN_FairParGenericSet);
}
extern "C" void G__cpp_setupG__FieldDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__FieldDict()");
  G__set_cpp_environmentG__FieldDict();
  G__cpp_setup_tagtableG__FieldDict();

  G__cpp_setup_inheritanceG__FieldDict();

  G__cpp_setup_typetableG__FieldDict();

  G__cpp_setup_memvarG__FieldDict();

  G__cpp_setup_memfuncG__FieldDict();
  G__cpp_setup_globalG__FieldDict();
  G__cpp_setup_funcG__FieldDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__FieldDict();
  return;
}
class G__cpp_setup_initG__FieldDict {
  public:
    G__cpp_setup_initG__FieldDict() { G__add_setup_func("G__FieldDict",(G__incsetup)(&G__cpp_setupG__FieldDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__FieldDict() { G__remove_setup_func("G__FieldDict"); }
};
G__cpp_setup_initG__FieldDict G__cpp_setup_initializerG__FieldDict;

