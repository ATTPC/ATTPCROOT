//
// File generated by /usr/local/fairsoft/fairsoft_jul14p3-install/bin/rootcint at Thu Mar  5 14:57:46 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIdaqdIfair_install_2015dIATTPCROOT_FebdIbuilddIparbasedIG__ParBaseDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__ParBaseDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void FairParIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairParIo(void *p = 0);
   static void *newArray_FairParIo(Long_t size, void *p);
   static void delete_FairParIo(void *p);
   static void deleteArray_FairParIo(void *p);
   static void destruct_FairParIo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairParIo*)
   {
      ::FairParIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairParIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairParIo", ::FairParIo::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairParIo.h", 21,
                  typeid(::FairParIo), DefineBehavior(ptr, ptr),
                  &::FairParIo::Dictionary, isa_proxy, 4,
                  sizeof(::FairParIo) );
      instance.SetNew(&new_FairParIo);
      instance.SetNewArray(&newArray_FairParIo);
      instance.SetDelete(&delete_FairParIo);
      instance.SetDeleteArray(&deleteArray_FairParIo);
      instance.SetDestructor(&destruct_FairParIo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairParIo*)
   {
      return GenerateInitInstanceLocal((::FairParIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairParIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairParSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairParSet(void *p = 0);
   static void *newArray_FairParSet(Long_t size, void *p);
   static void delete_FairParSet(void *p);
   static void deleteArray_FairParSet(void *p);
   static void destruct_FairParSet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairParSet*)
   {
      ::FairParSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairParSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairParSet", ::FairParSet::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairParSet.h", 20,
                  typeid(::FairParSet), DefineBehavior(ptr, ptr),
                  &::FairParSet::Dictionary, isa_proxy, 4,
                  sizeof(::FairParSet) );
      instance.SetNew(&new_FairParSet);
      instance.SetNewArray(&newArray_FairParSet);
      instance.SetDelete(&delete_FairParSet);
      instance.SetDeleteArray(&deleteArray_FairParSet);
      instance.SetDestructor(&destruct_FairParSet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairParSet*)
   {
      return GenerateInitInstanceLocal((::FairParSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairParSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairContainer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_FairContainer(void *p);
   static void deleteArray_FairContainer(void *p);
   static void destruct_FairContainer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairContainer*)
   {
      ::FairContainer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairContainer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairContainer", ::FairContainer::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairContFact.h", 22,
                  typeid(::FairContainer), DefineBehavior(ptr, ptr),
                  &::FairContainer::Dictionary, isa_proxy, 4,
                  sizeof(::FairContainer) );
      instance.SetDelete(&delete_FairContainer);
      instance.SetDeleteArray(&deleteArray_FairContainer);
      instance.SetDestructor(&destruct_FairContainer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairContainer*)
   {
      return GenerateInitInstanceLocal((::FairContainer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairContainer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairContFact_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairContFact(void *p = 0);
   static void *newArray_FairContFact(Long_t size, void *p);
   static void delete_FairContFact(void *p);
   static void deleteArray_FairContFact(void *p);
   static void destruct_FairContFact(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairContFact*)
   {
      ::FairContFact *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairContFact >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairContFact", ::FairContFact::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairContFact.h", 49,
                  typeid(::FairContFact), DefineBehavior(ptr, ptr),
                  &::FairContFact::Dictionary, isa_proxy, 4,
                  sizeof(::FairContFact) );
      instance.SetNew(&new_FairContFact);
      instance.SetNewArray(&newArray_FairContFact);
      instance.SetDelete(&delete_FairContFact);
      instance.SetDeleteArray(&deleteArray_FairContFact);
      instance.SetDestructor(&destruct_FairContFact);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairContFact*)
   {
      return GenerateInitInstanceLocal((::FairContFact*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairContFact*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairDetParIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairDetParIo(void *p = 0);
   static void *newArray_FairDetParIo(Long_t size, void *p);
   static void delete_FairDetParIo(void *p);
   static void deleteArray_FairDetParIo(void *p);
   static void destruct_FairDetParIo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairDetParIo*)
   {
      ::FairDetParIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairDetParIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairDetParIo", ::FairDetParIo::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairDetParIo.h", 18,
                  typeid(::FairDetParIo), DefineBehavior(ptr, ptr),
                  &::FairDetParIo::Dictionary, isa_proxy, 4,
                  sizeof(::FairDetParIo) );
      instance.SetNew(&new_FairDetParIo);
      instance.SetNewArray(&newArray_FairDetParIo);
      instance.SetDelete(&delete_FairDetParIo);
      instance.SetDeleteArray(&deleteArray_FairDetParIo);
      instance.SetDestructor(&destruct_FairDetParIo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairDetParIo*)
   {
      return GenerateInitInstanceLocal((::FairDetParIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairDetParIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairDetParAsciiFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_FairDetParAsciiFileIo(void *p);
   static void deleteArray_FairDetParAsciiFileIo(void *p);
   static void destruct_FairDetParAsciiFileIo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairDetParAsciiFileIo*)
   {
      ::FairDetParAsciiFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairDetParAsciiFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairDetParAsciiFileIo", ::FairDetParAsciiFileIo::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairDetParAsciiFileIo.h", 22,
                  typeid(::FairDetParAsciiFileIo), DefineBehavior(ptr, ptr),
                  &::FairDetParAsciiFileIo::Dictionary, isa_proxy, 4,
                  sizeof(::FairDetParAsciiFileIo) );
      instance.SetDelete(&delete_FairDetParAsciiFileIo);
      instance.SetDeleteArray(&deleteArray_FairDetParAsciiFileIo);
      instance.SetDestructor(&destruct_FairDetParAsciiFileIo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairDetParAsciiFileIo*)
   {
      return GenerateInitInstanceLocal((::FairDetParAsciiFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairDetParAsciiFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairParRootFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_FairParRootFile(void *p);
   static void deleteArray_FairParRootFile(void *p);
   static void destruct_FairParRootFile(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairParRootFile*)
   {
      ::FairParRootFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairParRootFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairParRootFile", ::FairParRootFile::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairParRootFileIo.h", 22,
                  typeid(::FairParRootFile), DefineBehavior(ptr, ptr),
                  &::FairParRootFile::Dictionary, isa_proxy, 4,
                  sizeof(::FairParRootFile) );
      instance.SetDelete(&delete_FairParRootFile);
      instance.SetDeleteArray(&deleteArray_FairParRootFile);
      instance.SetDestructor(&destruct_FairParRootFile);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairParRootFile*)
   {
      return GenerateInitInstanceLocal((::FairParRootFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairParRootFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairDetParRootFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_FairDetParRootFileIo(void *p);
   static void deleteArray_FairDetParRootFileIo(void *p);
   static void destruct_FairDetParRootFileIo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairDetParRootFileIo*)
   {
      ::FairDetParRootFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairDetParRootFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairDetParRootFileIo", ::FairDetParRootFileIo::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairDetParRootFileIo.h", 20,
                  typeid(::FairDetParRootFileIo), DefineBehavior(ptr, ptr),
                  &::FairDetParRootFileIo::Dictionary, isa_proxy, 4,
                  sizeof(::FairDetParRootFileIo) );
      instance.SetDelete(&delete_FairDetParRootFileIo);
      instance.SetDeleteArray(&deleteArray_FairDetParRootFileIo);
      instance.SetDestructor(&destruct_FairDetParRootFileIo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairDetParRootFileIo*)
   {
      return GenerateInitInstanceLocal((::FairDetParRootFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairDetParRootFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairParGenericSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_FairParGenericSet(void *p);
   static void deleteArray_FairParGenericSet(void *p);
   static void destruct_FairParGenericSet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairParGenericSet*)
   {
      ::FairParGenericSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairParGenericSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairParGenericSet", ::FairParGenericSet::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairParGenericSet.h", 19,
                  typeid(::FairParGenericSet), DefineBehavior(ptr, ptr),
                  &::FairParGenericSet::Dictionary, isa_proxy, 4,
                  sizeof(::FairParGenericSet) );
      instance.SetDelete(&delete_FairParGenericSet);
      instance.SetDeleteArray(&deleteArray_FairParGenericSet);
      instance.SetDestructor(&destruct_FairParGenericSet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairParGenericSet*)
   {
      return GenerateInitInstanceLocal((::FairParGenericSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairParGenericSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairGenericParAsciiFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairGenericParAsciiFileIo(void *p = 0);
   static void *newArray_FairGenericParAsciiFileIo(Long_t size, void *p);
   static void delete_FairGenericParAsciiFileIo(void *p);
   static void deleteArray_FairGenericParAsciiFileIo(void *p);
   static void destruct_FairGenericParAsciiFileIo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairGenericParAsciiFileIo*)
   {
      ::FairGenericParAsciiFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairGenericParAsciiFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairGenericParAsciiFileIo", ::FairGenericParAsciiFileIo::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairGenericParAsciiFileIo.h", 23,
                  typeid(::FairGenericParAsciiFileIo), DefineBehavior(ptr, ptr),
                  &::FairGenericParAsciiFileIo::Dictionary, isa_proxy, 4,
                  sizeof(::FairGenericParAsciiFileIo) );
      instance.SetNew(&new_FairGenericParAsciiFileIo);
      instance.SetNewArray(&newArray_FairGenericParAsciiFileIo);
      instance.SetDelete(&delete_FairGenericParAsciiFileIo);
      instance.SetDeleteArray(&deleteArray_FairGenericParAsciiFileIo);
      instance.SetDestructor(&destruct_FairGenericParAsciiFileIo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairGenericParAsciiFileIo*)
   {
      return GenerateInitInstanceLocal((::FairGenericParAsciiFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairGenericParAsciiFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairGenericParRootFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairGenericParRootFileIo(void *p = 0);
   static void *newArray_FairGenericParRootFileIo(Long_t size, void *p);
   static void delete_FairGenericParRootFileIo(void *p);
   static void deleteArray_FairGenericParRootFileIo(void *p);
   static void destruct_FairGenericParRootFileIo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairGenericParRootFileIo*)
   {
      ::FairGenericParRootFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairGenericParRootFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairGenericParRootFileIo", ::FairGenericParRootFileIo::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairGenericParRootFileIo.h", 19,
                  typeid(::FairGenericParRootFileIo), DefineBehavior(ptr, ptr),
                  &::FairGenericParRootFileIo::Dictionary, isa_proxy, 4,
                  sizeof(::FairGenericParRootFileIo) );
      instance.SetNew(&new_FairGenericParRootFileIo);
      instance.SetNewArray(&newArray_FairGenericParRootFileIo);
      instance.SetDelete(&delete_FairGenericParRootFileIo);
      instance.SetDeleteArray(&deleteArray_FairGenericParRootFileIo);
      instance.SetDestructor(&destruct_FairGenericParRootFileIo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairGenericParRootFileIo*)
   {
      return GenerateInitInstanceLocal((::FairGenericParRootFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairGenericParRootFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairRtdbRun_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairRtdbRun(void *p = 0);
   static void *newArray_FairRtdbRun(Long_t size, void *p);
   static void delete_FairRtdbRun(void *p);
   static void deleteArray_FairRtdbRun(void *p);
   static void destruct_FairRtdbRun(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairRtdbRun*)
   {
      ::FairRtdbRun *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairRtdbRun >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairRtdbRun", ::FairRtdbRun::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairRtdbRun.h", 47,
                  typeid(::FairRtdbRun), DefineBehavior(ptr, ptr),
                  &::FairRtdbRun::Dictionary, isa_proxy, 4,
                  sizeof(::FairRtdbRun) );
      instance.SetNew(&new_FairRtdbRun);
      instance.SetNewArray(&newArray_FairRtdbRun);
      instance.SetDelete(&delete_FairRtdbRun);
      instance.SetDeleteArray(&deleteArray_FairRtdbRun);
      instance.SetDestructor(&destruct_FairRtdbRun);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairRtdbRun*)
   {
      return GenerateInitInstanceLocal((::FairRtdbRun*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairRtdbRun*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairParAsciiFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairParAsciiFileIo(void *p = 0);
   static void *newArray_FairParAsciiFileIo(Long_t size, void *p);
   static void delete_FairParAsciiFileIo(void *p);
   static void deleteArray_FairParAsciiFileIo(void *p);
   static void destruct_FairParAsciiFileIo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairParAsciiFileIo*)
   {
      ::FairParAsciiFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairParAsciiFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairParAsciiFileIo", ::FairParAsciiFileIo::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairParAsciiFileIo.h", 21,
                  typeid(::FairParAsciiFileIo), DefineBehavior(ptr, ptr),
                  &::FairParAsciiFileIo::Dictionary, isa_proxy, 4,
                  sizeof(::FairParAsciiFileIo) );
      instance.SetNew(&new_FairParAsciiFileIo);
      instance.SetNewArray(&newArray_FairParAsciiFileIo);
      instance.SetDelete(&delete_FairParAsciiFileIo);
      instance.SetDeleteArray(&deleteArray_FairParAsciiFileIo);
      instance.SetDestructor(&destruct_FairParAsciiFileIo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairParAsciiFileIo*)
   {
      return GenerateInitInstanceLocal((::FairParAsciiFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairParAsciiFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairParamList_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairParamList(void *p = 0);
   static void *newArray_FairParamList(Long_t size, void *p);
   static void delete_FairParamList(void *p);
   static void deleteArray_FairParamList(void *p);
   static void destruct_FairParamList(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairParamList*)
   {
      ::FairParamList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairParamList >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairParamList", ::FairParamList::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairParamList.h", 78,
                  typeid(::FairParamList), DefineBehavior(ptr, ptr),
                  &::FairParamList::Dictionary, isa_proxy, 4,
                  sizeof(::FairParamList) );
      instance.SetNew(&new_FairParamList);
      instance.SetNewArray(&newArray_FairParamList);
      instance.SetDelete(&delete_FairParamList);
      instance.SetDeleteArray(&deleteArray_FairParamList);
      instance.SetDestructor(&destruct_FairParamList);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairParamList*)
   {
      return GenerateInitInstanceLocal((::FairParamList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairParamList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairParRootFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairParRootFileIo(void *p = 0);
   static void *newArray_FairParRootFileIo(Long_t size, void *p);
   static void delete_FairParRootFileIo(void *p);
   static void deleteArray_FairParRootFileIo(void *p);
   static void destruct_FairParRootFileIo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairParRootFileIo*)
   {
      ::FairParRootFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairParRootFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairParRootFileIo", ::FairParRootFileIo::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairParRootFileIo.h", 53,
                  typeid(::FairParRootFileIo), DefineBehavior(ptr, ptr),
                  &::FairParRootFileIo::Dictionary, isa_proxy, 4,
                  sizeof(::FairParRootFileIo) );
      instance.SetNew(&new_FairParRootFileIo);
      instance.SetNewArray(&newArray_FairParRootFileIo);
      instance.SetDelete(&delete_FairParRootFileIo);
      instance.SetDeleteArray(&deleteArray_FairParRootFileIo);
      instance.SetDestructor(&destruct_FairParRootFileIo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairParRootFileIo*)
   {
      return GenerateInitInstanceLocal((::FairParRootFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairParRootFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairParamObj_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairParamObj(void *p = 0);
   static void *newArray_FairParamObj(Long_t size, void *p);
   static void delete_FairParamObj(void *p);
   static void deleteArray_FairParamObj(void *p);
   static void destruct_FairParamObj(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairParamObj*)
   {
      ::FairParamObj *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairParamObj >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairParamObj", ::FairParamObj::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairParamList.h", 28,
                  typeid(::FairParamObj), DefineBehavior(ptr, ptr),
                  &::FairParamObj::Dictionary, isa_proxy, 4,
                  sizeof(::FairParamObj) );
      instance.SetNew(&new_FairParamObj);
      instance.SetNewArray(&newArray_FairParamObj);
      instance.SetDelete(&delete_FairParamObj);
      instance.SetDeleteArray(&deleteArray_FairParamObj);
      instance.SetDestructor(&destruct_FairParamObj);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairParamObj*)
   {
      return GenerateInitInstanceLocal((::FairParamObj*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairParamObj*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairParVersion_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairParVersion(void *p = 0);
   static void *newArray_FairParVersion(Long_t size, void *p);
   static void delete_FairParVersion(void *p);
   static void deleteArray_FairParVersion(void *p);
   static void destruct_FairParVersion(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairParVersion*)
   {
      ::FairParVersion *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairParVersion >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairParVersion", ::FairParVersion::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairRtdbRun.h", 23,
                  typeid(::FairParVersion), DefineBehavior(ptr, ptr),
                  &::FairParVersion::Dictionary, isa_proxy, 4,
                  sizeof(::FairParVersion) );
      instance.SetNew(&new_FairParVersion);
      instance.SetNewArray(&newArray_FairParVersion);
      instance.SetDelete(&delete_FairParVersion);
      instance.SetDeleteArray(&deleteArray_FairParVersion);
      instance.SetDestructor(&destruct_FairParVersion);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairParVersion*)
   {
      return GenerateInitInstanceLocal((::FairParVersion*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairParVersion*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairRuntimeDb_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_FairRuntimeDb(void *p);
   static void deleteArray_FairRuntimeDb(void *p);
   static void destruct_FairRuntimeDb(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairRuntimeDb*)
   {
      ::FairRuntimeDb *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairRuntimeDb >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairRuntimeDb", ::FairRuntimeDb::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/FairRuntimeDb.h", 26,
                  typeid(::FairRuntimeDb), DefineBehavior(ptr, ptr),
                  &::FairRuntimeDb::Dictionary, isa_proxy, 4,
                  sizeof(::FairRuntimeDb) );
      instance.SetDelete(&delete_FairRuntimeDb);
      instance.SetDeleteArray(&deleteArray_FairRuntimeDb);
      instance.SetDestructor(&destruct_FairRuntimeDb);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairRuntimeDb*)
   {
      return GenerateInitInstanceLocal((::FairRuntimeDb*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairRuntimeDb*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairParTSQLIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairParTSQLIo(void *p = 0);
   static void *newArray_FairParTSQLIo(Long_t size, void *p);
   static void delete_FairParTSQLIo(void *p);
   static void deleteArray_FairParTSQLIo(void *p);
   static void destruct_FairParTSQLIo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairParTSQLIo*)
   {
      ::FairParTSQLIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairParTSQLIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairParTSQLIo", ::FairParTSQLIo::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/dbIO/FairParTSQLIo.h", 32,
                  typeid(::FairParTSQLIo), DefineBehavior(ptr, ptr),
                  &::FairParTSQLIo::Dictionary, isa_proxy, 4,
                  sizeof(::FairParTSQLIo) );
      instance.SetNew(&new_FairParTSQLIo);
      instance.SetNewArray(&newArray_FairParTSQLIo);
      instance.SetDelete(&delete_FairParTSQLIo);
      instance.SetDeleteArray(&deleteArray_FairParTSQLIo);
      instance.SetDestructor(&destruct_FairParTSQLIo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairParTSQLIo*)
   {
      return GenerateInitInstanceLocal((::FairParTSQLIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairParTSQLIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairDetParTSQLIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairDetParTSQLIo(void *p = 0);
   static void *newArray_FairDetParTSQLIo(Long_t size, void *p);
   static void delete_FairDetParTSQLIo(void *p);
   static void deleteArray_FairDetParTSQLIo(void *p);
   static void destruct_FairDetParTSQLIo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairDetParTSQLIo*)
   {
      ::FairDetParTSQLIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairDetParTSQLIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairDetParTSQLIo", ::FairDetParTSQLIo::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/dbIO/FairDetParTSQLIo.h", 30,
                  typeid(::FairDetParTSQLIo), DefineBehavior(ptr, ptr),
                  &::FairDetParTSQLIo::Dictionary, isa_proxy, 4,
                  sizeof(::FairDetParTSQLIo) );
      instance.SetNew(&new_FairDetParTSQLIo);
      instance.SetNewArray(&newArray_FairDetParTSQLIo);
      instance.SetDelete(&delete_FairDetParTSQLIo);
      instance.SetDeleteArray(&deleteArray_FairDetParTSQLIo);
      instance.SetDestructor(&destruct_FairDetParTSQLIo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairDetParTSQLIo*)
   {
      return GenerateInitInstanceLocal((::FairDetParTSQLIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairDetParTSQLIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void FairGenericParTSQLIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FairGenericParTSQLIo(void *p = 0);
   static void *newArray_FairGenericParTSQLIo(Long_t size, void *p);
   static void delete_FairGenericParTSQLIo(void *p);
   static void deleteArray_FairGenericParTSQLIo(void *p);
   static void destruct_FairGenericParTSQLIo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::FairGenericParTSQLIo*)
   {
      ::FairGenericParTSQLIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FairGenericParTSQLIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FairGenericParTSQLIo", ::FairGenericParTSQLIo::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT_Feb/parbase/dbIO/FairGenericParTSQLIo.h", 29,
                  typeid(::FairGenericParTSQLIo), DefineBehavior(ptr, ptr),
                  &::FairGenericParTSQLIo::Dictionary, isa_proxy, 4,
                  sizeof(::FairGenericParTSQLIo) );
      instance.SetNew(&new_FairGenericParTSQLIo);
      instance.SetNewArray(&newArray_FairGenericParTSQLIo);
      instance.SetDelete(&delete_FairGenericParTSQLIo);
      instance.SetDeleteArray(&deleteArray_FairGenericParTSQLIo);
      instance.SetDestructor(&destruct_FairGenericParTSQLIo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::FairGenericParTSQLIo*)
   {
      return GenerateInitInstanceLocal((::FairGenericParTSQLIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FairGenericParTSQLIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *FairParIo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairParIo::Class_Name()
{
   return "FairParIo";
}

//______________________________________________________________________________
const char *FairParIo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairParIo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairParIo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairParIo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParIo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairParSet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairParSet::Class_Name()
{
   return "FairParSet";
}

//______________________________________________________________________________
const char *FairParSet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairParSet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairParSet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairParSet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParSet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairContainer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairContainer::Class_Name()
{
   return "FairContainer";
}

//______________________________________________________________________________
const char *FairContainer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairContainer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairContainer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairContainer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairContainer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairContainer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairContainer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairContainer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairContFact::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairContFact::Class_Name()
{
   return "FairContFact";
}

//______________________________________________________________________________
const char *FairContFact::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairContFact*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairContFact::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairContFact*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairContFact::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairContFact*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairContFact::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairContFact*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairDetParIo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairDetParIo::Class_Name()
{
   return "FairDetParIo";
}

//______________________________________________________________________________
const char *FairDetParIo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairDetParIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairDetParIo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairDetParIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairDetParIo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairDetParIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairDetParIo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairDetParIo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairDetParAsciiFileIo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairDetParAsciiFileIo::Class_Name()
{
   return "FairDetParAsciiFileIo";
}

//______________________________________________________________________________
const char *FairDetParAsciiFileIo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairDetParAsciiFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairDetParAsciiFileIo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairDetParAsciiFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairDetParAsciiFileIo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairDetParAsciiFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairDetParAsciiFileIo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairDetParAsciiFileIo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairParRootFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairParRootFile::Class_Name()
{
   return "FairParRootFile";
}

//______________________________________________________________________________
const char *FairParRootFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParRootFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairParRootFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParRootFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairParRootFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParRootFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairParRootFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParRootFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairDetParRootFileIo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairDetParRootFileIo::Class_Name()
{
   return "FairDetParRootFileIo";
}

//______________________________________________________________________________
const char *FairDetParRootFileIo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairDetParRootFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairDetParRootFileIo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairDetParRootFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairDetParRootFileIo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairDetParRootFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairDetParRootFileIo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairDetParRootFileIo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairParGenericSet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairParGenericSet::Class_Name()
{
   return "FairParGenericSet";
}

//______________________________________________________________________________
const char *FairParGenericSet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParGenericSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairParGenericSet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParGenericSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairParGenericSet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParGenericSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairParGenericSet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParGenericSet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairGenericParAsciiFileIo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairGenericParAsciiFileIo::Class_Name()
{
   return "FairGenericParAsciiFileIo";
}

//______________________________________________________________________________
const char *FairGenericParAsciiFileIo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairGenericParAsciiFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairGenericParAsciiFileIo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairGenericParAsciiFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairGenericParAsciiFileIo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairGenericParAsciiFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairGenericParAsciiFileIo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairGenericParAsciiFileIo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairGenericParRootFileIo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairGenericParRootFileIo::Class_Name()
{
   return "FairGenericParRootFileIo";
}

//______________________________________________________________________________
const char *FairGenericParRootFileIo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairGenericParRootFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairGenericParRootFileIo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairGenericParRootFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairGenericParRootFileIo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairGenericParRootFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairGenericParRootFileIo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairGenericParRootFileIo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairRtdbRun::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairRtdbRun::Class_Name()
{
   return "FairRtdbRun";
}

//______________________________________________________________________________
const char *FairRtdbRun::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairRtdbRun*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairRtdbRun::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairRtdbRun*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairRtdbRun::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairRtdbRun*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairRtdbRun::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairRtdbRun*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairParAsciiFileIo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairParAsciiFileIo::Class_Name()
{
   return "FairParAsciiFileIo";
}

//______________________________________________________________________________
const char *FairParAsciiFileIo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParAsciiFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairParAsciiFileIo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParAsciiFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairParAsciiFileIo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParAsciiFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairParAsciiFileIo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParAsciiFileIo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairParamList::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairParamList::Class_Name()
{
   return "FairParamList";
}

//______________________________________________________________________________
const char *FairParamList::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParamList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairParamList::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParamList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairParamList::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParamList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairParamList::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParamList*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairParRootFileIo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairParRootFileIo::Class_Name()
{
   return "FairParRootFileIo";
}

//______________________________________________________________________________
const char *FairParRootFileIo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParRootFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairParRootFileIo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParRootFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairParRootFileIo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParRootFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairParRootFileIo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParRootFileIo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairParamObj::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairParamObj::Class_Name()
{
   return "FairParamObj";
}

//______________________________________________________________________________
const char *FairParamObj::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParamObj*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairParamObj::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParamObj*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairParamObj::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParamObj*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairParamObj::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParamObj*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairParVersion::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairParVersion::Class_Name()
{
   return "FairParVersion";
}

//______________________________________________________________________________
const char *FairParVersion::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParVersion*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairParVersion::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParVersion*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairParVersion::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParVersion*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairParVersion::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParVersion*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairRuntimeDb::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairRuntimeDb::Class_Name()
{
   return "FairRuntimeDb";
}

//______________________________________________________________________________
const char *FairRuntimeDb::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairRuntimeDb*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairRuntimeDb::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairRuntimeDb*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairRuntimeDb::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairRuntimeDb*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairRuntimeDb::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairRuntimeDb*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairParTSQLIo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairParTSQLIo::Class_Name()
{
   return "FairParTSQLIo";
}

//______________________________________________________________________________
const char *FairParTSQLIo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParTSQLIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairParTSQLIo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairParTSQLIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairParTSQLIo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParTSQLIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairParTSQLIo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairParTSQLIo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairDetParTSQLIo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairDetParTSQLIo::Class_Name()
{
   return "FairDetParTSQLIo";
}

//______________________________________________________________________________
const char *FairDetParTSQLIo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairDetParTSQLIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairDetParTSQLIo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairDetParTSQLIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairDetParTSQLIo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairDetParTSQLIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairDetParTSQLIo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairDetParTSQLIo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *FairGenericParTSQLIo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *FairGenericParTSQLIo::Class_Name()
{
   return "FairGenericParTSQLIo";
}

//______________________________________________________________________________
const char *FairGenericParTSQLIo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairGenericParTSQLIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FairGenericParTSQLIo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::FairGenericParTSQLIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FairGenericParTSQLIo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairGenericParTSQLIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FairGenericParTSQLIo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::FairGenericParTSQLIo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void FairContFact::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairContFact.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairContFact::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairContFact::Class(),this);
   }
}

//______________________________________________________________________________
void FairContFact::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairContFact.
      TClass *R__cl = ::FairContFact::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*containers", &containers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogger", &fLogger);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairContFact(void *p) {
      return  p ? new(p) ::FairContFact : new ::FairContFact;
   }
   static void *newArray_FairContFact(Long_t nElements, void *p) {
      return p ? new(p) ::FairContFact[nElements] : new ::FairContFact[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairContFact(void *p) {
      delete ((::FairContFact*)p);
   }
   static void deleteArray_FairContFact(void *p) {
      delete [] ((::FairContFact*)p);
   }
   static void destruct_FairContFact(void *p) {
      typedef ::FairContFact current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairContFact

//______________________________________________________________________________
void FairContainer::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairContainer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairContainer::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairContainer::Class(),this);
   }
}

//______________________________________________________________________________
void FairContainer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairContainer.
      TClass *R__cl = ::FairContainer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*contexts", &contexts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "actualContext", &actualContext);
      R__insp.InspectMember(actualContext, "actualContext.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogger", &fLogger);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_FairContainer(void *p) {
      delete ((::FairContainer*)p);
   }
   static void deleteArray_FairContainer(void *p) {
      delete [] ((::FairContainer*)p);
   }
   static void destruct_FairContainer(void *p) {
      typedef ::FairContainer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairContainer

//______________________________________________________________________________
void FairDetParAsciiFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairDetParAsciiFileIo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairDetParAsciiFileIo::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairDetParAsciiFileIo::Class(),this);
   }
}

//______________________________________________________________________________
void FairDetParAsciiFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairDetParAsciiFileIo.
      TClass *R__cl = ::FairDetParAsciiFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHeader", &fHeader);
      R__insp.InspectMember(fHeader, "fHeader.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sepLine", &sepLine);
      R__insp.InspectMember(sepLine, "sepLine.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pFile", &pFile);
      FairDetParIo::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_FairDetParAsciiFileIo(void *p) {
      delete ((::FairDetParAsciiFileIo*)p);
   }
   static void deleteArray_FairDetParAsciiFileIo(void *p) {
      delete [] ((::FairDetParAsciiFileIo*)p);
   }
   static void destruct_FairDetParAsciiFileIo(void *p) {
      typedef ::FairDetParAsciiFileIo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairDetParAsciiFileIo

//______________________________________________________________________________
void FairDetParIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairDetParIo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairDetParIo::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairDetParIo::Class(),this);
   }
}

//______________________________________________________________________________
void FairDetParIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairDetParIo.
      TClass *R__cl = ::FairDetParIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inputNumber", &inputNumber);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairDetParIo(void *p) {
      return  p ? new(p) ::FairDetParIo : new ::FairDetParIo;
   }
   static void *newArray_FairDetParIo(Long_t nElements, void *p) {
      return p ? new(p) ::FairDetParIo[nElements] : new ::FairDetParIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairDetParIo(void *p) {
      delete ((::FairDetParIo*)p);
   }
   static void deleteArray_FairDetParIo(void *p) {
      delete [] ((::FairDetParIo*)p);
   }
   static void destruct_FairDetParIo(void *p) {
      typedef ::FairDetParIo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairDetParIo

//______________________________________________________________________________
void FairDetParRootFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairDetParRootFileIo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairDetParRootFileIo::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairDetParRootFileIo::Class(),this);
   }
}

//______________________________________________________________________________
void FairDetParRootFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairDetParRootFileIo.
      TClass *R__cl = ::FairDetParRootFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pFile", &pFile);
      FairDetParIo::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_FairDetParRootFileIo(void *p) {
      delete ((::FairDetParRootFileIo*)p);
   }
   static void deleteArray_FairDetParRootFileIo(void *p) {
      delete [] ((::FairDetParRootFileIo*)p);
   }
   static void destruct_FairDetParRootFileIo(void *p) {
      typedef ::FairDetParRootFileIo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairDetParRootFileIo

//______________________________________________________________________________
void FairGenericParAsciiFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairGenericParAsciiFileIo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairGenericParAsciiFileIo::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairGenericParAsciiFileIo::Class(),this);
   }
}

//______________________________________________________________________________
void FairGenericParAsciiFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairGenericParAsciiFileIo.
      TClass *R__cl = ::FairGenericParAsciiFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      FairDetParAsciiFileIo::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairGenericParAsciiFileIo(void *p) {
      return  p ? new(p) ::FairGenericParAsciiFileIo : new ::FairGenericParAsciiFileIo;
   }
   static void *newArray_FairGenericParAsciiFileIo(Long_t nElements, void *p) {
      return p ? new(p) ::FairGenericParAsciiFileIo[nElements] : new ::FairGenericParAsciiFileIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairGenericParAsciiFileIo(void *p) {
      delete ((::FairGenericParAsciiFileIo*)p);
   }
   static void deleteArray_FairGenericParAsciiFileIo(void *p) {
      delete [] ((::FairGenericParAsciiFileIo*)p);
   }
   static void destruct_FairGenericParAsciiFileIo(void *p) {
      typedef ::FairGenericParAsciiFileIo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairGenericParAsciiFileIo

//______________________________________________________________________________
void FairGenericParRootFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairGenericParRootFileIo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairGenericParRootFileIo::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairGenericParRootFileIo::Class(),this);
   }
}

//______________________________________________________________________________
void FairGenericParRootFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairGenericParRootFileIo.
      TClass *R__cl = ::FairGenericParRootFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      FairDetParRootFileIo::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairGenericParRootFileIo(void *p) {
      return  p ? new(p) ::FairGenericParRootFileIo : new ::FairGenericParRootFileIo;
   }
   static void *newArray_FairGenericParRootFileIo(Long_t nElements, void *p) {
      return p ? new(p) ::FairGenericParRootFileIo[nElements] : new ::FairGenericParRootFileIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairGenericParRootFileIo(void *p) {
      delete ((::FairGenericParRootFileIo*)p);
   }
   static void deleteArray_FairGenericParRootFileIo(void *p) {
      delete [] ((::FairGenericParRootFileIo*)p);
   }
   static void destruct_FairGenericParRootFileIo(void *p) {
      typedef ::FairGenericParRootFileIo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairGenericParRootFileIo

//______________________________________________________________________________
void FairParAsciiFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairParAsciiFileIo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairParAsciiFileIo::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairParAsciiFileIo::Class(),this);
   }
}

//______________________________________________________________________________
void FairParAsciiFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairParAsciiFileIo.
      TClass *R__cl = ::FairParAsciiFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*file", &file);
      FairParIo::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairParAsciiFileIo(void *p) {
      return  p ? new(p) ::FairParAsciiFileIo : new ::FairParAsciiFileIo;
   }
   static void *newArray_FairParAsciiFileIo(Long_t nElements, void *p) {
      return p ? new(p) ::FairParAsciiFileIo[nElements] : new ::FairParAsciiFileIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairParAsciiFileIo(void *p) {
      delete ((::FairParAsciiFileIo*)p);
   }
   static void deleteArray_FairParAsciiFileIo(void *p) {
      delete [] ((::FairParAsciiFileIo*)p);
   }
   static void destruct_FairParAsciiFileIo(void *p) {
      typedef ::FairParAsciiFileIo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairParAsciiFileIo

//______________________________________________________________________________
void FairParGenericSet::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairParGenericSet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairParGenericSet::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairParGenericSet::Class(),this);
   }
}

//______________________________________________________________________________
void FairParGenericSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairParGenericSet.
      TClass *R__cl = ::FairParGenericSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      FairParSet::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_FairParGenericSet(void *p) {
      delete ((::FairParGenericSet*)p);
   }
   static void deleteArray_FairParGenericSet(void *p) {
      delete [] ((::FairParGenericSet*)p);
   }
   static void destruct_FairParGenericSet(void *p) {
      typedef ::FairParGenericSet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairParGenericSet

//______________________________________________________________________________
void FairParIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairParIo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairParIo::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairParIo::Class(),this);
   }
}

//______________________________________________________________________________
void FairParIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairParIo.
      TClass *R__cl = ::FairParIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*detParIoList", &detParIoList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "autoWritable", &autoWritable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "filename", &filename);
      R__insp.InspectMember(filename, "filename.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairParIo(void *p) {
      return  p ? new(p) ::FairParIo : new ::FairParIo;
   }
   static void *newArray_FairParIo(Long_t nElements, void *p) {
      return p ? new(p) ::FairParIo[nElements] : new ::FairParIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairParIo(void *p) {
      delete ((::FairParIo*)p);
   }
   static void deleteArray_FairParIo(void *p) {
      delete [] ((::FairParIo*)p);
   }
   static void destruct_FairParIo(void *p) {
      typedef ::FairParIo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairParIo

//______________________________________________________________________________
void FairParRootFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairParRootFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairParRootFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairParRootFile::Class(),this);
   }
}

//______________________________________________________________________________
void FairParRootFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairParRootFile.
      TClass *R__cl = ::FairParRootFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RootFile", &RootFile);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_FairParRootFile(void *p) {
      delete ((::FairParRootFile*)p);
   }
   static void deleteArray_FairParRootFile(void *p) {
      delete [] ((::FairParRootFile*)p);
   }
   static void destruct_FairParRootFile(void *p) {
      typedef ::FairParRootFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairParRootFile

//______________________________________________________________________________
void FairParRootFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairParRootFileIo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairParRootFileIo::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairParRootFileIo::Class(),this);
   }
}

//______________________________________________________________________________
void FairParRootFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairParRootFileIo.
      TClass *R__cl = ::FairParRootFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*file", &file);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMerging", &fMerging);
      FairParIo::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairParRootFileIo(void *p) {
      return  p ? new(p) ::FairParRootFileIo : new ::FairParRootFileIo;
   }
   static void *newArray_FairParRootFileIo(Long_t nElements, void *p) {
      return p ? new(p) ::FairParRootFileIo[nElements] : new ::FairParRootFileIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairParRootFileIo(void *p) {
      delete ((::FairParRootFileIo*)p);
   }
   static void deleteArray_FairParRootFileIo(void *p) {
      delete [] ((::FairParRootFileIo*)p);
   }
   static void destruct_FairParRootFileIo(void *p) {
      typedef ::FairParRootFileIo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairParRootFileIo

//______________________________________________________________________________
void FairParSet::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairParSet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairParSet::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairParSet::Class(),this);
   }
}

//______________________________________________________________________________
void FairParSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairParSet.
      TClass *R__cl = ::FairParSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", &fName);
      R__insp.InspectMember(fName, "fName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitle", &fTitle);
      R__insp.InspectMember(fTitle, "fTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detName", &detName);
      R__insp.InspectMember(detName, "detName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "versions[3]", versions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status", &status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "changed", &changed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "owned", &owned);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "paramContext", &paramContext);
      R__insp.InspectMember(paramContext, "paramContext.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "author", &author);
      R__insp.InspectMember(author, "author.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "description", &description);
      R__insp.InspectMember(description, "description.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogger", &fLogger);
      FairDbObjTableMap::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairParSet(void *p) {
      return  p ? new(p) ::FairParSet : new ::FairParSet;
   }
   static void *newArray_FairParSet(Long_t nElements, void *p) {
      return p ? new(p) ::FairParSet[nElements] : new ::FairParSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairParSet(void *p) {
      delete ((::FairParSet*)p);
   }
   static void deleteArray_FairParSet(void *p) {
      delete [] ((::FairParSet*)p);
   }
   static void destruct_FairParSet(void *p) {
      typedef ::FairParSet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairParSet

//______________________________________________________________________________
void FairParVersion::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairParVersion.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairParVersion::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairParVersion::Class(),this);
   }
}

//______________________________________________________________________________
void FairParVersion::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairParVersion.
      TClass *R__cl = ::FairParVersion::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inputVersions[3]", inputVersions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rootVersion", &rootVersion);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairParVersion(void *p) {
      return  p ? new(p) ::FairParVersion : new ::FairParVersion;
   }
   static void *newArray_FairParVersion(Long_t nElements, void *p) {
      return p ? new(p) ::FairParVersion[nElements] : new ::FairParVersion[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairParVersion(void *p) {
      delete ((::FairParVersion*)p);
   }
   static void deleteArray_FairParVersion(void *p) {
      delete [] ((::FairParVersion*)p);
   }
   static void destruct_FairParVersion(void *p) {
      typedef ::FairParVersion current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairParVersion

//______________________________________________________________________________
void FairParamList::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairParamList.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairParamList::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairParamList::Class(),this);
   }
}

//______________________________________________________________________________
void FairParamList::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairParamList.
      TClass *R__cl = ::FairParamList::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*paramList", &paramList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogger", &fLogger);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairParamList(void *p) {
      return  p ? new(p) ::FairParamList : new ::FairParamList;
   }
   static void *newArray_FairParamList(Long_t nElements, void *p) {
      return p ? new(p) ::FairParamList[nElements] : new ::FairParamList[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairParamList(void *p) {
      delete ((::FairParamList*)p);
   }
   static void deleteArray_FairParamList(void *p) {
      delete [] ((::FairParamList*)p);
   }
   static void destruct_FairParamList(void *p) {
      typedef ::FairParamList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairParamList

//______________________________________________________________________________
void FairParamObj::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairParamObj.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairParamObj::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairParamObj::Class(),this);
   }
}

//______________________________________________________________________________
void FairParamObj::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairParamObj.
      TClass *R__cl = ::FairParamObj::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*paramValue", &paramValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arraySize", &arraySize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "paramType", &paramType);
      R__insp.InspectMember(paramType, "paramType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "basicType", &basicType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bytesPerValue", &bytesPerValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "classVersion", &classVersion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*streamerInfo", &streamerInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "streamerInfoSize", &streamerInfoSize);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairParamObj(void *p) {
      return  p ? new(p) ::FairParamObj : new ::FairParamObj;
   }
   static void *newArray_FairParamObj(Long_t nElements, void *p) {
      return p ? new(p) ::FairParamObj[nElements] : new ::FairParamObj[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairParamObj(void *p) {
      delete ((::FairParamObj*)p);
   }
   static void deleteArray_FairParamObj(void *p) {
      delete [] ((::FairParamObj*)p);
   }
   static void destruct_FairParamObj(void *p) {
      typedef ::FairParamObj current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairParamObj

//______________________________________________________________________________
void FairRtdbRun::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairRtdbRun.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairRtdbRun::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairRtdbRun::Class(),this);
   }
}

//______________________________________________________________________________
void FairRtdbRun::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairRtdbRun.
      TClass *R__cl = ::FairRtdbRun::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*parVersions", &parVersions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refRun", &refRun);
      R__insp.InspectMember(refRun, "refRun.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairRtdbRun(void *p) {
      return  p ? new(p) ::FairRtdbRun : new ::FairRtdbRun;
   }
   static void *newArray_FairRtdbRun(Long_t nElements, void *p) {
      return p ? new(p) ::FairRtdbRun[nElements] : new ::FairRtdbRun[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairRtdbRun(void *p) {
      delete ((::FairRtdbRun*)p);
   }
   static void deleteArray_FairRtdbRun(void *p) {
      delete [] ((::FairRtdbRun*)p);
   }
   static void destruct_FairRtdbRun(void *p) {
      typedef ::FairRtdbRun current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairRtdbRun

//______________________________________________________________________________
void FairRuntimeDb::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairRuntimeDb.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairRuntimeDb::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairRuntimeDb::Class(),this);
   }
}

//______________________________________________________________________________
void FairRuntimeDb::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairRuntimeDb.
      TClass *R__cl = ::FairRuntimeDb::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*containerList", &containerList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*runs", &runs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*firstInput", &firstInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*secondInput", &secondInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*output", &output);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*currentRun", &currentRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "currentFileName", &currentFileName);
      R__insp.InspectMember(currentFileName, "currentFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "versionsChanged", &versionsChanged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isRootFileOutput", &isRootFileOutput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogger", &fLogger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ioType", &ioType);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_FairRuntimeDb(void *p) {
      delete ((::FairRuntimeDb*)p);
   }
   static void deleteArray_FairRuntimeDb(void *p) {
      delete [] ((::FairRuntimeDb*)p);
   }
   static void destruct_FairRuntimeDb(void *p) {
      typedef ::FairRuntimeDb current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairRuntimeDb

//______________________________________________________________________________
void FairParTSQLIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairParTSQLIo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairParTSQLIo::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairParTSQLIo::Class(),this);
   }
}

//______________________________________________________________________________
void FairParTSQLIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairParTSQLIo.
      TClass *R__cl = ::FairParTSQLIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCurrentRun", &fCurrentRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefaultDb", &fDefaultDb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fConnections", &fConnections);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGlobalSeqNoIn", &fGlobalSeqNoIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGlobalSeqNoOut", &fGlobalSeqNoOut);
      FairParIo::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairParTSQLIo(void *p) {
      return  p ? new(p) ::FairParTSQLIo : new ::FairParTSQLIo;
   }
   static void *newArray_FairParTSQLIo(Long_t nElements, void *p) {
      return p ? new(p) ::FairParTSQLIo[nElements] : new ::FairParTSQLIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairParTSQLIo(void *p) {
      delete ((::FairParTSQLIo*)p);
   }
   static void deleteArray_FairParTSQLIo(void *p) {
      delete [] ((::FairParTSQLIo*)p);
   }
   static void destruct_FairParTSQLIo(void *p) {
      typedef ::FairParTSQLIo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairParTSQLIo

//______________________________________________________________________________
void FairDetParTSQLIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairDetParTSQLIo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairDetParTSQLIo::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairDetParTSQLIo::Class(),this);
   }
}

//______________________________________________________________________________
void FairDetParTSQLIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairDetParTSQLIo.
      TClass *R__cl = ::FairDetParTSQLIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefaultDb", &fDefaultDb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fConnections", &fConnections);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fcontainerList", &fcontainerList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*factContVers", &factContVers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "actRunId", &actRunId);
      FairDetParIo::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairDetParTSQLIo(void *p) {
      return  p ? new(p) ::FairDetParTSQLIo : new ::FairDetParTSQLIo;
   }
   static void *newArray_FairDetParTSQLIo(Long_t nElements, void *p) {
      return p ? new(p) ::FairDetParTSQLIo[nElements] : new ::FairDetParTSQLIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairDetParTSQLIo(void *p) {
      delete ((::FairDetParTSQLIo*)p);
   }
   static void deleteArray_FairDetParTSQLIo(void *p) {
      delete [] ((::FairDetParTSQLIo*)p);
   }
   static void destruct_FairDetParTSQLIo(void *p) {
      typedef ::FairDetParTSQLIo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairDetParTSQLIo

//______________________________________________________________________________
void FairGenericParTSQLIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class FairGenericParTSQLIo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FairGenericParTSQLIo::Class(),this);
   } else {
      R__b.WriteClassBuffer(FairGenericParTSQLIo::Class(),this);
   }
}

//______________________________________________________________________________
void FairGenericParTSQLIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FairGenericParTSQLIo.
      TClass *R__cl = ::FairGenericParTSQLIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRtdb", &fRtdb);
      FairDetParTSQLIo::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_FairGenericParTSQLIo(void *p) {
      return  p ? new(p) ::FairGenericParTSQLIo : new ::FairGenericParTSQLIo;
   }
   static void *newArray_FairGenericParTSQLIo(Long_t nElements, void *p) {
      return p ? new(p) ::FairGenericParTSQLIo[nElements] : new ::FairGenericParTSQLIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_FairGenericParTSQLIo(void *p) {
      delete ((::FairGenericParTSQLIo*)p);
   }
   static void deleteArray_FairGenericParTSQLIo(void *p) {
      delete [] ((::FairGenericParTSQLIo*)p);
   }
   static void destruct_FairGenericParTSQLIo(void *p) {
      typedef ::FairGenericParTSQLIo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::FairGenericParTSQLIo

/********************************************************
* /home/daq/fair_install_2015/ATTPCROOT_Feb/build/parbase/G__ParBaseDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__ParBaseDict();

extern "C" void G__set_cpp_environmentG__ParBaseDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("FairContFact.h");
  G__add_compiledheader("FairDetParAsciiFileIo.h");
  G__add_compiledheader("FairDetParIo.h");
  G__add_compiledheader("FairDetParRootFileIo.h");
  G__add_compiledheader("FairGenericParAsciiFileIo.h");
  G__add_compiledheader("FairGenericParRootFileIo.h");
  G__add_compiledheader("FairParAsciiFileIo.h");
  G__add_compiledheader("FairParGenericSet.h");
  G__add_compiledheader("FairParIo.h");
  G__add_compiledheader("FairParRootFileIo.h");
  G__add_compiledheader("FairParSet.h");
  G__add_compiledheader("FairParamList.h");
  G__add_compiledheader("FairRtdbRun.h");
  G__add_compiledheader("FairRuntimeDb.h");
  G__add_compiledheader("dbIO/FairParTSQLIo.h");
  G__add_compiledheader("dbIO/FairDetParTSQLIo.h");
  G__add_compiledheader("dbIO/FairGenericParTSQLIo.h");
  G__cpp_reset_tagtableG__ParBaseDict();
}
#include <new>
extern "C" int G__cpp_dllrevG__ParBaseDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* FairParIo */
static int G__G__ParBaseDict_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParIo[n];
     } else {
       p = new((void*) gvp) FairParIo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParIo;
     } else {
       p = new((void*) gvp) FairParIo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairParIo*) G__getstructoffset())->getDetParIo((const Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParIo*) G__getstructoffset())->setDetParIo((FairDetParIo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParIo*) G__getstructoffset())->removeDetParIo((Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParIo*) G__getstructoffset())->setInputNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParIo*) G__getstructoffset())->close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((FairParIo*) G__getstructoffset())->getFilename());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParIo*) G__getstructoffset())->setDetParIo((Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParIo*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParIo*) G__getstructoffset())->check());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParIo*) G__getstructoffset())->readVersions((FairRtdbRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParIo*) G__getstructoffset())->cd();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FairParIo*) G__getstructoffset())->setAutoWritable((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairParIo*) G__getstructoffset())->setAutoWritable();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParIo*) G__getstructoffset())->isAutoWritable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairParIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairParIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairParIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_193_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairParIo G__TFairParIo;
static int G__G__ParBaseDict_193_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairParIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairParIo*) (soff+(sizeof(FairParIo)*i)))->~G__TFairParIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairParIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairParIo*) (soff))->~G__TFairParIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairParSet */
static int G__G__ParBaseDict_194_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParSet(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) FairParSet(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParSet(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) FairParSet(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) FairParSet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParSet((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) FairParSet((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FairParSet[n];
       } else {
         p = new((void*) gvp) FairParSet[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FairParSet;
       } else {
         p = new((void*) gvp) FairParSet;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParSet*) G__getstructoffset())->init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParSet*) G__getstructoffset())->init((FairParIo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairParSet*) G__getstructoffset())->write());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairParSet*) G__getstructoffset())->write((FairParIo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParSet*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParSet*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((FairParSet*) G__getstructoffset())->getDetectorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParSet*) G__getstructoffset())->resetInputVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((FairParSet*) G__getstructoffset())->setInputVersion((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((FairParSet*) G__getstructoffset())->setInputVersion((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairParSet*) G__getstructoffset())->setInputVersion();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairParSet*) G__getstructoffset())->getInputVersion((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FairParSet*) G__getstructoffset())->setStatic((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairParSet*) G__getstructoffset())->setStatic();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParSet*) G__getstructoffset())->isStatic());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FairParSet*) G__getstructoffset())->setOwnership((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairParSet*) G__getstructoffset())->setOwnership();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParSet*) G__getstructoffset())->isOwned());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FairParSet*) G__getstructoffset())->setChanged((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairParSet*) G__getstructoffset())->setChanged();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParSet*) G__getstructoffset())->hasChanged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const FairParSet*) G__getstructoffset())->getParamContext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParSet*) G__getstructoffset())->setAuthor((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const FairParSet*) G__getstructoffset())->getAuthor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParSet*) G__getstructoffset())->setDescription((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const FairParSet*) G__getstructoffset())->getDescription());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParSet*) G__getstructoffset())->copyComment(*(FairParSet*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FairParSet*) G__getstructoffset())->fill((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairParSet*) G__getstructoffset())->fill();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FairParSet*) G__getstructoffset())->store((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairParSet*) G__getstructoffset())->store();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairParSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairParSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairParSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_194_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairParSet G__TFairParSet;
static int G__G__ParBaseDict_194_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairParSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairParSet*) (soff+(sizeof(FairParSet)*i)))->~G__TFairParSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairParSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairParSet*) (soff))->~G__TFairParSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairContainer */
static int G__G__ParBaseDict_195_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairContainer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairContainer(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) FairContainer(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContainer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairContainer*) G__getstructoffset())->addContext((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairContainer*) G__getstructoffset())->setActualContext((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((FairContainer*) G__getstructoffset())->getDefaultContext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((FairContainer*) G__getstructoffset())->getActualContext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairContainer*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((FairContainer*) G__getstructoffset())->getConcatName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((FairContainer*) G__getstructoffset())->getContext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairContainer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairContainer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairContainer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairContainer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairContainer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairContainer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairContainer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairContainer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_195_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairContainer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairContainer G__TFairContainer;
static int G__G__ParBaseDict_195_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairContainer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairContainer*) (soff+(sizeof(FairContainer)*i)))->~G__TFairContainer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairContainer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairContainer*) (soff))->~G__TFairContainer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairContFact */
static int G__G__ParBaseDict_196_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairContFact* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairContFact[n];
     } else {
       p = new((void*) gvp) FairContFact[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairContFact;
     } else {
       p = new((void*) gvp) FairContFact;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContFact));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairContFact*) G__getstructoffset())->addContext((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairContFact*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairContFact*) G__getstructoffset())->getContainer((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairContFact*) G__getstructoffset())->createContainer((FairContainer*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairContFact*) G__getstructoffset())->activateParIo((FairParIo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairContFact::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairContFact::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairContFact::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairContFact::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairContFact*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairContFact::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairContFact::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairContFact::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_196_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairContFact::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairContFact G__TFairContFact;
static int G__G__ParBaseDict_196_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairContFact*) (soff+(sizeof(FairContFact)*i)))->~G__TFairContFact();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairContFact*) (soff))->~G__TFairContFact();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairDetParIo */
static int G__G__ParBaseDict_197_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairDetParIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairDetParIo[n];
     } else {
       p = new((void*) gvp) FairDetParIo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairDetParIo;
     } else {
       p = new((void*) gvp) FairDetParIo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_197_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairDetParIo*) G__getstructoffset())->setInputNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_197_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairDetParIo*) G__getstructoffset())->getInputNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_197_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairDetParIo*) G__getstructoffset())->init((FairParSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_197_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairDetParIo*) G__getstructoffset())->write((FairParSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_197_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairDetParIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_197_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairDetParIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_197_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairDetParIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_197_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairDetParIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_197_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairDetParIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_197_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairDetParIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_197_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairDetParIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_197_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairDetParIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_197_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairDetParIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ParBaseDict_197_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FairDetParIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FairDetParIo(*(FairDetParIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairDetParIo G__TFairDetParIo;
static int G__G__ParBaseDict_197_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairDetParIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairDetParIo*) (soff+(sizeof(FairDetParIo)*i)))->~G__TFairDetParIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairDetParIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairDetParIo*) (soff))->~G__TFairDetParIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ParBaseDict_197_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairDetParIo* dest = (FairDetParIo*) G__getstructoffset();
   *dest = *(FairDetParIo*) libp->para[0].ref;
   const FairDetParIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairDetParAsciiFileIo */
static int G__G__ParBaseDict_198_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairDetParAsciiFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairDetParAsciiFileIo((fstream*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FairDetParAsciiFileIo((fstream*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_198_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairDetParAsciiFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_198_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairDetParAsciiFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_198_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairDetParAsciiFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_198_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairDetParAsciiFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_198_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairDetParAsciiFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_198_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairDetParAsciiFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_198_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairDetParAsciiFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_198_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairDetParAsciiFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_198_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairDetParAsciiFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairDetParAsciiFileIo G__TFairDetParAsciiFileIo;
static int G__G__ParBaseDict_198_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairDetParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairDetParAsciiFileIo*) (soff+(sizeof(FairDetParAsciiFileIo)*i)))->~G__TFairDetParAsciiFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairDetParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairDetParAsciiFileIo*) (soff))->~G__TFairDetParAsciiFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairParRootFile */
static int G__G__ParBaseDict_199_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParRootFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParRootFile(
(const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) FairParRootFile(
(const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParRootFile(
(const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) FairParRootFile(
(const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParRootFile((const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) FairParRootFile((const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParRootFile((const Text_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) FairParRootFile((const Text_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParRootFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairParRootFile((TFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FairParRootFile((TFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairParRootFile*) G__getstructoffset())->getRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParRootFile*) G__getstructoffset())->readVersions((FairRtdbRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParRootFile*) G__getstructoffset())->IsOpen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParRootFile*) G__getstructoffset())->cd();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParRootFile*) G__getstructoffset())->IsWritable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairParRootFile*) G__getstructoffset())->GetKey((Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairParRootFile*) G__getstructoffset())->GetListOfKeys());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParRootFile*) G__getstructoffset())->Close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairParRootFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParRootFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairParRootFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairParRootFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParRootFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParRootFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParRootFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParRootFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_199_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParRootFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairParRootFile G__TFairParRootFile;
static int G__G__ParBaseDict_199_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairParRootFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairParRootFile*) (soff+(sizeof(FairParRootFile)*i)))->~G__TFairParRootFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairParRootFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairParRootFile*) (soff))->~G__TFairParRootFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairDetParRootFileIo */
static int G__G__ParBaseDict_200_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairDetParRootFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairDetParRootFileIo((FairParRootFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FairDetParRootFileIo((FairParRootFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_200_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairDetParRootFileIo*) G__getstructoffset())->read((FairParSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_200_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairDetParRootFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_200_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairDetParRootFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_200_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairDetParRootFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_200_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairDetParRootFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_200_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairDetParRootFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_200_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairDetParRootFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_200_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairDetParRootFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_200_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairDetParRootFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_200_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairDetParRootFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairDetParRootFileIo G__TFairDetParRootFileIo;
static int G__G__ParBaseDict_200_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairDetParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairDetParRootFileIo*) (soff+(sizeof(FairDetParRootFileIo)*i)))->~G__TFairDetParRootFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairDetParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairDetParRootFileIo*) (soff))->~G__TFairDetParRootFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairParGenericSet */
static int G__G__ParBaseDict_201_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParGenericSet*) G__getstructoffset())->putParams((FairParamList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_201_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParGenericSet*) G__getstructoffset())->getParams((FairParamList*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_201_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParGenericSet*) G__getstructoffset())->printParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_201_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairParGenericSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_201_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParGenericSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_201_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairParGenericSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_201_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairParGenericSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_201_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParGenericSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_201_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParGenericSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_201_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParGenericSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_201_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParGenericSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_201_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParGenericSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairParGenericSet G__TFairParGenericSet;
static int G__G__ParBaseDict_201_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairParGenericSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairParGenericSet*) (soff+(sizeof(FairParGenericSet)*i)))->~G__TFairParGenericSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairParGenericSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairParGenericSet*) (soff))->~G__TFairParGenericSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairGenericParAsciiFileIo */
static int G__G__ParBaseDict_202_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairGenericParAsciiFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairGenericParAsciiFileIo((fstream*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) FairGenericParAsciiFileIo((fstream*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FairGenericParAsciiFileIo[n];
       } else {
         p = new((void*) gvp) FairGenericParAsciiFileIo[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FairGenericParAsciiFileIo;
       } else {
         p = new((void*) gvp) FairGenericParAsciiFileIo;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_202_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairGenericParAsciiFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_202_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairGenericParAsciiFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_202_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairGenericParAsciiFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_202_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairGenericParAsciiFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_202_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGenericParAsciiFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_202_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairGenericParAsciiFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_202_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairGenericParAsciiFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_202_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairGenericParAsciiFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_202_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairGenericParAsciiFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_202_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairGenericParAsciiFileIo*) G__getstructoffset())->readGenericSet((FairParGenericSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_202_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairGenericParAsciiFileIo*) G__getstructoffset())->writeGenericSet((FairParGenericSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairGenericParAsciiFileIo G__TFairGenericParAsciiFileIo;
static int G__G__ParBaseDict_202_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairGenericParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairGenericParAsciiFileIo*) (soff+(sizeof(FairGenericParAsciiFileIo)*i)))->~G__TFairGenericParAsciiFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairGenericParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairGenericParAsciiFileIo*) (soff))->~G__TFairGenericParAsciiFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairGenericParRootFileIo */
static int G__G__ParBaseDict_203_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairGenericParRootFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairGenericParRootFileIo((FairParRootFile*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) FairGenericParRootFileIo((FairParRootFile*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FairGenericParRootFileIo[n];
       } else {
         p = new((void*) gvp) FairGenericParRootFileIo[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FairGenericParRootFileIo;
       } else {
         p = new((void*) gvp) FairGenericParRootFileIo;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_203_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairGenericParRootFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairGenericParRootFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairGenericParRootFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_203_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairGenericParRootFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_203_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGenericParRootFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_203_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairGenericParRootFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_203_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairGenericParRootFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairGenericParRootFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairGenericParRootFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairGenericParRootFileIo G__TFairGenericParRootFileIo;
static int G__G__ParBaseDict_203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairGenericParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairGenericParRootFileIo*) (soff+(sizeof(FairGenericParRootFileIo)*i)))->~G__TFairGenericParRootFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairGenericParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairGenericParRootFileIo*) (soff))->~G__TFairGenericParRootFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairRtdbRun */
static int G__G__ParBaseDict_204_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairRtdbRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairRtdbRun[n];
     } else {
       p = new((void*) gvp) FairRtdbRun[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairRtdbRun;
     } else {
       p = new((void*) gvp) FairRtdbRun;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairRtdbRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairRtdbRun((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) FairRtdbRun((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairRtdbRun((const Text_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) FairRtdbRun((const Text_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairRtdbRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairRtdbRun((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) FairRtdbRun((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairRtdbRun((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) FairRtdbRun((Int_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairRtdbRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairRtdbRun(*(FairRtdbRun*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) FairRtdbRun(*(FairRtdbRun*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((FairRtdbRun*) G__getstructoffset())->getRunId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRtdbRun*) G__getstructoffset())->addParVersion((FairParVersion*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairRtdbRun*) G__getstructoffset())->getParVersion((const Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairRtdbRun*) G__getstructoffset())->getParVersions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((FairRtdbRun*) G__getstructoffset())->getRefRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRtdbRun*) G__getstructoffset())->setRefRun((Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRtdbRun*) G__getstructoffset())->setRefRun((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRtdbRun*) G__getstructoffset())->resetInputVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRtdbRun*) G__getstructoffset())->resetOutputVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRtdbRun*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRtdbRun*) G__getstructoffset())->write(*(fstream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairRtdbRun::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairRtdbRun::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairRtdbRun::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairRtdbRun::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRtdbRun*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairRtdbRun::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairRtdbRun::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairRtdbRun::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_204_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairRtdbRun::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairRtdbRun G__TFairRtdbRun;
static int G__G__ParBaseDict_204_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairRtdbRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairRtdbRun*) (soff+(sizeof(FairRtdbRun)*i)))->~G__TFairRtdbRun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairRtdbRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairRtdbRun*) (soff))->~G__TFairRtdbRun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairParAsciiFileIo */
static int G__G__ParBaseDict_205_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParAsciiFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParAsciiFileIo[n];
     } else {
       p = new((void*) gvp) FairParAsciiFileIo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParAsciiFileIo;
     } else {
       p = new((void*) gvp) FairParAsciiFileIo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_205_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((FairParAsciiFileIo*) G__getstructoffset())->open((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((FairParAsciiFileIo*) G__getstructoffset())->open((const Text_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_205_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((FairParAsciiFileIo*) G__getstructoffset())->open((TList*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((FairParAsciiFileIo*) G__getstructoffset())->open((TList*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_205_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairParAsciiFileIo*) G__getstructoffset())->getFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_205_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairParAsciiFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_205_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParAsciiFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_205_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairParAsciiFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_205_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairParAsciiFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_205_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParAsciiFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_205_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParAsciiFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_205_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParAsciiFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_205_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParAsciiFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_205_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParAsciiFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairParAsciiFileIo G__TFairParAsciiFileIo;
static int G__G__ParBaseDict_205_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairParAsciiFileIo*) (soff+(sizeof(FairParAsciiFileIo)*i)))->~G__TFairParAsciiFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairParAsciiFileIo*) (soff))->~G__TFairParAsciiFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairParamList */
static int G__G__ParBaseDict_228_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParamList* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParamList[n];
     } else {
       p = new((void*) gvp) FairParamList[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParamList;
     } else {
       p = new((void*) gvp) FairParamList;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->add(*(FairParamObj*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), *(TArrayI*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), *(TArrayC*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), *(TArrayF*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), *(TArrayD*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (const UChar_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (const Int_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->addObject((const Text_t*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Text_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (UChar_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (UChar_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (TArrayI*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (TArrayC*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (TArrayF*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (TArrayD*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParamList*) G__getstructoffset())->fillObject((const Text_t*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairParamList*) G__getstructoffset())->find((const Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairParamList*) G__getstructoffset())->getList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairParamList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParamList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairParamList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairParamList::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamList*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParamList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParamList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParamList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_228_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParamList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairParamList G__TFairParamList;
static int G__G__ParBaseDict_228_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairParamList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairParamList*) (soff+(sizeof(FairParamList)*i)))->~G__TFairParamList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairParamList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairParamList*) (soff))->~G__TFairParamList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairParRootFileIo */
static int G__G__ParBaseDict_263_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParRootFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParRootFileIo[n];
     } else {
       p = new((void*) gvp) FairParRootFileIo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParRootFileIo;
     } else {
       p = new((void*) gvp) FairParRootFileIo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParRootFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairParRootFileIo((Bool_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FairParRootFileIo((Bool_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((FairParRootFileIo*) G__getstructoffset())->open((const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((FairParRootFileIo*) G__getstructoffset())->open((const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((FairParRootFileIo*) G__getstructoffset())->open((const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((FairParRootFileIo*) G__getstructoffset())->open((const Text_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((FairParRootFileIo*) G__getstructoffset())->open((TList*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((FairParRootFileIo*) G__getstructoffset())->open((TList*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((FairParRootFileIo*) G__getstructoffset())->open((TList*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((FairParRootFileIo*) G__getstructoffset())->open((TList*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairParRootFileIo*) G__getstructoffset())->getParRootFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairParRootFileIo*) G__getstructoffset())->getKeys());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParRootFileIo*) G__getstructoffset())->open((TFile*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParRootFileIo*) G__getstructoffset())->setMerging((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairParRootFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParRootFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairParRootFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairParRootFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParRootFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParRootFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParRootFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParRootFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_263_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParRootFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairParRootFileIo G__TFairParRootFileIo;
static int G__G__ParBaseDict_263_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairParRootFileIo*) (soff+(sizeof(FairParRootFileIo)*i)))->~G__TFairParRootFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairParRootFileIo*) (soff))->~G__TFairParRootFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairParamObj */
static int G__G__ParBaseDict_284_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParamObj((const Text_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) FairParamObj((const Text_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FairParamObj[n];
       } else {
         p = new((void*) gvp) FairParamObj[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FairParamObj;
       } else {
         p = new((void*) gvp) FairParamObj;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairParamObj(*(FairParamObj*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) FairParamObj(*(FairParamObj*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairParamObj((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) FairParamObj((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairParamObj((const Text_t*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) FairParamObj((const Text_t*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairParamObj((const Text_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) FairParamObj((const Text_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairParamObj(
(const Text_t*) G__int(libp->para[0]), (const Int_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) FairParamObj(
(const Text_t*) G__int(libp->para[0]), (const Int_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairParamObj(
(const Text_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) FairParamObj(
(const Text_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairParamObj(
(const Text_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) FairParamObj(
(const Text_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairParamObj((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) FairParamObj((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairParamObj(
(const Text_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) FairParamObj(
(const Text_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairParamObj(
(const Text_t*) G__int(libp->para[0]), (const UChar_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) FairParamObj(
(const Text_t*) G__int(libp->para[0]), (const UChar_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamObj*) G__getstructoffset())->setParamType((const Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((FairParamObj*) G__getstructoffset())->setLength((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamObj*) G__getstructoffset())->setParamValue((UChar_t*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamObj*) G__getstructoffset())->setClassVersion((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((FairParamObj*) G__getstructoffset())->setStreamerInfoSize((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamObj*) G__getstructoffset())->setStreamerInfo((UChar_t*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((FairParamObj*) G__getstructoffset())->getParamValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParamObj*) G__getstructoffset())->isBasicType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((FairParamObj*) G__getstructoffset())->getParamType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairParamObj*) G__getstructoffset())->getBytesPerValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairParamObj*) G__getstructoffset())->getClassVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairParamObj*) G__getstructoffset())->getLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairParamObj*) G__getstructoffset())->getNumParams());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((FairParamObj*) G__getstructoffset())->getStreamerInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairParamObj*) G__getstructoffset())->getStreamerInfoSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamObj*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairParamObj::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParamObj::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairParamObj::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairParamObj::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParamObj*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParamObj::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParamObj::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParamObj::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_284_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParamObj::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairParamObj G__TFairParamObj;
static int G__G__ParBaseDict_284_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairParamObj*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairParamObj*) (soff+(sizeof(FairParamObj)*i)))->~G__TFairParamObj();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairParamObj*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairParamObj*) (soff))->~G__TFairParamObj();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairParVersion */
static int G__G__ParBaseDict_286_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParVersion* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParVersion[n];
     } else {
       p = new((void*) gvp) FairParVersion[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParVersion;
     } else {
       p = new((void*) gvp) FairParVersion;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParVersion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParVersion* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FairParVersion((Text_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FairParVersion((Text_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParVersion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((FairParVersion*) G__getstructoffset())->setInputVersion((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((FairParVersion*) G__getstructoffset())->setInputVersion((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairParVersion*) G__getstructoffset())->setInputVersion();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairParVersion*) G__getstructoffset())->getInputVersion((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParVersion*) G__getstructoffset())->resetInputVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParVersion*) G__getstructoffset())->setRootVersion((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairParVersion*) G__getstructoffset())->getRootVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairParVersion::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParVersion::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairParVersion::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairParVersion::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParVersion*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParVersion::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParVersion::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParVersion::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_286_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParVersion::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ParBaseDict_286_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FairParVersion* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FairParVersion(*(FairParVersion*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParVersion));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairParVersion G__TFairParVersion;
static int G__G__ParBaseDict_286_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairParVersion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairParVersion*) (soff+(sizeof(FairParVersion)*i)))->~G__TFairParVersion();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairParVersion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairParVersion*) (soff))->~G__TFairParVersion();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ParBaseDict_286_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParVersion* dest = (FairParVersion*) G__getstructoffset();
   *dest = *(FairParVersion*) libp->para[0].ref;
   const FairParVersion& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairRuntimeDb */
static int G__G__ParBaseDict_287_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairRuntimeDb::instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->addParamContext((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->printParamContexts();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->addContFactory((FairContFact*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairRuntimeDb*) G__getstructoffset())->getContFactory((const Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->addContainer((FairParSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairRuntimeDb*) G__getstructoffset())->getContainer((const Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairRuntimeDb*) G__getstructoffset())->findContainer((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->removeContainer((Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->removeAllContainers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->initContainers((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->initContainers((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->initContainers((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FairRuntimeDb*) G__getstructoffset())->setContainersStatic((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairRuntimeDb*) G__getstructoffset())->setContainersStatic();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->writeContainers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->writeContainer((FairParSet*) G__int(libp->para[0]), (FairRtdbRun*) G__int(libp->para[1])
, (FairRtdbRun*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->writeContainer((FairParSet*) G__int(libp->para[0]), (FairRtdbRun*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((FairRuntimeDb*) G__getstructoffset())->addRun((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((FairRuntimeDb*) G__getstructoffset())->addRun((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairRuntimeDb*) G__getstructoffset())->getRun((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairRuntimeDb*) G__getstructoffset())->getRun((Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairRuntimeDb*) G__getstructoffset())->getCurrentRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((FairRuntimeDb*) G__getstructoffset())->getCurrentFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->clearRunList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->removeRun((Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->setInputVersion((Int_t) G__int(libp->para[0]), (Text_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->setRootOutputVersion((Int_t) G__int(libp->para[0]), (Text_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FairRuntimeDb*) G__getstructoffset())->setVersionsChanged((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairRuntimeDb*) G__getstructoffset())->setVersionsChanged();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->resetInputVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->resetOutputVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->resetAllVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->readAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->writeVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->saveOutput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->setFirstInput((FairParIo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->setSecondInput((FairParIo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairRuntimeDb*) G__getstructoffset())->setOutput((FairParIo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairRuntimeDb*) G__getstructoffset())->getFirstInput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairRuntimeDb*) G__getstructoffset())->getSecondInput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairRuntimeDb*) G__getstructoffset())->getOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->closeFirstInput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->closeSecondInput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->closeOutput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->activateParIo((FairParIo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairRuntimeDb*) G__getstructoffset())->getListOfContainers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairRuntimeDb*) G__getstructoffset())->findOutputVersion((FairParSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairRuntimeDb::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairRuntimeDb::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairRuntimeDb::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairRuntimeDb::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairRuntimeDb*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairRuntimeDb::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairRuntimeDb::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairRuntimeDb::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_287_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairRuntimeDb::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairRuntimeDb G__TFairRuntimeDb;
static int G__G__ParBaseDict_287_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairRuntimeDb*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairRuntimeDb*) (soff+(sizeof(FairRuntimeDb)*i)))->~G__TFairRuntimeDb();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairRuntimeDb*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairRuntimeDb*) (soff))->~G__TFairRuntimeDb();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairParTSQLIo */
static int G__G__ParBaseDict_290_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParTSQLIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParTSQLIo[n];
     } else {
       p = new((void*) gvp) FairParTSQLIo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParTSQLIo;
     } else {
       p = new((void*) gvp) FairParTSQLIo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParTSQLIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairParTSQLIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParTSQLIo(*(FairDbConnectionPool*) libp->para[0].ref, (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) FairParTSQLIo(*(FairDbConnectionPool*) libp->para[0].ref, (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairParTSQLIo(*(FairDbConnectionPool*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) FairParTSQLIo(*(FairDbConnectionPool*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParTSQLIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParTSQLIo*) G__getstructoffset())->disconnect();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairParTSQLIo*) G__getstructoffset())->open());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParTSQLIo*) G__getstructoffset())->SetDefaultDBNum((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const FairParTSQLIo*) G__getstructoffset())->GetDefaultDBNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const FairDbConnectionPool& obj = ((const FairParTSQLIo*) G__getstructoffset())->GetConnections();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FairParTSQLIo*) G__getstructoffset())->getCurrentRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FairParTSQLIo*) G__getstructoffset())->SetShutdown((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairParTSQLIo*) G__getstructoffset())->SetShutdown();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((FairParTSQLIo*) G__getstructoffset())->SetRollback(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((FairParTSQLIo*) G__getstructoffset())->SetRollback(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((FairParTSQLIo*) G__getstructoffset())->SetRollbackMode((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((FairParTSQLIo*) G__getstructoffset())->SetRollbackMode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairParTSQLIo*) G__getstructoffset())->SetRollbackMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FairParTSQLIo*) G__getstructoffset())->SetHoldConnection((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairParTSQLIo*) G__getstructoffset())->SetHoldConnection();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParTSQLIo*) G__getstructoffset())->SetQueryOrdering();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FairParTSQLIo*) G__getstructoffset())->SetCache(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((FairParTSQLIo*) G__getstructoffset())->SetCache();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParTSQLIo*) G__getstructoffset())->CombineDataType(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParTSQLIo*) G__getstructoffset())->SetGlobalSeqNoIn((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairParTSQLIo*) G__getstructoffset())->GetGlobalSeqNoIn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairParTSQLIo*) G__getstructoffset())->GetGlobalSeqNoOut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FairParTSQLIo*) G__getstructoffset())->SetVerbosity((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FairParTSQLIo*) G__getstructoffset())->SetVerbosity();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairParTSQLIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParTSQLIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairParTSQLIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairParTSQLIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairParTSQLIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParTSQLIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParTSQLIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairParTSQLIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_290_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairParTSQLIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairParTSQLIo G__TFairParTSQLIo;
static int G__G__ParBaseDict_290_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairParTSQLIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairParTSQLIo*) (soff+(sizeof(FairParTSQLIo)*i)))->~G__TFairParTSQLIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairParTSQLIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairParTSQLIo*) (soff))->~G__TFairParTSQLIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairDetParTSQLIo */
static int G__G__ParBaseDict_291_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairDetParTSQLIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairDetParTSQLIo[n];
     } else {
       p = new((void*) gvp) FairDetParTSQLIo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairDetParTSQLIo;
     } else {
       p = new((void*) gvp) FairDetParTSQLIo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParTSQLIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairDetParTSQLIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairDetParTSQLIo(*(FairDbConnectionPool*) libp->para[0].ref, (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) FairDetParTSQLIo(*(FairDbConnectionPool*) libp->para[0].ref, (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairDetParTSQLIo(*(FairDbConnectionPool*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) FairDetParTSQLIo(*(FairDbConnectionPool*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParTSQLIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairDetParTSQLIo*) G__getstructoffset())->read((FairParSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((FairDetParTSQLIo*) G__getstructoffset())->getRunStart((FairParSet*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((FairDetParTSQLIo*) G__getstructoffset())->getRunStart());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairDetParTSQLIo*) G__getstructoffset())->commit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairDetParTSQLIo*) G__getstructoffset())->rollback();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairDetParTSQLIo*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairDetParTSQLIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairDetParTSQLIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairDetParTSQLIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairDetParTSQLIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairDetParTSQLIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairDetParTSQLIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairDetParTSQLIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairDetParTSQLIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_291_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairDetParTSQLIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairDetParTSQLIo G__TFairDetParTSQLIo;
static int G__G__ParBaseDict_291_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairDetParTSQLIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairDetParTSQLIo*) (soff+(sizeof(FairDetParTSQLIo)*i)))->~G__TFairDetParTSQLIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairDetParTSQLIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairDetParTSQLIo*) (soff))->~G__TFairDetParTSQLIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FairGenericParTSQLIo */
static int G__G__ParBaseDict_292_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairGenericParTSQLIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairGenericParTSQLIo[n];
     } else {
       p = new((void*) gvp) FairGenericParTSQLIo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairGenericParTSQLIo;
     } else {
       p = new((void*) gvp) FairGenericParTSQLIo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParTSQLIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_292_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FairGenericParTSQLIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairGenericParTSQLIo(*(FairDbConnectionPool*) libp->para[0].ref, (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) FairGenericParTSQLIo(*(FairDbConnectionPool*) libp->para[0].ref, (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FairGenericParTSQLIo(*(FairDbConnectionPool*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) FairGenericParTSQLIo(*(FairDbConnectionPool*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParTSQLIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_292_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FairGenericParTSQLIo*) G__getstructoffset())->read((FairParGenericSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_292_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FairGenericParTSQLIo*) G__getstructoffset())->writeSet((FairParGenericSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_292_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FairGenericParTSQLIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_292_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairGenericParTSQLIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_292_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FairGenericParTSQLIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_292_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FairGenericParTSQLIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_292_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FairGenericParTSQLIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_292_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairGenericParTSQLIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_292_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairGenericParTSQLIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_292_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FairGenericParTSQLIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ParBaseDict_292_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FairGenericParTSQLIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FairGenericParTSQLIo G__TFairGenericParTSQLIo;
static int G__G__ParBaseDict_292_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FairGenericParTSQLIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FairGenericParTSQLIo*) (soff+(sizeof(FairGenericParTSQLIo)*i)))->~G__TFairGenericParTSQLIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FairGenericParTSQLIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FairGenericParTSQLIo*) (soff))->~G__TFairGenericParTSQLIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* FairParIo */

/* FairParSet */

/* FairContainer */

/* FairContFact */

/* FairDetParIo */

/* FairDetParAsciiFileIo */

/* FairParRootFile */

/* FairDetParRootFileIo */

/* FairParGenericSet */

/* FairGenericParAsciiFileIo */

/* FairGenericParRootFileIo */

/* FairRtdbRun */

/* FairParAsciiFileIo */

/* FairParamList */

/* FairParRootFileIo */

/* FairParamObj */

/* FairParVersion */

/* FairRuntimeDb */

/* FairParTSQLIo */

/* FairDetParTSQLIo */

/* FairGenericParTSQLIo */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__ParBaseDict {
 public:
  G__Sizep2memfuncG__ParBaseDict(): p(&G__Sizep2memfuncG__ParBaseDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__ParBaseDict::*p)();
};

size_t G__get_sizep2memfuncG__ParBaseDict()
{
  G__Sizep2memfuncG__ParBaseDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__ParBaseDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo))) {
     FairParIo *G__Lderived;
     G__Lderived=(FairParIo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet))) {
     FairParSet *G__Lderived;
     G__Lderived=(FairParSet*)0x1000;
     {
       FairDbObjTableMap *G__Lpbase=(FairDbObjTableMap*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDbObjTableMap),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContainer))) {
     FairContainer *G__Lderived;
     G__Lderived=(FairContainer*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContainer),G__get_linked_tagnum(&G__G__ParBaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContainer),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContFact))) {
     FairContFact *G__Lderived;
     G__Lderived=(FairContFact*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContFact),G__get_linked_tagnum(&G__G__ParBaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContFact),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo))) {
     FairDetParIo *G__Lderived;
     G__Lderived=(FairDetParIo*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParAsciiFileIo))) {
     FairDetParAsciiFileIo *G__Lderived;
     G__Lderived=(FairDetParAsciiFileIo*)0x1000;
     {
       FairDetParIo *G__Lpbase=(FairDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParAsciiFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParAsciiFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParAsciiFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile))) {
     FairParRootFile *G__Lderived;
     G__Lderived=(FairParRootFile*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile),G__get_linked_tagnum(&G__G__ParBaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParRootFileIo))) {
     FairDetParRootFileIo *G__Lderived;
     G__Lderived=(FairDetParRootFileIo*)0x1000;
     {
       FairDetParIo *G__Lpbase=(FairDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParRootFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParRootFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParRootFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParGenericSet))) {
     FairParGenericSet *G__Lderived;
     G__Lderived=(FairParGenericSet*)0x1000;
     {
       FairParSet *G__Lpbase=(FairParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParGenericSet),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       FairDbObjTableMap *G__Lpbase=(FairDbObjTableMap*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParGenericSet),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDbObjTableMap),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParGenericSet),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParAsciiFileIo))) {
     FairGenericParAsciiFileIo *G__Lderived;
     G__Lderived=(FairGenericParAsciiFileIo*)0x1000;
     {
       FairDetParAsciiFileIo *G__Lpbase=(FairDetParAsciiFileIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParAsciiFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParAsciiFileIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       FairDetParIo *G__Lpbase=(FairDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParAsciiFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParAsciiFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParAsciiFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParRootFileIo))) {
     FairGenericParRootFileIo *G__Lderived;
     G__Lderived=(FairGenericParRootFileIo*)0x1000;
     {
       FairDetParRootFileIo *G__Lpbase=(FairDetParRootFileIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParRootFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParRootFileIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       FairDetParIo *G__Lpbase=(FairDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParRootFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParRootFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParRootFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun))) {
     FairRtdbRun *G__Lderived;
     G__Lderived=(FairRtdbRun*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun),G__get_linked_tagnum(&G__G__ParBaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParAsciiFileIo))) {
     FairParAsciiFileIo *G__Lderived;
     G__Lderived=(FairParAsciiFileIo*)0x1000;
     {
       FairParIo *G__Lpbase=(FairParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParAsciiFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParAsciiFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDbObjTableMap))) {
     FairDbObjTableMap *G__Lderived;
     G__Lderived=(FairDbObjTableMap*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDbObjTableMap),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamList))) {
     FairParamList *G__Lderived;
     G__Lderived=(FairParamList*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamList),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFileIo))) {
     FairParRootFileIo *G__Lderived;
     G__Lderived=(FairParRootFileIo*)0x1000;
     {
       FairParIo *G__Lpbase=(FairParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFileIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj))) {
     FairParamObj *G__Lderived;
     G__Lderived=(FairParamObj*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj),G__get_linked_tagnum(&G__G__ParBaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParVersion))) {
     FairParVersion *G__Lderived;
     G__Lderived=(FairParVersion*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParVersion),G__get_linked_tagnum(&G__G__ParBaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParVersion),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDb))) {
     FairRuntimeDb *G__Lderived;
     G__Lderived=(FairRuntimeDb*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDb),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParTSQLIo))) {
     FairParTSQLIo *G__Lderived;
     G__Lderived=(FairParTSQLIo*)0x1000;
     {
       FairParIo *G__Lpbase=(FairParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParTSQLIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParTSQLIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParTSQLIo))) {
     FairDetParTSQLIo *G__Lderived;
     G__Lderived=(FairDetParTSQLIo*)0x1000;
     {
       FairDetParIo *G__Lpbase=(FairDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParTSQLIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParTSQLIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParTSQLIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParTSQLIo))) {
     FairGenericParTSQLIo *G__Lderived;
     G__Lderived=(FairGenericParTSQLIo*)0x1000;
     {
       FairDetParTSQLIo *G__Lpbase=(FairDetParTSQLIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParTSQLIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParTSQLIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       FairDetParIo *G__Lpbase=(FairDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParTSQLIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParTSQLIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParTSQLIo),G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__ParBaseDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Text_t",99,-1,0,-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__ParBaseDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ParBaseDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ParBaseDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ParBaseDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ParBaseDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__ParBaseDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ParBaseDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ParBaseDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ParBaseDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ParBaseDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__ParBaseDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__ParBaseDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__ParBaseDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__ParBaseDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__ParBaseDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ParamIOType",117,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDbcLcLParamIOType),0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDb));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* FairParIo */
static void G__setup_memvarFairParIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo));
   { FairParIo *p; p=(FairParIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TList),-1,-1,2,"detParIoList=",0,"list of detector I/Os");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"autoWritable=",0,"flag indicating if automatic write is possible");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TString),-1,-1,2,"filename=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairParSet */
static void G__setup_memvarFairParSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet));
   { FairParSet *p; p=(FairParSet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TString),-1,-1,2,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TString),-1,-1,2,"fTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TString),-1,-1,2,"detName=",0,"! name of the detector the container belongs to");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"versions[3]=",0,"! versions of container in the 2 possible inputs");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"status=",0,"! static flag");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"changed=",0,"! flag is kTRUE if parameters have changed");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"owned=",0,"! if flag is KTRUE FairDB has the par. class ownership");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TString),-1,-1,2,"paramContext=",0,"Context/purpose for parameters and conditions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TString),-1,-1,2,"author=",0,"Author of parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TString),-1,-1,2,"description=",0,"Description of parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairLogger),-1,-1,2,"fLogger=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairContainer */
static void G__setup_memvarFairContainer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContainer));
   { FairContainer *p; p=(FairContainer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TList),-1,-1,2,"contexts=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TString),-1,-1,2,"actualContext=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairLogger),-1,-1,2,"fLogger=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairContFact */
static void G__setup_memvarFairContFact(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContFact));
   { FairContFact *p; p=(FairContFact*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TList),-1,-1,2,"containers=",0,"all parameter containers managed by this factory");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairLogger),-1,-1,2,"fLogger=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairDetParIo */
static void G__setup_memvarFairDetParIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo));
   { FairDetParIo *p; p=(FairDetParIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"inputNumber=",0,"input number (first or second input in runtime database)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairDetParAsciiFileIo */
static void G__setup_memvarFairDetParAsciiFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParAsciiFileIo));
   { FairDetParAsciiFileIo *p; p=(FairDetParAsciiFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TString),-1,-1,2,"fHeader=",0,"! header of container output in file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TString),-1,-1,2,"sepLine=",0,"! comment line");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("fstream"),-1,2,"pFile=",0,"! pointer to ascii file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairParRootFile */
static void G__setup_memvarFairParRootFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile));
   { FairParRootFile *p; p=(FairParRootFile*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun),-1,-1,1,"run=",0,"! pointer to current run in ROOT file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TFile),-1,-1,2,"RootFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairDetParRootFileIo */
static void G__setup_memvarFairDetParRootFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParRootFileIo));
   { FairDetParRootFileIo *p; p=(FairDetParRootFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile),-1,-1,2,"pFile=",0,"pointer to parameter ROOT file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairParGenericSet */
static void G__setup_memvarFairParGenericSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParGenericSet));
   { FairParGenericSet *p; p=(FairParGenericSet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairGenericParAsciiFileIo */
static void G__setup_memvarFairGenericParAsciiFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParAsciiFileIo));
   { FairGenericParAsciiFileIo *p; p=(FairGenericParAsciiFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairGenericParRootFileIo */
static void G__setup_memvarFairGenericParRootFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParRootFileIo));
   { FairGenericParRootFileIo *p; p=(FairGenericParRootFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairRtdbRun */
static void G__setup_memvarFairRtdbRun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun));
   { FairRtdbRun *p; p=(FairRtdbRun*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TList),-1,-1,2,"parVersions=",0,"List of container names with the versions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TString),-1,-1,2,"refRun=",0,"! name of the reference run for initialization");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairParAsciiFileIo */
static void G__setup_memvarFairParAsciiFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParAsciiFileIo));
   { FairParAsciiFileIo *p; p=(FairParAsciiFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("fstream"),-1,2,"file=",0,"pointer to a file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairParamList */
static void G__setup_memvarFairParamList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamList));
   { FairParamList *p; p=(FairParamList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TList),-1,-1,2,"paramList=",0,"List for parameters stored as string");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairLogger),-1,-1,2,"fLogger=",0,"FairRoot logging mechanism");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairParRootFileIo */
static void G__setup_memvarFairParRootFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFileIo));
   { FairParRootFileIo *p; p=(FairParRootFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile),-1,-1,2,"file=",0,"pointer to ROOT file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fMerging=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairParamObj */
static void G__setup_memvarFairParamObj(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj));
   { FairParamObj *p; p=(FairParamObj*)0x1000; if (p) { }
   G__memvar_setup((void*)0,66,0,0,-1,G__defined_typename("UChar_t"),-1,2,"paramValue=",0,"Pointer to binary array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"arraySize=",0,"Size of binary array");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TString),-1,-1,2,"paramType=",0,"Type of parameter value or class name");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"basicType=",0,"kTRUE for C-types and C-type parameter arrays, kFALSE for classes");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"bytesPerValue=",0,"number of bytes per value");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"classVersion=",0,"Code version of classes stored as binary");
   G__memvar_setup((void*)0,66,0,0,-1,G__defined_typename("UChar_t"),-1,2,"streamerInfo=",0,"Pointer to binary array container the streamer info");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"streamerInfoSize=",0,"Size of streamer info array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairParVersion */
static void G__setup_memvarFairParVersion(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParVersion));
   { FairParVersion *p; p=(FairParVersion*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"inputVersions[3]=",0,"! version of the parameter container in the 2 possible inputs");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"rootVersion=",0,"version of the parameter container in the ROOT output file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairRuntimeDb */
static void G__setup_memvarFairRuntimeDb(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDb));
   { FairRuntimeDb *p; p=(FairRuntimeDb*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDb),-1,-2,4,"gRtdb=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TList),-1,-1,2,"containerList=",0,"list of parameter containers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TList),-1,-1,2,"runs=",0,"list of runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo),-1,-1,2,"firstInput=",0,"first (prefered) input for parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo),-1,-1,2,"secondInput=",0,"second input (used if not found in first input)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo),-1,-1,2,"output=",0,"output for parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun),-1,-1,2,"currentRun=",0,"Current run");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TString),-1,-1,2,"currentFileName=",0,"Name of current event file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"versionsChanged=",0,"flag for write of list of runs (set kTRUE by each write)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"isRootFileOutput=",0,"flag indicating that the output is a ROOT file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairLogger),-1,-1,2,"fLogger=",0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDbcLcLParamIOType),-1,-2,2,"UNKNOWN_Type=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDbcLcLParamIOType),-1,-2,2,"AsciiFileOutput=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDbcLcLParamIOType),-1,-2,2,"RootFileOutput=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDbcLcLParamIOType),-1,-2,2,"RootTSQLOutput=3LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDbcLcLParamIOType),G__defined_typename("ParamIOType"),-1,2,"ioType=",0,"IO Type");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairParTSQLIo */
static void G__setup_memvarFairParTSQLIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParTSQLIo));
   { FairParTSQLIo *p; p=(FairParTSQLIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun),-1,-1,4,"fCurrentRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fDefaultDb=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDbConnectionPool),-1,-1,4,"fConnections=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGlobalSeqNoIn=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGlobalSeqNoOut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairDetParTSQLIo */
static void G__setup_memvarFairDetParTSQLIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParTSQLIo));
   { FairDetParTSQLIo *p; p=(FairDetParTSQLIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fDefaultDb=",0,"*< The default Database connection.*/");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDbConnectionPool),-1,-1,2,"fConnections=",0,"! FairDbConnection");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TList),-1,-1,2,"fcontainerList=",0,"! List of parameter containers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun),-1,-1,2,"factContVers=",0,"! The actual list of container versions");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"actRunId=",0,"actual runId (can be -1 if there are no data in Oracle)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FairGenericParTSQLIo */
static void G__setup_memvarFairGenericParTSQLIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParTSQLIo));
   { FairGenericParTSQLIo *p; p=(FairGenericParTSQLIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDb),-1,-1,4,"fRtdb=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__ParBaseDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncFairParIo(void) {
   /* FairParIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo));
   G__memfunc_setup("FairParIo",861,G__G__ParBaseDict_193_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDetParIo",1080,G__G__ParBaseDict_193_0_2, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setDetParIo",1092,G__G__ParBaseDict_193_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FairDetParIo' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("removeDetParIo",1414,G__G__ParBaseDict_193_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setInputNumber",1477,G__G__ParBaseDict_193_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,G__G__ParBaseDict_193_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getFilename",1121,G__G__ParBaseDict_193_0_7, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetParIo",1092,G__G__ParBaseDict_193_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,G__G__ParBaseDict_193_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("check",510,G__G__ParBaseDict_193_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("readVersions",1269,G__G__ParBaseDict_193_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FairRtdbRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cd",199,G__G__ParBaseDict_193_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setAutoWritable",1567,G__G__ParBaseDict_193_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isAutoWritable",1455,G__G__ParBaseDict_193_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParIo",861,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo), -1, 0, 1, 1, 4, 0, "u 'FairParIo' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo), -1, 1, 1, 1, 4, 0, "u 'FairParIo' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_193_0_17, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairParIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_193_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_193_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairParIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_193_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairParIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_193_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_193_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_193_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_193_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_193_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParIo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairParIo", 987, G__G__ParBaseDict_193_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairParSet(void) {
   /* FairParSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet));
   G__memfunc_setup("FairParSet",977,G__G__ParBaseDict_194_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet), -1, 0, 4, 1, 1, 0, 
"C - - 10 '\"\"' name C - - 10 '\"\"' title "
"C - - 10 '\"\"' context g - 'Bool_t' 0 'kFALSE' owner", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,G__G__ParBaseDict_194_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,G__G__ParBaseDict_194_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParIo' - 0 - io", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,G__G__ParBaseDict_194_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,G__G__ParBaseDict_194_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'FairParIo' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear",519,G__G__ParBaseDict_194_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,G__G__ParBaseDict_194_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getDetectorName",1531,G__G__ParBaseDict_194_0_10, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetInputVersions",1932,G__G__ParBaseDict_194_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInputVersion",1602,G__G__ParBaseDict_194_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '-1' v i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInputVersion",1590,G__G__ParBaseDict_194_0_13, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStatic",948,G__G__ParBaseDict_194_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isStatic",836,G__G__ParBaseDict_194_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOwnership",1291,G__G__ParBaseDict_194_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isOwned",729,G__G__ParBaseDict_194_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChanged",1014,G__G__ParBaseDict_194_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasChanged",998,G__G__ParBaseDict_194_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParamContext",1558,G__G__ParBaseDict_194_0_20, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAuthor",959,G__G__ParBaseDict_194_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAuthor",947,G__G__ParBaseDict_194_0_22, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDescription",1488,G__G__ParBaseDict_194_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDescription",1476,G__G__ParBaseDict_194_0_24, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyComment",1166,G__G__ParBaseDict_194_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'FairParSet' - 1 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateObjTableMap",1653,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDbObjTableMap), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,G__G__ParBaseDict_194_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' rid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("store",557,G__G__ParBaseDict_194_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' rid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet), -1, 1, 1, 1, 4, 0, "u 'FairParSet' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParSet",977,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet), -1, 0, 1, 1, 4, 0, "u 'FairParSet' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_194_0_31, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairParSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_194_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_194_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairParSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_194_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairParSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_194_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_194_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_194_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_194_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_194_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParSet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairParSet", 1103, G__G__ParBaseDict_194_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairContainer(void) {
   /* FairContainer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContainer));
   G__memfunc_setup("FairContainer",1317,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContainer), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairContainer",1317,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContainer), -1, 0, 1, 1, 4, 0, "u 'FairContainer' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContainer), -1, 1, 1, 1, 4, 0, "u 'FairContainer' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairContainer",1317,G__G__ParBaseDict_195_0_4, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContainer), -1, 0, 3, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addContext",1038,G__G__ParBaseDict_195_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setActualContext",1675,G__G__ParBaseDict_195_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDefaultContext",1770,G__G__ParBaseDict_195_0_7, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getActualContext",1663,G__G__ParBaseDict_195_0_8, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__G__ParBaseDict_195_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getConcatName",1305,G__G__ParBaseDict_195_0_10, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getContext",1061,G__G__ParBaseDict_195_0_11, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_195_0_12, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairContainer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_195_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairContainer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_195_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairContainer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_195_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairContainer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_195_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_195_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairContainer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_195_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairContainer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_195_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairContainer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_195_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairContainer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairContainer", 1443, G__G__ParBaseDict_195_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairContFact(void) {
   /* FairContFact */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContFact));
   G__memfunc_setup("FairContFact",1172,G__G__ParBaseDict_196_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContFact), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addContext",1038,G__G__ParBaseDict_196_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__G__ParBaseDict_196_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getContainer",1251,G__G__ParBaseDict_196_0_4, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet), -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createContainer",1559,G__G__ParBaseDict_196_0_5, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet), -1, 0, 1, 1, 1, 0, "U 'FairContainer' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("activateParIo",1324,G__G__ParBaseDict_196_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FairParIo' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getActualContext",1663,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 1, 1, 2, 1, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_196_0_8, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairContFact::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_196_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairContFact::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_196_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairContFact::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_196_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairContFact::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_196_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_196_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairContFact::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_196_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairContFact::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_196_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairContFact::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_196_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairContFact::DeclFileLine) ), 0);
   G__memfunc_setup("FairContFact",1172,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContFact), -1, 0, 1, 1, 4, 0, "u 'FairContFact' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContFact), -1, 1, 1, 1, 4, 0, "u 'FairContFact' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FairContFact", 1298, G__G__ParBaseDict_196_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairDetParIo(void) {
   /* FairDetParIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo));
   G__memfunc_setup("FairDetParIo",1146,G__G__ParBaseDict_197_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInputNumber",1477,G__G__ParBaseDict_197_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInputNumber",1465,G__G__ParBaseDict_197_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__G__ParBaseDict_197_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,G__G__ParBaseDict_197_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_197_0_6, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairDetParIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_197_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairDetParIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_197_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairDetParIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_197_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairDetParIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_197_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_197_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairDetParIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_197_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairDetParIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_197_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairDetParIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_197_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairDetParIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FairDetParIo", 1146, G__G__ParBaseDict_197_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo), -1, 0, 1, 1, 1, 0, "u 'FairDetParIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FairDetParIo", 1272, G__G__ParBaseDict_197_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ParBaseDict_197_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParIo), -1, 1, 1, 1, 1, 0, "u 'FairDetParIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairDetParAsciiFileIo(void) {
   /* FairDetParAsciiFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParAsciiFileIo));
   G__memfunc_setup("findContainer",1348,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "C - 'Text_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkAllFound",1299,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"I - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeHeader",1140,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"C - 'Text_t' 10 - - C - 'Text_t' 10 '\"\"' context "
"C - 'Text_t' 10 '\"\"' author C - 'Text_t' 10 '\"\"' description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeComment",1278,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'FairParSet' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readComment",1135,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - - U 'FairParSet' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairDetParAsciiFileIo",2019,G__G__ParBaseDict_198_0_6, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParAsciiFileIo), -1, 0, 1, 1, 1, 0, "U 'basic_fstream<char,char_traits<char> >' 'fstream' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParAsciiFileIo), -1, 1, 1, 1, 4, 0, "u 'FairDetParAsciiFileIo' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairDetParAsciiFileIo",2019,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParAsciiFileIo), -1, 0, 1, 1, 4, 0, "u 'FairDetParAsciiFileIo' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_198_0_9, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairDetParAsciiFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_198_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairDetParAsciiFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_198_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairDetParAsciiFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_198_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairDetParAsciiFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_198_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_198_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairDetParAsciiFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_198_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairDetParAsciiFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_198_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairDetParAsciiFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_198_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairDetParAsciiFileIo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairDetParAsciiFileIo", 2145, G__G__ParBaseDict_198_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairParRootFile(void) {
   /* FairParRootFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile));
   G__memfunc_setup("FairParRootFile",1481,G__G__ParBaseDict_199_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile), -1, 0, 4, 1, 1, 0, 
"C - 'Text_t' 10 - fname C - 'Option_t' 10 '\"READ\"' option "
"C - 'Text_t' 10 '\"\"' ftitle i - 'Int_t' 0 '1' compress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParRootFile",1481,G__G__ParBaseDict_199_0_2, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile), -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRun",629,G__G__ParBaseDict_199_0_3, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readVersions",1269,G__G__ParBaseDict_199_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FairRtdbRun' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOpen",590,G__G__ParBaseDict_199_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cd",199,G__G__ParBaseDict_199_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWritable",1014,G__G__ParBaseDict_199_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKey",585,G__G__ParBaseDict_199_0_8, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TKey), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfKeys",1293,G__G__ParBaseDict_199_0_9, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,G__G__ParBaseDict_199_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParRootFile",1481,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile), -1, 0, 1, 1, 4, 0, "u 'FairParRootFile' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile), -1, 1, 1, 1, 4, 0, "u 'FairParRootFile' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_199_0_13, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairParRootFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_199_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParRootFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_199_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairParRootFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_199_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairParRootFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_199_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_199_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParRootFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_199_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParRootFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_199_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParRootFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_199_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParRootFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairParRootFile", 1607, G__G__ParBaseDict_199_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairDetParRootFileIo(void) {
   /* FairDetParRootFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParRootFileIo));
   G__memfunc_setup("FairDetParRootFileIo",1950,G__G__ParBaseDict_200_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParRootFileIo), -1, 0, 1, 1, 1, 0, "U 'FairParRootFile' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,G__G__ParBaseDict_200_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("findInputVersion",1687,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "C - 'Text_t' 0 - contName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxVersion",1356,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "C - 'Text_t' 0 - contName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findContainer",1348,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TObject), -1, 0, 2, 1, 2, 0, 
"C - 'Text_t' 0 - contName i - 'Int_t' 0 - version", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairDetParRootFileIo",1950,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParRootFileIo), -1, 0, 1, 1, 4, 0, "u 'FairDetParRootFileIo' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParRootFileIo), -1, 1, 1, 1, 4, 0, "u 'FairDetParRootFileIo' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_200_0_9, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairDetParRootFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_200_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairDetParRootFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_200_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairDetParRootFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_200_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairDetParRootFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_200_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_200_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairDetParRootFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_200_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairDetParRootFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_200_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairDetParRootFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_200_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairDetParRootFileIo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairDetParRootFileIo", 2076, G__G__ParBaseDict_200_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairParGenericSet(void) {
   /* FairParGenericSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParGenericSet));
   G__memfunc_setup("putParams",957,G__G__ParBaseDict_201_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FairParamList' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("getParams",932,G__G__ParBaseDict_201_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParamList' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("printParams",1169,G__G__ParBaseDict_201_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParIo' - 0 - inp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'FairParIo' - 0 - output", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_201_0_8, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairParGenericSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_201_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParGenericSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_201_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairParGenericSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_201_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairParGenericSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_201_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_201_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParGenericSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_201_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParGenericSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_201_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParGenericSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_201_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParGenericSet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairParGenericSet", 1804, G__G__ParBaseDict_201_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairGenericParAsciiFileIo(void) {
   /* FairGenericParAsciiFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParAsciiFileIo));
   G__memfunc_setup("FairGenericParAsciiFileIo",2435,G__G__ParBaseDict_202_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParAsciiFileIo), -1, 0, 1, 1, 1, 0, "U 'basic_fstream<char,char_traits<char> >' 'fstream' 0 '0' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_202_0_4, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairGenericParAsciiFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_202_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairGenericParAsciiFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_202_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairGenericParAsciiFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_202_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairGenericParAsciiFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_202_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_202_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairGenericParAsciiFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_202_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairGenericParAsciiFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_202_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairGenericParAsciiFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_202_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairGenericParAsciiFileIo::DeclFileLine) ), 0);
   G__memfunc_setup("readGenericSet",1413,G__G__ParBaseDict_202_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParGenericSet' - 0 - pPar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeGenericSet",1556,G__G__ParBaseDict_202_0_17, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'FairParGenericSet' - 0 - pPar", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FairGenericParAsciiFileIo", 2561, G__G__ParBaseDict_202_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairGenericParRootFileIo(void) {
   /* FairGenericParRootFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParRootFileIo));
   G__memfunc_setup("FairGenericParRootFileIo",2366,G__G__ParBaseDict_203_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParRootFileIo), -1, 0, 1, 1, 1, 0, "U 'FairParRootFile' - 0 '0' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_203_0_3, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairGenericParRootFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_203_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairGenericParRootFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_203_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairGenericParRootFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_203_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairGenericParRootFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_203_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_203_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairGenericParRootFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_203_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairGenericParRootFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_203_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairGenericParRootFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_203_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairGenericParRootFileIo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairGenericParRootFileIo", 2492, G__G__ParBaseDict_203_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairRtdbRun(void) {
   /* FairRtdbRun */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun));
   G__memfunc_setup("FairRtdbRun",1091,G__G__ParBaseDict_204_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairRtdbRun",1091,G__G__ParBaseDict_204_0_2, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 '\"\"' refName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairRtdbRun",1091,G__G__ParBaseDict_204_0_3, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - r i - 'Int_t' 0 '-1' rr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairRtdbRun",1091,G__G__ParBaseDict_204_0_4, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun), -1, 0, 1, 1, 1, 0, "u 'FairRtdbRun' - 1 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRunId",802,G__G__ParBaseDict_204_0_5, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addParVersion",1330,G__G__ParBaseDict_204_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FairParVersion' - 0 - pv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParVersion",1353,G__G__ParBaseDict_204_0_7, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParVersion), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParVersions",1468,G__G__ParBaseDict_204_0_8, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRefRun",914,G__G__ParBaseDict_204_0_9, 67, -1, G__defined_typename("Text_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRefRun",926,G__G__ParBaseDict_204_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRefRun",926,G__G__ParBaseDict_204_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetInputVersions",1932,G__G__ParBaseDict_204_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetOutputVersions",2061,G__G__ParBaseDict_204_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__G__ParBaseDict_204_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,G__G__ParBaseDict_204_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_fstream<char,char_traits<char> >' 'fstream' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun), -1, 1, 1, 1, 4, 0, "u 'FairRtdbRun' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_204_0_17, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairRtdbRun::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_204_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairRtdbRun::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_204_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairRtdbRun::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_204_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairRtdbRun::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_204_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_204_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairRtdbRun::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_204_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairRtdbRun::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_204_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairRtdbRun::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_204_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairRtdbRun::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairRtdbRun", 1217, G__G__ParBaseDict_204_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairParAsciiFileIo(void) {
   /* FairParAsciiFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParAsciiFileIo));
   G__memfunc_setup("FairParAsciiFileIo",1734,G__G__ParBaseDict_205_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParAsciiFileIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__G__ParBaseDict_205_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - fname C - 'Text_t' 10 '\"in\"' status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__G__ParBaseDict_205_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TList' - 10 - fnamelist C - 'Text_t' 10 '\"in\"' status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("check",510,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getFile",704,G__G__ParBaseDict_205_0_7, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("fstream"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParAsciiFileIo",1734,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParAsciiFileIo), -1, 0, 1, 1, 4, 0, "u 'FairParAsciiFileIo' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParAsciiFileIo), -1, 1, 1, 1, 4, 0, "u 'FairParAsciiFileIo' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_205_0_10, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairParAsciiFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_205_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParAsciiFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_205_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairParAsciiFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_205_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairParAsciiFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_205_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_205_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParAsciiFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_205_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParAsciiFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_205_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParAsciiFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_205_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParAsciiFileIo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairParAsciiFileIo", 1860, G__G__ParBaseDict_205_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairParamList(void) {
   /* FairParamList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamList));
   G__memfunc_setup("FairParamList",1295,G__G__ParBaseDict_228_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__G__ParBaseDict_228_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'FairParamObj' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__G__ParBaseDict_228_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__G__ParBaseDict_228_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__G__ParBaseDict_228_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - f - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__G__ParBaseDict_228_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__G__ParBaseDict_228_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - u 'TArrayI' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__G__ParBaseDict_228_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - u 'TArrayC' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__G__ParBaseDict_228_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - u 'TArrayF' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__G__ParBaseDict_228_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - u 'TArrayD' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__G__ParBaseDict_228_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - B - 'UChar_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__G__ParBaseDict_228_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - I - 'Int_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__G__ParBaseDict_228_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - F - 'Float_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__G__ParBaseDict_228_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - D - 'Double_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addObject",896,G__G__ParBaseDict_228_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - U 'TObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__G__ParBaseDict_228_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - C - 'Text_t' 0 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__G__ParBaseDict_228_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - I - 'Int_t' 0 - - "
"i - 'Int_t' 10 '1' nValues", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__G__ParBaseDict_228_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - F - 'Float_t' 0 - - "
"i - 'Int_t' 10 '1' nValues", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__G__ParBaseDict_228_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - D - 'Double_t' 0 - - "
"i - 'Int_t' 10 '1' nValues", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__G__ParBaseDict_228_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - B - 'UChar_t' 0 - - "
"i - 'Int_t' 10 '1' nValues", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__G__ParBaseDict_228_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - U 'TArrayI' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__G__ParBaseDict_228_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - U 'TArrayC' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__G__ParBaseDict_228_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - U 'TArrayF' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__G__ParBaseDict_228_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - U 'TArrayD' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillObject",1022,G__G__ParBaseDict_228_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - U 'TObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__G__ParBaseDict_228_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__G__ParBaseDict_228_0_27, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getList",732,G__G__ParBaseDict_228_0_28, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParamList",1295,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamList), -1, 0, 1, 1, 4, 0, "u 'FairParamList' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamList), -1, 1, 1, 1, 4, 0, "u 'FairParamList' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_228_0_31, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairParamList::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_228_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParamList::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_228_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairParamList::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_228_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairParamList::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_228_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_228_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParamList::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_228_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParamList::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_228_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParamList::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_228_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParamList::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairParamList", 1421, G__G__ParBaseDict_228_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairParRootFileIo(void) {
   /* FairParRootFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFileIo));
   G__memfunc_setup("FairParRootFileIo",1665,G__G__ParBaseDict_263_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFileIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParRootFileIo",1665,G__G__ParBaseDict_263_0_2, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFileIo), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - merged", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__G__ParBaseDict_263_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - 'Text_t' 10 - fname C - 'Option_t' 10 '\"READ\"' option "
"C - 'Text_t' 10 '\"\"' ftitle i - 'Int_t' 0 '1' compress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__G__ParBaseDict_263_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"U 'TList' - 10 - fnamelist C - 'Option_t' 10 '\"READ\"' option "
"C - 'Text_t' 10 '\"\"' ftitle i - 'Int_t' 0 '1' compress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParRootFile",1415,G__G__ParBaseDict_263_0_7, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readVersions",1269,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'FairRtdbRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getKeys",732,G__G__ParBaseDict_263_0_9, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("check",510,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cd",199,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("open",434,G__G__ParBaseDict_263_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TFile' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMerging",1045,G__G__ParBaseDict_263_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - io", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParRootFileIo",1665,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFileIo), -1, 0, 1, 1, 4, 0, "u 'FairParRootFileIo' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParRootFileIo), -1, 1, 1, 1, 4, 0, "u 'FairParRootFileIo' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_263_0_16, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairParRootFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_263_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParRootFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_263_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairParRootFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_263_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairParRootFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_263_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_263_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParRootFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_263_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParRootFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_263_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParRootFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_263_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParRootFileIo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairParRootFileIo", 1791, G__G__ParBaseDict_263_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairParamObj(void) {
   /* FairParamObj */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj));
   G__memfunc_setup("FairParamObj",1166,G__G__ParBaseDict_284_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParamObj",1166,G__G__ParBaseDict_284_0_2, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj), -1, 0, 1, 1, 1, 0, "u 'FairParamObj' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParamObj",1166,G__G__ParBaseDict_284_0_3, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParamObj",1166,G__G__ParBaseDict_284_0_4, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - f - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParamObj",1166,G__G__ParBaseDict_284_0_5, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParamObj",1166,G__G__ParBaseDict_284_0_6, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - I - 'Int_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParamObj",1166,G__G__ParBaseDict_284_0_7, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - F - 'Float_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParamObj",1166,G__G__ParBaseDict_284_0_8, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - D - 'Double_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParamObj",1166,G__G__ParBaseDict_284_0_9, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParamObj",1166,G__G__ParBaseDict_284_0_10, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - C - 'Char_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParamObj",1166,G__G__ParBaseDict_284_0_11, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - B - 'UChar_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParamType",1247,G__G__ParBaseDict_284_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLength",942,G__G__ParBaseDict_284_0_13, 66, -1, G__defined_typename("UChar_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParamValue",1338,G__G__ParBaseDict_284_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"B - 'UChar_t' 0 - - i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setClassVersion",1576,G__G__ParBaseDict_284_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStreamerInfoSize",1974,G__G__ParBaseDict_284_0_16, 66, -1, G__defined_typename("UChar_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStreamerInfo",1563,G__G__ParBaseDict_284_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"B - 'UChar_t' 0 - - i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParamValue",1326,G__G__ParBaseDict_284_0_18, 66, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBasicType",1120,G__G__ParBaseDict_284_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParamType",1235,G__G__ParBaseDict_284_0_20, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBytesPerValue",1643,G__G__ParBaseDict_284_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClassVersion",1564,G__G__ParBaseDict_284_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLength",930,G__G__ParBaseDict_284_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumParams",1236,G__G__ParBaseDict_284_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStreamerInfo",1551,G__G__ParBaseDict_284_0_25, 66, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStreamerInfoSize",1962,G__G__ParBaseDict_284_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__G__ParBaseDict_284_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParamObj), -1, 1, 1, 1, 4, 0, "u 'FairParamObj' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_284_0_29, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairParamObj::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_284_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParamObj::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_284_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairParamObj::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_284_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairParamObj::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_284_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_284_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParamObj::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_284_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParamObj::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_284_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParamObj::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_284_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParamObj::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairParamObj", 1292, G__G__ParBaseDict_284_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairParVersion(void) {
   /* FairParVersion */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParVersion));
   G__memfunc_setup("FairParVersion",1419,G__G__ParBaseDict_286_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParVersion), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParVersion",1419,G__G__ParBaseDict_286_0_2, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParVersion), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInputVersion",1602,G__G__ParBaseDict_286_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '-1' v i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInputVersion",1590,G__G__ParBaseDict_286_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetInputVersions",1932,G__G__ParBaseDict_286_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRootVersion",1494,G__G__ParBaseDict_286_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRootVersion",1482,G__G__ParBaseDict_286_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_286_0_8, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairParVersion::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_286_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParVersion::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_286_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairParVersion::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_286_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairParVersion::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_286_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_286_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParVersion::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_286_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParVersion::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_286_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParVersion::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_286_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParVersion::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FairParVersion", 1419, G__G__ParBaseDict_286_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParVersion), -1, 0, 1, 1, 1, 0, "u 'FairParVersion' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FairParVersion", 1545, G__G__ParBaseDict_286_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ParBaseDict_286_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParVersion), -1, 1, 1, 1, 1, 0, "u 'FairParVersion' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairRuntimeDb(void) {
   /* FairRuntimeDb */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDb));
   G__memfunc_setup("FairRuntimeDb",1292,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDb), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("instance",853,G__G__ParBaseDict_287_0_2, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDb), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (FairRuntimeDb* (*)())(&FairRuntimeDb::instance) ), 0);
   G__memfunc_setup("addParamContext",1535,G__G__ParBaseDict_287_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printParamContexts",1910,G__G__ParBaseDict_287_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addContFactory",1429,G__G__ParBaseDict_287_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FairContFact' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getContFactory",1452,G__G__ParBaseDict_287_0_6, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairContFact), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addContainer",1228,G__G__ParBaseDict_287_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getContainer",1251,G__G__ParBaseDict_287_0_8, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findContainer",1348,G__G__ParBaseDict_287_0_9, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParSet), -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeContainer",1585,G__G__ParBaseDict_287_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeAllContainers",1981,G__G__ParBaseDict_287_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initContainers",1482,G__G__ParBaseDict_287_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - runId i - 'Int_t' 0 '-1' refId "
"C - 'Text_t' 10 '\"\"' fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setContainersStatic",1994,G__G__ParBaseDict_287_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeContainers",1601,G__G__ParBaseDict_287_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeContainer",1486,G__G__ParBaseDict_287_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'FairParSet' - 0 - - U 'FairRtdbRun' - 0 - - "
"U 'FairRtdbRun' - 0 '0' refRun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addRun",606,G__G__ParBaseDict_287_0_16, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - runId i - 'Int_t' 0 '-1' refId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRun",629,G__G__ParBaseDict_287_0_17, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRun",629,G__G__ParBaseDict_287_0_18, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCurrentRun",1368,G__G__ParBaseDict_287_0_19, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCurrentFileName",1828,G__G__ParBaseDict_287_0_20, 67, -1, G__defined_typename("Text_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearRunList",1240,G__G__ParBaseDict_287_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeRun",963,G__G__ParBaseDict_287_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInputVersion",1602,G__G__ParBaseDict_287_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - run C - 'Text_t' 0 - container "
"i - 'Int_t' 0 - version i - 'Int_t' 0 - inputNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRootOutputVersion",2151,G__G__ParBaseDict_287_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - run C - 'Text_t' 0 - container "
"i - 'Int_t' 0 - version", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVersionsChanged",1871,G__G__ParBaseDict_287_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetInputVersions",1932,G__G__ParBaseDict_287_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetOutputVersions",2061,G__G__ParBaseDict_287_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetAllVersions",1685,G__G__ParBaseDict_287_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readAll",693,G__G__ParBaseDict_287_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeVersions",1412,G__G__ParBaseDict_287_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveOutput",1088,G__G__ParBaseDict_287_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirstInput",1380,G__G__ParBaseDict_287_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParIo' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSecondInput",1464,G__G__ParBaseDict_287_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParIo' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutput",989,G__G__ParBaseDict_287_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParIo' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstInput",1368,G__G__ParBaseDict_287_0_35, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSecondInput",1452,G__G__ParBaseDict_287_0_36, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOutput",977,G__G__ParBaseDict_287_0_37, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeFirstInput",1582,G__G__ParBaseDict_287_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeSecondInput",1666,G__G__ParBaseDict_287_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeOutput",1191,G__G__ParBaseDict_287_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("activateParIo",1324,G__G__ParBaseDict_287_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "U 'FairParIo' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getListOfContainers",1959,G__G__ParBaseDict_287_0_42, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__G__ParBaseDict_287_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findOutputVersion",1816,G__G__ParBaseDict_287_0_44, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairRuntimeDb",1292,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDb), -1, 0, 1, 1, 4, 0, "u 'FairRuntimeDb' - 11 - M", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRuntimeDb), -1, 1, 1, 1, 4, 0, "u 'FairRuntimeDb' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initContainers",1482,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_287_0_48, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairRuntimeDb::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_287_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairRuntimeDb::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_287_0_50, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairRuntimeDb::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_287_0_51, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairRuntimeDb::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_287_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_287_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairRuntimeDb::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_287_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairRuntimeDb::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_287_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairRuntimeDb::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_287_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairRuntimeDb::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairRuntimeDb", 1418, G__G__ParBaseDict_287_0_60, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairParTSQLIo(void) {
   /* FairParTSQLIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParTSQLIo));
   G__memfunc_setup("FairParTSQLIo",1185,G__G__ParBaseDict_290_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParTSQLIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParTSQLIo",1185,G__G__ParBaseDict_290_0_2, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParTSQLIo), -1, 0, 2, 1, 1, 0, 
"u 'FairDbConnectionPool' - 41 - cons i - - 40 '-1' dbNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("disconnect",1066,G__G__ParBaseDict_290_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetParIo",1092,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - io", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("check",510,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("open",434,G__G__ParBaseDict_290_0_6, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDefaultDBNum",1447,G__G__ParBaseDict_290_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 40 - dbNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDefaultDBNum",1435,G__G__ParBaseDict_290_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConnections",1443,G__G__ParBaseDict_290_0_11, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDbConnectionPool), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readVersions",1269,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'FairRtdbRun' - 0 - aRun", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getCurrentRun",1368,G__G__ParBaseDict_290_0_13, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairRtdbRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetShutdown",1160,G__G__ParBaseDict_290_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' shutdown", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRollback",1110,G__G__ParBaseDict_290_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - rollbackdate u 'TString' - 0 '\"*\"' tablename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRollbackMode",1499,G__G__ParBaseDict_290_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' mode u 'TString' - 0 '\"*\"' tablename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHoldConnection",1731,G__G__ParBaseDict_290_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQueryOrdering",1660,G__G__ParBaseDict_290_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCache",768,G__G__ParBaseDict_290_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' cache_file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CombineDataType",1497,G__G__ParBaseDict_290_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - input_type u 'TString' - 0 - other_type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGlobalSeqNoIn",1562,G__G__ParBaseDict_290_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - seqno", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGlobalSeqNoIn",1550,G__G__ParBaseDict_290_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGlobalSeqNoOut",1679,G__G__ParBaseDict_290_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVerbosity",1267,G__G__ParBaseDict_290_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("activateDetIo",1318,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairParTSQLIo",1185,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParTSQLIo), -1, 0, 1, 1, 4, 0, "u 'FairParTSQLIo' - 41 - ot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairParTSQLIo), -1, 1, 1, 1, 4, 0, "u 'FairParTSQLIo' - 41 - ot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_290_0_28, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairParTSQLIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_290_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParTSQLIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_290_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairParTSQLIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_290_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairParTSQLIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_290_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_290_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParTSQLIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_290_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParTSQLIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_290_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairParTSQLIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_290_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairParTSQLIo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairParTSQLIo", 1311, G__G__ParBaseDict_290_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairDetParTSQLIo(void) {
   /* FairDetParTSQLIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParTSQLIo));
   G__memfunc_setup("FairDetParTSQLIo",1470,G__G__ParBaseDict_291_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParTSQLIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairDetParTSQLIo",1470,G__G__ParBaseDict_291_0_2, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParTSQLIo), -1, 0, 2, 1, 1, 0, 
"u 'FairDbConnectionPool' - 41 - cons i - - 40 '-1' dbNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,G__G__ParBaseDict_291_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 - pars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 - pars", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getRunStart",1155,G__G__ParBaseDict_291_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 '0' pPar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("commit",649,G__G__ParBaseDict_291_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("rollback",842,G__G__ParBaseDict_291_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,G__G__ParBaseDict_291_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChanged",1014,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'FairParSet' - 0 - pars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairDetParTSQLIo",1470,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParTSQLIo), -1, 0, 1, 1, 4, 0, "u 'FairDetParTSQLIo' - 41 - ot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairDetParTSQLIo), -1, 1, 1, 1, 4, 0, "u 'FairDetParTSQLIo' - 41 - ot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_291_0_12, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairDetParTSQLIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_291_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairDetParTSQLIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_291_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairDetParTSQLIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_291_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairDetParTSQLIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_291_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_291_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairDetParTSQLIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_291_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairDetParTSQLIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_291_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairDetParTSQLIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_291_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairDetParTSQLIo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairDetParTSQLIo", 1596, G__G__ParBaseDict_291_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFairGenericParTSQLIo(void) {
   /* FairGenericParTSQLIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParTSQLIo));
   G__memfunc_setup("FairGenericParTSQLIo",1886,G__G__ParBaseDict_292_0_1, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParTSQLIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairGenericParTSQLIo",1886,G__G__ParBaseDict_292_0_2, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParTSQLIo), -1, 0, 2, 1, 1, 0, 
"u 'FairDbConnectionPool' - 41 - cons i - - 40 '-1' dbNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 - pPar", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("read",412,G__G__ParBaseDict_292_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'FairParGenericSet' - 0 - pPar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'FairParSet' - 0 - pars", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("writeSet",855,G__G__ParBaseDict_292_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'FairParGenericSet' - 0 - pars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FairGenericParTSQLIo",1886,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParTSQLIo), -1, 0, 1, 1, 4, 0, "u 'FairGenericParTSQLIo' - 41 - ot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__ParBaseDictLN_FairGenericParTSQLIo), -1, 1, 1, 1, 4, 0, "u 'FairGenericParTSQLIo' - 41 - ot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ParBaseDict_292_0_9, 85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FairGenericParTSQLIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ParBaseDict_292_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairGenericParTSQLIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ParBaseDict_292_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FairGenericParTSQLIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ParBaseDict_292_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FairGenericParTSQLIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ParBaseDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ParBaseDict_292_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ParBaseDict_292_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairGenericParTSQLIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ParBaseDict_292_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairGenericParTSQLIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ParBaseDict_292_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FairGenericParTSQLIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ParBaseDict_292_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FairGenericParTSQLIo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FairGenericParTSQLIo", 2012, G__G__ParBaseDict_292_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__ParBaseDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__ParBaseDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__ParBaseDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__ParBaseDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR = { "basic_fstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairLogger = { "FairLogger" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairParIo = { "FairParIo" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairParSet = { "FairParSet" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairContainer = { "FairContainer" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairContFact = { "FairContFact" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairDetParIo = { "FairDetParIo" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairDetParAsciiFileIo = { "FairDetParAsciiFileIo" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairParRootFile = { "FairParRootFile" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairDetParRootFileIo = { "FairDetParRootFileIo" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairParGenericSet = { "FairParGenericSet" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairGenericParAsciiFileIo = { "FairGenericParAsciiFileIo" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairGenericParRootFileIo = { "FairGenericParRootFileIo" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairRtdbRun = { "FairRtdbRun" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairParAsciiFileIo = { "FairParAsciiFileIo" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairDbObjTableMap = { "FairDbObjTableMap" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairParamList = { "FairParamList" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_TKey = { "TKey" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_TArrayC = { "TArrayC" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairParRootFileIo = { "FairParRootFileIo" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairParamObj = { "FairParamObj" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairParVersion = { "FairParVersion" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairRuntimeDb = { "FairRuntimeDb" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairRuntimeDbcLcLParamIOType = { "FairRuntimeDb::ParamIOType" , 101 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairDbConnectionPool = { "FairDbConnectionPool" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairParTSQLIo = { "FairParTSQLIo" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairDetParTSQLIo = { "FairDetParTSQLIo" , 99 , -1 };
G__linked_taginfo G__G__ParBaseDictLN_FairGenericParTSQLIo = { "FairGenericParTSQLIo" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__ParBaseDict() {
  G__G__ParBaseDictLN_TClass.tagnum = -1 ;
  G__G__ParBaseDictLN_TBuffer.tagnum = -1 ;
  G__G__ParBaseDictLN_TMemberInspector.tagnum = -1 ;
  G__G__ParBaseDictLN_TObject.tagnum = -1 ;
  G__G__ParBaseDictLN_TNamed.tagnum = -1 ;
  G__G__ParBaseDictLN_TString.tagnum = -1 ;
  G__G__ParBaseDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__ParBaseDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__ParBaseDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ParBaseDictLN_TList.tagnum = -1 ;
  G__G__ParBaseDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__ParBaseDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ParBaseDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__ParBaseDictLN_FairLogger.tagnum = -1 ;
  G__G__ParBaseDictLN_FairParIo.tagnum = -1 ;
  G__G__ParBaseDictLN_FairParSet.tagnum = -1 ;
  G__G__ParBaseDictLN_FairContainer.tagnum = -1 ;
  G__G__ParBaseDictLN_FairContFact.tagnum = -1 ;
  G__G__ParBaseDictLN_FairDetParIo.tagnum = -1 ;
  G__G__ParBaseDictLN_FairDetParAsciiFileIo.tagnum = -1 ;
  G__G__ParBaseDictLN_FairParRootFile.tagnum = -1 ;
  G__G__ParBaseDictLN_FairDetParRootFileIo.tagnum = -1 ;
  G__G__ParBaseDictLN_FairParGenericSet.tagnum = -1 ;
  G__G__ParBaseDictLN_FairGenericParAsciiFileIo.tagnum = -1 ;
  G__G__ParBaseDictLN_FairGenericParRootFileIo.tagnum = -1 ;
  G__G__ParBaseDictLN_FairRtdbRun.tagnum = -1 ;
  G__G__ParBaseDictLN_FairParAsciiFileIo.tagnum = -1 ;
  G__G__ParBaseDictLN_FairDbObjTableMap.tagnum = -1 ;
  G__G__ParBaseDictLN_FairParamList.tagnum = -1 ;
  G__G__ParBaseDictLN_TFile.tagnum = -1 ;
  G__G__ParBaseDictLN_TKey.tagnum = -1 ;
  G__G__ParBaseDictLN_TArrayC.tagnum = -1 ;
  G__G__ParBaseDictLN_FairParRootFileIo.tagnum = -1 ;
  G__G__ParBaseDictLN_TArrayD.tagnum = -1 ;
  G__G__ParBaseDictLN_TArrayF.tagnum = -1 ;
  G__G__ParBaseDictLN_TArrayI.tagnum = -1 ;
  G__G__ParBaseDictLN_FairParamObj.tagnum = -1 ;
  G__G__ParBaseDictLN_FairParVersion.tagnum = -1 ;
  G__G__ParBaseDictLN_FairRuntimeDb.tagnum = -1 ;
  G__G__ParBaseDictLN_FairRuntimeDbcLcLParamIOType.tagnum = -1 ;
  G__G__ParBaseDictLN_FairDbConnectionPool.tagnum = -1 ;
  G__G__ParBaseDictLN_FairParTSQLIo.tagnum = -1 ;
  G__G__ParBaseDictLN_FairDetParTSQLIo.tagnum = -1 ;
  G__G__ParBaseDictLN_FairGenericParTSQLIo.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__ParBaseDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_TString);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_TList);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairLogger);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairParIo),sizeof(FairParIo),-1,294656,"Base class for all parameter I/Os",G__setup_memvarFairParIo,G__setup_memfuncFairParIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairParSet),sizeof(FairParSet),-1,294656,"Base class for all parameter containers",G__setup_memvarFairParSet,G__setup_memfuncFairParSet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairContainer),sizeof(FairContainer),-1,327424,"class for list elements in class FairContFact",G__setup_memvarFairContainer,G__setup_memfuncFairContainer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairContFact),sizeof(FairContFact),-1,327424,"base class of all factories for parameter containers",G__setup_memvarFairContFact,G__setup_memfuncFairContFact);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairDetParIo),sizeof(FairDetParIo),-1,324864,"Base class for detector parameter IO",G__setup_memvarFairDetParIo,G__setup_memfuncFairDetParIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairDetParAsciiFileIo),sizeof(FairDetParAsciiFileIo),-1,327168,"Class for detector parameter I/O from ascii file",G__setup_memvarFairDetParAsciiFileIo,G__setup_memfuncFairDetParAsciiFileIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairParRootFile),sizeof(FairParRootFile),-1,327168,"ROOT file for Parameter I/O",G__setup_memvarFairParRootFile,G__setup_memfuncFairParRootFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairDetParRootFileIo),sizeof(FairDetParRootFileIo),-1,327168,"detector base class for parameter I/O from ROOT file",G__setup_memvarFairDetParRootFileIo,G__setup_memfuncFairDetParRootFileIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairParGenericSet),sizeof(FairParGenericSet),-1,324866,"Base class for generic-style parameter containers",G__setup_memvarFairParGenericSet,G__setup_memfuncFairParGenericSet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairGenericParAsciiFileIo),sizeof(FairGenericParAsciiFileIo),-1,324864,"I/O from Ascii file for parameter containers derived from FairParGenericSet",G__setup_memvarFairGenericParAsciiFileIo,G__setup_memfuncFairGenericParAsciiFileIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairGenericParRootFileIo),sizeof(FairGenericParRootFileIo),-1,324864,"I/O from ROOT file for parameter containers derived from FairParGenericSet",G__setup_memvarFairGenericParRootFileIo,G__setup_memfuncFairGenericParRootFileIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairRtdbRun),sizeof(FairRtdbRun),-1,327424,"Class for parameter version management of a run",G__setup_memvarFairRtdbRun,G__setup_memfuncFairRtdbRun);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairParAsciiFileIo),sizeof(FairParAsciiFileIo),-1,294656,"Parameter I/O from ASCII files",G__setup_memvarFairParAsciiFileIo,G__setup_memfuncFairParAsciiFileIo);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairDbObjTableMap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairParamList),sizeof(FairParamList),-1,294656,"Class for lists of parameters (of type FairParamObj)",G__setup_memvarFairParamList,G__setup_memfuncFairParamList);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_TKey);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_TArrayC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairParRootFileIo),sizeof(FairParRootFileIo),-1,327424,"Parameter I/O from ROOT files",G__setup_memvarFairParRootFileIo,G__setup_memfuncFairParRootFileIo);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_TArrayF);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_TArrayI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairParamObj),sizeof(FairParamObj),-1,327424,"Class for binary parameter object (name + binary array)",G__setup_memvarFairParamObj,G__setup_memfuncFairParamObj);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairParVersion),sizeof(FairParVersion),-1,324864,"Class for parameter versions",G__setup_memvarFairParVersion,G__setup_memfuncFairParVersion);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairRuntimeDb),sizeof(FairRuntimeDb),-1,294656,"Class for runtime database",G__setup_memvarFairRuntimeDb,G__setup_memfuncFairRuntimeDb);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairRuntimeDbcLcLParamIOType);
   G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairDbConnectionPool);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairParTSQLIo),sizeof(FairParTSQLIo),-1,327424,"Class for parameter I/O Using TSQL",G__setup_memvarFairParTSQLIo,G__setup_memfuncFairParTSQLIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairDetParTSQLIo),sizeof(FairDetParTSQLIo),-1,327424,(char*)NULL,G__setup_memvarFairDetParTSQLIo,G__setup_memfuncFairDetParTSQLIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ParBaseDictLN_FairGenericParTSQLIo),sizeof(FairGenericParTSQLIo),-1,327424,(char*)NULL,G__setup_memvarFairGenericParTSQLIo,G__setup_memfuncFairGenericParTSQLIo);
}
extern "C" void G__cpp_setupG__ParBaseDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__ParBaseDict()");
  G__set_cpp_environmentG__ParBaseDict();
  G__cpp_setup_tagtableG__ParBaseDict();

  G__cpp_setup_inheritanceG__ParBaseDict();

  G__cpp_setup_typetableG__ParBaseDict();

  G__cpp_setup_memvarG__ParBaseDict();

  G__cpp_setup_memfuncG__ParBaseDict();
  G__cpp_setup_globalG__ParBaseDict();
  G__cpp_setup_funcG__ParBaseDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__ParBaseDict();
  return;
}
class G__cpp_setup_initG__ParBaseDict {
  public:
    G__cpp_setup_initG__ParBaseDict() { G__add_setup_func("G__ParBaseDict",(G__incsetup)(&G__cpp_setupG__ParBaseDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__ParBaseDict() { G__remove_setup_func("G__ParBaseDict"); }
};
G__cpp_setup_initG__ParBaseDict G__cpp_setup_initializerG__ParBaseDict;

