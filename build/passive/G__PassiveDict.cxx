//
// File generated by /usr/local/fairsoft/fairsoft_jul14p3-install/bin/rootcint at Fri Jan 30 19:44:00 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIdaqdIfair_install_2015dIATTPCROOTdIbuilddIpassivedIG__PassiveDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__PassiveDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void AtCave_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AtCave(void *p = 0);
   static void *newArray_AtCave(Long_t size, void *p);
   static void delete_AtCave(void *p);
   static void deleteArray_AtCave(void *p);
   static void destruct_AtCave(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::AtCave*)
   {
      ::AtCave *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AtCave >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AtCave", ::AtCave::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT/passive/AtCave.h", 23,
                  typeid(::AtCave), DefineBehavior(ptr, ptr),
                  &::AtCave::Dictionary, isa_proxy, 4,
                  sizeof(::AtCave) );
      instance.SetNew(&new_AtCave);
      instance.SetNewArray(&newArray_AtCave);
      instance.SetDelete(&delete_AtCave);
      instance.SetDeleteArray(&deleteArray_AtCave);
      instance.SetDestructor(&destruct_AtCave);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::AtCave*)
   {
      return GenerateInitInstanceLocal((::AtCave*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AtCave*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AtPipe_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AtPipe(void *p = 0);
   static void *newArray_AtPipe(Long_t size, void *p);
   static void delete_AtPipe(void *p);
   static void deleteArray_AtPipe(void *p);
   static void destruct_AtPipe(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::AtPipe*)
   {
      ::AtPipe *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AtPipe >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AtPipe", ::AtPipe::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT/passive/AtPipe.h", 19,
                  typeid(::AtPipe), DefineBehavior(ptr, ptr),
                  &::AtPipe::Dictionary, isa_proxy, 4,
                  sizeof(::AtPipe) );
      instance.SetNew(&new_AtPipe);
      instance.SetNewArray(&newArray_AtPipe);
      instance.SetDelete(&delete_AtPipe);
      instance.SetDeleteArray(&deleteArray_AtPipe);
      instance.SetDestructor(&destruct_AtPipe);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::AtPipe*)
   {
      return GenerateInitInstanceLocal((::AtPipe*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AtPipe*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AtGeoCave_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AtGeoCave(void *p = 0);
   static void *newArray_AtGeoCave(Long_t size, void *p);
   static void delete_AtGeoCave(void *p);
   static void deleteArray_AtGeoCave(void *p);
   static void destruct_AtGeoCave(void *p);
   static void streamer_AtGeoCave(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::AtGeoCave*)
   {
      ::AtGeoCave *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AtGeoCave >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AtGeoCave", ::AtGeoCave::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT/passive/AtGeoCave.h", 29,
                  typeid(::AtGeoCave), DefineBehavior(ptr, ptr),
                  &::AtGeoCave::Dictionary, isa_proxy, 0,
                  sizeof(::AtGeoCave) );
      instance.SetNew(&new_AtGeoCave);
      instance.SetNewArray(&newArray_AtGeoCave);
      instance.SetDelete(&delete_AtGeoCave);
      instance.SetDeleteArray(&deleteArray_AtGeoCave);
      instance.SetDestructor(&destruct_AtGeoCave);
      instance.SetStreamerFunc(&streamer_AtGeoCave);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::AtGeoCave*)
   {
      return GenerateInitInstanceLocal((::AtGeoCave*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AtGeoCave*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AtMagnet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AtMagnet(void *p = 0);
   static void *newArray_AtMagnet(Long_t size, void *p);
   static void delete_AtMagnet(void *p);
   static void deleteArray_AtMagnet(void *p);
   static void destruct_AtMagnet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::AtMagnet*)
   {
      ::AtMagnet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AtMagnet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AtMagnet", ::AtMagnet::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT/passive/AtMagnet.h", 23,
                  typeid(::AtMagnet), DefineBehavior(ptr, ptr),
                  &::AtMagnet::Dictionary, isa_proxy, 4,
                  sizeof(::AtMagnet) );
      instance.SetNew(&new_AtMagnet);
      instance.SetNewArray(&newArray_AtMagnet);
      instance.SetDelete(&delete_AtMagnet);
      instance.SetDeleteArray(&deleteArray_AtMagnet);
      instance.SetDestructor(&destruct_AtMagnet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::AtMagnet*)
   {
      return GenerateInitInstanceLocal((::AtMagnet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AtMagnet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AtPassiveContFact_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AtPassiveContFact(void *p = 0);
   static void *newArray_AtPassiveContFact(Long_t size, void *p);
   static void delete_AtPassiveContFact(void *p);
   static void deleteArray_AtPassiveContFact(void *p);
   static void destruct_AtPassiveContFact(void *p);
   static void streamer_AtPassiveContFact(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::AtPassiveContFact*)
   {
      ::AtPassiveContFact *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AtPassiveContFact >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AtPassiveContFact", ::AtPassiveContFact::Class_Version(), "/home/daq/fair_install_2015/ATTPCROOT/passive/AtPassiveContFact.h", 24,
                  typeid(::AtPassiveContFact), DefineBehavior(ptr, ptr),
                  &::AtPassiveContFact::Dictionary, isa_proxy, 0,
                  sizeof(::AtPassiveContFact) );
      instance.SetNew(&new_AtPassiveContFact);
      instance.SetNewArray(&newArray_AtPassiveContFact);
      instance.SetDelete(&delete_AtPassiveContFact);
      instance.SetDeleteArray(&deleteArray_AtPassiveContFact);
      instance.SetDestructor(&destruct_AtPassiveContFact);
      instance.SetStreamerFunc(&streamer_AtPassiveContFact);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::AtPassiveContFact*)
   {
      return GenerateInitInstanceLocal((::AtPassiveContFact*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AtPassiveContFact*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *AtCave::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AtCave::Class_Name()
{
   return "AtCave";
}

//______________________________________________________________________________
const char *AtCave::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AtCave*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AtCave::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AtCave*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AtCave::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AtCave*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AtCave::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AtCave*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AtPipe::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AtPipe::Class_Name()
{
   return "AtPipe";
}

//______________________________________________________________________________
const char *AtPipe::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AtPipe*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AtPipe::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AtPipe*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AtPipe::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AtPipe*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AtPipe::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AtPipe*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AtGeoCave::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AtGeoCave::Class_Name()
{
   return "AtGeoCave";
}

//______________________________________________________________________________
const char *AtGeoCave::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AtGeoCave*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AtGeoCave::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AtGeoCave*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AtGeoCave::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AtGeoCave*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AtGeoCave::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AtGeoCave*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AtMagnet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AtMagnet::Class_Name()
{
   return "AtMagnet";
}

//______________________________________________________________________________
const char *AtMagnet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AtMagnet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AtMagnet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AtMagnet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AtMagnet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AtMagnet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AtMagnet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AtMagnet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AtPassiveContFact::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AtPassiveContFact::Class_Name()
{
   return "AtPassiveContFact";
}

//______________________________________________________________________________
const char *AtPassiveContFact::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AtPassiveContFact*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AtPassiveContFact::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AtPassiveContFact*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AtPassiveContFact::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AtPassiveContFact*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AtPassiveContFact::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AtPassiveContFact*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void AtMagnet::Streamer(TBuffer &R__b)
{
   // Stream an object of class AtMagnet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AtMagnet::Class(),this);
   } else {
      R__b.WriteClassBuffer(AtMagnet::Class(),this);
   }
}

//______________________________________________________________________________
void AtMagnet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AtMagnet.
      TClass *R__cl = ::AtMagnet::IsA();
      if (R__cl || R__insp.IsA()) { }
      FairModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AtMagnet(void *p) {
      return  p ? new(p) ::AtMagnet : new ::AtMagnet;
   }
   static void *newArray_AtMagnet(Long_t nElements, void *p) {
      return p ? new(p) ::AtMagnet[nElements] : new ::AtMagnet[nElements];
   }
   // Wrapper around operator delete
   static void delete_AtMagnet(void *p) {
      delete ((::AtMagnet*)p);
   }
   static void deleteArray_AtMagnet(void *p) {
      delete [] ((::AtMagnet*)p);
   }
   static void destruct_AtMagnet(void *p) {
      typedef ::AtMagnet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AtMagnet

//______________________________________________________________________________
void AtCave::Streamer(TBuffer &R__b)
{
   // Stream an object of class AtCave.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AtCave::Class(),this);
   } else {
      R__b.WriteClassBuffer(AtCave::Class(),this);
   }
}

//______________________________________________________________________________
void AtCave::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AtCave.
      TClass *R__cl = ::AtCave::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "world[3]", world);
      FairModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AtCave(void *p) {
      return  p ? new(p) ::AtCave : new ::AtCave;
   }
   static void *newArray_AtCave(Long_t nElements, void *p) {
      return p ? new(p) ::AtCave[nElements] : new ::AtCave[nElements];
   }
   // Wrapper around operator delete
   static void delete_AtCave(void *p) {
      delete ((::AtCave*)p);
   }
   static void deleteArray_AtCave(void *p) {
      delete [] ((::AtCave*)p);
   }
   static void destruct_AtCave(void *p) {
      typedef ::AtCave current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AtCave

//______________________________________________________________________________
void AtGeoCave::Streamer(TBuffer &R__b)
{
   // Stream an object of class AtGeoCave.

   FairGeoSet::Streamer(R__b);
}

//______________________________________________________________________________
void AtGeoCave::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AtGeoCave.
      TClass *R__cl = ::AtGeoCave::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", &name);
      R__insp.InspectMember(name, "name.");
      FairGeoSet::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AtGeoCave(void *p) {
      return  p ? new(p) ::AtGeoCave : new ::AtGeoCave;
   }
   static void *newArray_AtGeoCave(Long_t nElements, void *p) {
      return p ? new(p) ::AtGeoCave[nElements] : new ::AtGeoCave[nElements];
   }
   // Wrapper around operator delete
   static void delete_AtGeoCave(void *p) {
      delete ((::AtGeoCave*)p);
   }
   static void deleteArray_AtGeoCave(void *p) {
      delete [] ((::AtGeoCave*)p);
   }
   static void destruct_AtGeoCave(void *p) {
      typedef ::AtGeoCave current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AtGeoCave(TBuffer &buf, void *obj) {
      ((::AtGeoCave*)obj)->::AtGeoCave::Streamer(buf);
   }
} // end of namespace ROOT for class ::AtGeoCave

//______________________________________________________________________________
void AtPassiveContFact::Streamer(TBuffer &R__b)
{
   // Stream an object of class AtPassiveContFact.

   FairContFact::Streamer(R__b);
}

//______________________________________________________________________________
void AtPassiveContFact::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AtPassiveContFact.
      TClass *R__cl = ::AtPassiveContFact::IsA();
      if (R__cl || R__insp.IsA()) { }
      FairContFact::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AtPassiveContFact(void *p) {
      return  p ? new(p) ::AtPassiveContFact : new ::AtPassiveContFact;
   }
   static void *newArray_AtPassiveContFact(Long_t nElements, void *p) {
      return p ? new(p) ::AtPassiveContFact[nElements] : new ::AtPassiveContFact[nElements];
   }
   // Wrapper around operator delete
   static void delete_AtPassiveContFact(void *p) {
      delete ((::AtPassiveContFact*)p);
   }
   static void deleteArray_AtPassiveContFact(void *p) {
      delete [] ((::AtPassiveContFact*)p);
   }
   static void destruct_AtPassiveContFact(void *p) {
      typedef ::AtPassiveContFact current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AtPassiveContFact(TBuffer &buf, void *obj) {
      ((::AtPassiveContFact*)obj)->::AtPassiveContFact::Streamer(buf);
   }
} // end of namespace ROOT for class ::AtPassiveContFact

//______________________________________________________________________________
void AtPipe::Streamer(TBuffer &R__b)
{
   // Stream an object of class AtPipe.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AtPipe::Class(),this);
   } else {
      R__b.WriteClassBuffer(AtPipe::Class(),this);
   }
}

//______________________________________________________________________________
void AtPipe::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AtPipe.
      TClass *R__cl = ::AtPipe::IsA();
      if (R__cl || R__insp.IsA()) { }
      FairModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AtPipe(void *p) {
      return  p ? new(p) ::AtPipe : new ::AtPipe;
   }
   static void *newArray_AtPipe(Long_t nElements, void *p) {
      return p ? new(p) ::AtPipe[nElements] : new ::AtPipe[nElements];
   }
   // Wrapper around operator delete
   static void delete_AtPipe(void *p) {
      delete ((::AtPipe*)p);
   }
   static void deleteArray_AtPipe(void *p) {
      delete [] ((::AtPipe*)p);
   }
   static void destruct_AtPipe(void *p) {
      typedef ::AtPipe current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AtPipe

/********************************************************
* /home/daq/fair_install_2015/ATTPCROOT/build/passive/G__PassiveDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__PassiveDict();

extern "C" void G__set_cpp_environmentG__PassiveDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("AtCave.h");
  G__add_compiledheader("AtPipe.h");
  G__add_compiledheader("AtGeoCave.h");
  G__add_compiledheader("AtMagnet.h");
  G__add_compiledheader("AtPassiveContFact.h");
  G__cpp_reset_tagtableG__PassiveDict();
}
#include <new>
extern "C" int G__cpp_dllrevG__PassiveDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* AtCave */
static int G__G__PassiveDict_237_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtCave* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtCave((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) AtCave((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtCave((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) AtCave((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PassiveDictLN_AtCave));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_237_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtCave* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtCave[n];
     } else {
       p = new((void*) gvp) AtCave[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtCave;
     } else {
       p = new((void*) gvp) AtCave;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PassiveDictLN_AtCave));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_237_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AtCave::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_237_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtCave::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_237_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AtCave::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_237_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AtCave::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_237_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AtCave*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_237_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtCave::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_237_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtCave::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_237_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtCave::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_237_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtCave::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AtCave G__TAtCave;
static int G__G__PassiveDict_237_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AtCave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AtCave*) (soff+(sizeof(AtCave)*i)))->~G__TAtCave();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AtCave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AtCave*) (soff))->~G__TAtCave();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AtPipe */
static int G__G__PassiveDict_238_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtPipe* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtPipe((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) AtPipe((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtPipe((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) AtPipe((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PassiveDictLN_AtPipe));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_238_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtPipe* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtPipe[n];
     } else {
       p = new((void*) gvp) AtPipe[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtPipe;
     } else {
       p = new((void*) gvp) AtPipe;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PassiveDictLN_AtPipe));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_238_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AtPipe::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_238_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtPipe::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_238_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AtPipe::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_238_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AtPipe::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_238_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AtPipe*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_238_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtPipe::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_238_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtPipe::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_238_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtPipe::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_238_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtPipe::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AtPipe G__TAtPipe;
static int G__G__PassiveDict_238_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AtPipe*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AtPipe*) (soff+(sizeof(AtPipe)*i)))->~G__TAtPipe();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AtPipe*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AtPipe*) (soff))->~G__TAtPipe();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AtGeoCave */
static int G__G__PassiveDict_240_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtGeoCave* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtGeoCave[n];
     } else {
       p = new((void*) gvp) AtGeoCave[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtGeoCave;
     } else {
       p = new((void*) gvp) AtGeoCave;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PassiveDictLN_AtGeoCave));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_240_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AtGeoCave::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_240_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtGeoCave::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_240_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AtGeoCave::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_240_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AtGeoCave::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_240_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AtGeoCave*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_240_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtGeoCave::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_240_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtGeoCave::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_240_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtGeoCave::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_240_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtGeoCave::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AtGeoCave G__TAtGeoCave;
static int G__G__PassiveDict_240_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AtGeoCave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AtGeoCave*) (soff+(sizeof(AtGeoCave)*i)))->~G__TAtGeoCave();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AtGeoCave*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AtGeoCave*) (soff))->~G__TAtGeoCave();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AtMagnet */
static int G__G__PassiveDict_241_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtMagnet* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtMagnet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) AtMagnet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtMagnet((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) AtMagnet((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PassiveDictLN_AtMagnet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_241_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtMagnet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtMagnet[n];
     } else {
       p = new((void*) gvp) AtMagnet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtMagnet;
     } else {
       p = new((void*) gvp) AtMagnet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PassiveDictLN_AtMagnet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_241_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AtMagnet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_241_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtMagnet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_241_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AtMagnet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_241_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AtMagnet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_241_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AtMagnet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_241_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtMagnet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_241_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtMagnet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_241_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtMagnet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_241_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtMagnet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AtMagnet G__TAtMagnet;
static int G__G__PassiveDict_241_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AtMagnet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AtMagnet*) (soff+(sizeof(AtMagnet)*i)))->~G__TAtMagnet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AtMagnet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AtMagnet*) (soff))->~G__TAtMagnet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AtPassiveContFact */
static int G__G__PassiveDict_243_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AtPassiveContFact* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtPassiveContFact[n];
     } else {
       p = new((void*) gvp) AtPassiveContFact[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AtPassiveContFact;
     } else {
       p = new((void*) gvp) AtPassiveContFact;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__PassiveDictLN_AtPassiveContFact));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_243_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AtPassiveContFact::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_243_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtPassiveContFact::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_243_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AtPassiveContFact::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_243_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AtPassiveContFact::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_243_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AtPassiveContFact*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_243_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtPassiveContFact::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_243_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtPassiveContFact::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_243_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AtPassiveContFact::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__PassiveDict_243_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AtPassiveContFact::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AtPassiveContFact G__TAtPassiveContFact;
static int G__G__PassiveDict_243_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AtPassiveContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AtPassiveContFact*) (soff+(sizeof(AtPassiveContFact)*i)))->~G__TAtPassiveContFact();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AtPassiveContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AtPassiveContFact*) (soff))->~G__TAtPassiveContFact();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* AtCave */

/* AtPipe */

/* AtGeoCave */

/* AtMagnet */

/* AtPassiveContFact */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__PassiveDict {
 public:
  G__Sizep2memfuncG__PassiveDict(): p(&G__Sizep2memfuncG__PassiveDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__PassiveDict::*p)();
};

size_t G__get_sizep2memfuncG__PassiveDict()
{
  G__Sizep2memfuncG__PassiveDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__PassiveDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PassiveDictLN_AtCave))) {
     AtCave *G__Lderived;
     G__Lderived=(AtCave*)0x1000;
     {
       FairModule *G__Lpbase=(FairModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtCave),G__get_linked_tagnum(&G__G__PassiveDictLN_FairModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtCave),G__get_linked_tagnum(&G__G__PassiveDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtCave),G__get_linked_tagnum(&G__G__PassiveDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PassiveDictLN_AtPipe))) {
     AtPipe *G__Lderived;
     G__Lderived=(AtPipe*)0x1000;
     {
       FairModule *G__Lpbase=(FairModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtPipe),G__get_linked_tagnum(&G__G__PassiveDictLN_FairModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtPipe),G__get_linked_tagnum(&G__G__PassiveDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtPipe),G__get_linked_tagnum(&G__G__PassiveDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PassiveDictLN_AtGeoCave))) {
     AtGeoCave *G__Lderived;
     G__Lderived=(AtGeoCave*)0x1000;
     {
       FairGeoSet *G__Lpbase=(FairGeoSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtGeoCave),G__get_linked_tagnum(&G__G__PassiveDictLN_FairGeoSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtGeoCave),G__get_linked_tagnum(&G__G__PassiveDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtGeoCave),G__get_linked_tagnum(&G__G__PassiveDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PassiveDictLN_AtMagnet))) {
     AtMagnet *G__Lderived;
     G__Lderived=(AtMagnet*)0x1000;
     {
       FairModule *G__Lpbase=(FairModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtMagnet),G__get_linked_tagnum(&G__G__PassiveDictLN_FairModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtMagnet),G__get_linked_tagnum(&G__G__PassiveDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtMagnet),G__get_linked_tagnum(&G__G__PassiveDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__PassiveDictLN_AtPassiveContFact))) {
     AtPassiveContFact *G__Lderived;
     G__Lderived=(AtPassiveContFact*)0x1000;
     {
       FairContFact *G__Lpbase=(FairContFact*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtPassiveContFact),G__get_linked_tagnum(&G__G__PassiveDictLN_FairContFact),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtPassiveContFact),G__get_linked_tagnum(&G__G__PassiveDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtPassiveContFact),G__get_linked_tagnum(&G__G__PassiveDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__PassiveDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__PassiveDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__PassiveDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__PassiveDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__PassiveDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__PassiveDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__PassiveDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__PassiveDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__PassiveDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__PassiveDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__PassiveDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__PassiveDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__PassiveDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__PassiveDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__PassiveDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__PassiveDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* AtCave */
static void G__setup_memvarAtCave(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtCave));
   { AtCave *p; p=(AtCave*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"world[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PassiveDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AtPipe */
static void G__setup_memvarAtPipe(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtPipe));
   { AtPipe *p; p=(AtPipe*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PassiveDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AtGeoCave */
static void G__setup_memvarAtGeoCave(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtGeoCave));
   { AtGeoCave *p; p=(AtGeoCave*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__PassiveDictLN_TString),-1,-1,2,"name=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PassiveDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AtMagnet */
static void G__setup_memvarAtMagnet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtMagnet));
   { AtMagnet *p; p=(AtMagnet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PassiveDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AtPassiveContFact */
static void G__setup_memvarAtPassiveContFact(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtPassiveContFact));
   { AtPassiveContFact *p; p=(AtPassiveContFact*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__PassiveDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__PassiveDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncAtCave(void) {
   /* AtCave */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtCave));
   G__memfunc_setup("AtCave",564,G__G__PassiveDict_237_0_1, 105, G__get_linked_tagnum(&G__G__PassiveDictLN_AtCave), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"Exp Cave\"' Title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AtCave",564,G__G__PassiveDict_237_0_2, 105, G__get_linked_tagnum(&G__G__PassiveDictLN_AtCave), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructGeometry",1809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__PassiveDict_237_0_4, 85, G__get_linked_tagnum(&G__G__PassiveDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AtCave::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__PassiveDict_237_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtCave::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__PassiveDict_237_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AtCave::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__PassiveDict_237_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AtCave::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PassiveDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PassiveDict_237_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__PassiveDict_237_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtCave::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PassiveDict_237_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtCave::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__PassiveDict_237_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtCave::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PassiveDict_237_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtCave::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AtCave", 690, G__G__PassiveDict_237_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAtPipe(void) {
   /* AtPipe */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtPipe));
   G__memfunc_setup("AtPipe",579,G__G__PassiveDict_238_0_1, 105, G__get_linked_tagnum(&G__G__PassiveDictLN_AtPipe), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"At Pipe\"' Title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AtPipe",579,G__G__PassiveDict_238_0_2, 105, G__get_linked_tagnum(&G__G__PassiveDictLN_AtPipe), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructGeometry",1809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__PassiveDict_238_0_4, 85, G__get_linked_tagnum(&G__G__PassiveDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AtPipe::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__PassiveDict_238_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtPipe::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__PassiveDict_238_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AtPipe::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__PassiveDict_238_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AtPipe::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PassiveDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PassiveDict_238_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__PassiveDict_238_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtPipe::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PassiveDict_238_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtPipe::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__PassiveDict_238_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtPipe::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PassiveDict_238_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtPipe::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AtPipe", 705, G__G__PassiveDict_238_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAtGeoCave(void) {
   /* AtGeoCave */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtGeoCave));
   G__memfunc_setup("AtGeoCave",847,G__G__PassiveDict_240_0_1, 105, G__get_linked_tagnum(&G__G__PassiveDictLN_AtGeoCave), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModuleName",1319,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 1, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("read",412,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'basic_fstream<char,char_traits<char> >' 'fstream' 1 - - U 'FairGeoMedia' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("addRefNodes",1087,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_fstream<char,char_traits<char> >' 'fstream' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__PassiveDict_240_0_7, 85, G__get_linked_tagnum(&G__G__PassiveDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AtGeoCave::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__PassiveDict_240_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtGeoCave::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__PassiveDict_240_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AtGeoCave::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__PassiveDict_240_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AtGeoCave::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PassiveDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PassiveDict_240_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__PassiveDict_240_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtGeoCave::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PassiveDict_240_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtGeoCave::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__PassiveDict_240_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtGeoCave::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PassiveDict_240_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtGeoCave::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AtGeoCave", 973, G__G__PassiveDict_240_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAtMagnet(void) {
   /* AtMagnet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtMagnet));
   G__memfunc_setup("AtMagnet",785,G__G__PassiveDict_241_0_1, 105, G__get_linked_tagnum(&G__G__PassiveDictLN_AtMagnet), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"MY Magnet\"' Title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AtMagnet",785,G__G__PassiveDict_241_0_2, 105, G__get_linked_tagnum(&G__G__PassiveDictLN_AtMagnet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructGeometry",1809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__PassiveDict_241_0_4, 85, G__get_linked_tagnum(&G__G__PassiveDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AtMagnet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__PassiveDict_241_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtMagnet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__PassiveDict_241_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AtMagnet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__PassiveDict_241_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AtMagnet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PassiveDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PassiveDict_241_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__PassiveDict_241_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtMagnet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PassiveDict_241_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtMagnet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__PassiveDict_241_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtMagnet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PassiveDict_241_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtMagnet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AtMagnet", 911, G__G__PassiveDict_241_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAtPassiveContFact(void) {
   /* AtPassiveContFact */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__PassiveDictLN_AtPassiveContFact));
   G__memfunc_setup("setAllContainers",1659,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AtPassiveContFact",1698,G__G__PassiveDict_243_0_2, 105, G__get_linked_tagnum(&G__G__PassiveDictLN_AtPassiveContFact), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createContainer",1559,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PassiveDictLN_FairParSet), -1, 0, 1, 1, 1, 0, "U 'FairContainer' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__PassiveDict_243_0_4, 85, G__get_linked_tagnum(&G__G__PassiveDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AtPassiveContFact::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__PassiveDict_243_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtPassiveContFact::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__PassiveDict_243_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AtPassiveContFact::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__PassiveDict_243_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AtPassiveContFact::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__PassiveDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__PassiveDict_243_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__PassiveDict_243_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtPassiveContFact::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__PassiveDict_243_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtPassiveContFact::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__PassiveDict_243_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AtPassiveContFact::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__PassiveDict_243_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AtPassiveContFact::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AtPassiveContFact", 1824, G__G__PassiveDict_243_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__PassiveDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__PassiveDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__PassiveDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__PassiveDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR = { "basic_fstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_FairGeoSet = { "FairGeoSet" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_FairGeoMedia = { "FairGeoMedia" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__PassiveDictLN_FairContFact = { "FairContFact" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_FairParSet = { "FairParSet" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_FairModule = { "FairModule" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_AtCave = { "AtCave" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_AtPipe = { "AtPipe" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_AtGeoCave = { "AtGeoCave" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_AtMagnet = { "AtMagnet" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_FairContainer = { "FairContainer" , 99 , -1 };
G__linked_taginfo G__G__PassiveDictLN_AtPassiveContFact = { "AtPassiveContFact" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__PassiveDict() {
  G__G__PassiveDictLN_TClass.tagnum = -1 ;
  G__G__PassiveDictLN_TBuffer.tagnum = -1 ;
  G__G__PassiveDictLN_TMemberInspector.tagnum = -1 ;
  G__G__PassiveDictLN_TObject.tagnum = -1 ;
  G__G__PassiveDictLN_TNamed.tagnum = -1 ;
  G__G__PassiveDictLN_TString.tagnum = -1 ;
  G__G__PassiveDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__PassiveDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__PassiveDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__PassiveDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__PassiveDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__PassiveDictLN_FairGeoSet.tagnum = -1 ;
  G__G__PassiveDictLN_FairGeoMedia.tagnum = -1 ;
  G__G__PassiveDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__PassiveDictLN_FairContFact.tagnum = -1 ;
  G__G__PassiveDictLN_FairParSet.tagnum = -1 ;
  G__G__PassiveDictLN_FairModule.tagnum = -1 ;
  G__G__PassiveDictLN_AtCave.tagnum = -1 ;
  G__G__PassiveDictLN_AtPipe.tagnum = -1 ;
  G__G__PassiveDictLN_AtGeoCave.tagnum = -1 ;
  G__G__PassiveDictLN_AtMagnet.tagnum = -1 ;
  G__G__PassiveDictLN_FairContainer.tagnum = -1 ;
  G__G__PassiveDictLN_AtPassiveContFact.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__PassiveDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_TString);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_FairGeoSet);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_FairGeoMedia);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_FairContFact);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_FairParSet);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_FairModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_AtCave),sizeof(AtCave),-1,324864,"PNDCaveSD",G__setup_memvarAtCave,G__setup_memfuncAtCave);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_AtPipe),sizeof(AtPipe),-1,324864,"AtPIPE",G__setup_memvarAtPipe,G__setup_memfuncAtPipe);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_AtGeoCave),sizeof(AtGeoCave),-1,62720,"Class for the geometry of CAVE",G__setup_memvarAtGeoCave,G__setup_memfuncAtGeoCave);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_AtMagnet),sizeof(AtMagnet),-1,324864,(char*)NULL,G__setup_memvarAtMagnet,G__setup_memfuncAtMagnet);
   G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_FairContainer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__PassiveDictLN_AtPassiveContFact),sizeof(AtPassiveContFact),-1,62720,"Factory for all Passive parameter containers",G__setup_memvarAtPassiveContFact,G__setup_memfuncAtPassiveContFact);
}
extern "C" void G__cpp_setupG__PassiveDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__PassiveDict()");
  G__set_cpp_environmentG__PassiveDict();
  G__cpp_setup_tagtableG__PassiveDict();

  G__cpp_setup_inheritanceG__PassiveDict();

  G__cpp_setup_typetableG__PassiveDict();

  G__cpp_setup_memvarG__PassiveDict();

  G__cpp_setup_memfuncG__PassiveDict();
  G__cpp_setup_globalG__PassiveDict();
  G__cpp_setup_funcG__PassiveDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__PassiveDict();
  return;
}
class G__cpp_setup_initG__PassiveDict {
  public:
    G__cpp_setup_initG__PassiveDict() { G__add_setup_func("G__PassiveDict",(G__incsetup)(&G__cpp_setupG__PassiveDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__PassiveDict() { G__remove_setup_func("G__PassiveDict"); }
};
G__cpp_setup_initG__PassiveDict G__cpp_setup_initializerG__PassiveDict;

